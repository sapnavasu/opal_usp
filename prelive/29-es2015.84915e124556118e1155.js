(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{TUc7:function(e,t,a){"use strict";a.r(t),t.default='#standard_customized {\n  margin-bottom: 11%;\n}\n#standard_customized .red {\n  color: #ed1c27 !important;\n}\n#standard_customized .close {\n  width: 20px;\n  height: 20px;\n  background-color: #ffffff;\n  border-radius: 20px;\n  color: #262626;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n}\n#standard_customized .mat-input-element:disabled {\n  cursor: no-drop;\n}\n#standard_customized .addtioanlValues {\n  cursor: pointer !important;\n}\n#standard_customized .remark textarea.mat-input-element {\n  height: 100px;\n}\n#standard_customized .clearbtn {\n  height: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n  background-color: none;\n  border: 1px solid #d9d9d9;\n}\n#standard_customized .remove {\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n}\n#standard_customized .addbtn {\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n}\n#standard_customized .projlstngph span {\n  display: block;\n}\n#standard_customized .projlstngph span.tphid {\n  width: 30%;\n  height: 12px;\n  margin-top: 12px;\n}\n#standard_customized .projlstngph span.tphtitle {\n  width: 60%;\n  height: 12px;\n  margin-top: 12px;\n}\n#standard_customized .projlstngph span.tphtype {\n  width: 20%;\n  height: 12px;\n  margin-top: 12px;\n}\n#standard_customized .projlstngph span.tphstatus {\n  width: 100px;\n  height: 12px;\n  margin-top: 12px;\n}\n#standard_customized .projlstngph span.tphcount {\n  width: 40px;\n  height: 12px;\n  margin-top: 12px;\n}\n#standard_customized .projlstngph span.tphdesp {\n  width: 100%;\n  height: 12px;\n  margin-top: 12px;\n}\n#standard_customized .projlstngph .tphmore {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: #999;\n}\n#standard_customized .projlstngph .docrow {\n  display: flex;\n  width: 100%;\n}\n#standard_customized .projlstngph .docrow .docimg {\n  width: 80px;\n  height: 80px;\n  margin-right: 20px;\n}\n#standard_customized .projlstngph .docrow .doccontent {\n  display: flex;\n  flex-direction: column;\n}\n#standard_customized .projlstngph .docrow .doccontent .doctitle {\n  width: 50%;\n  height: 12px;\n}\n#standard_customized .projlstngph .docrow .doccontent .doccol {\n  display: flex;\n  flex-direction: row;\n}\n#standard_customized .projlstngph .docrow .doccontent .doccol .doccoldata {\n  width: 25%;\n  margin-right: 30px;\n  display: flex;\n  flex-direction: column;\n}\n#standard_customized .projlstngph .docrow .doccontent .doccol .doccoldata .docdate {\n  width: 150px;\n  height: 12px;\n}\n#standard_customized .projlstngph hr {\n  width: 100%;\n  border-top: 1px solid #ddd;\n  margin: 20px 0;\n}\n#standard_customized .projlstngph .targetjustify {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n}\n#standard_customized .projlstngph .targetjustify .pager {\n  width: 25%;\n  height: 32px;\n}\n#standard_customized .projlstngph .targetjustify .search {\n  width: 25%;\n  height: 32px;\n}\n#standard_customized .projlstngph .tablerow {\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  width: 100%;\n}\n#standard_customized .projlstngph .tablerow .tabletitle {\n  width: 18%;\n  margin-right: 2%;\n  height: 32px;\n}\n#standard_customized .projlstngph .project-lst {\n  border: 1px solid rgba(204, 204, 204, 0.5);\n  border-radius: 4px;\n  background-clip: padding-box;\n  background-color: #fff;\n  min-height: 242px;\n  width: 100%;\n  padding: 0px;\n  margin-top: 20px;\n}\n#standard_customized .projlstngph .project-lst .project-lst-header {\n  min-height: 180px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  padding: 15px;\n  position: relative;\n}\n#standard_customized .projlstngph .project-lst .project-lst-header .projimg {\n  width: 160px;\n  height: 160px;\n  margin-right: 20px;\n}\n#standard_customized .projlstngph .project-lst .project-lst-header .projdet {\n  display: flex;\n  flex-direction: column;\n  width: calc(100% - 160px);\n}\n#standard_customized .projlstngph .project-lst .project-lst-footer {\n  min-height: 60px;\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #ebeff5;\n  padding: 8px 0px !important;\n  align-items: center;\n  justify-content: space-between;\n}\n#standard_customized .listsector .viewclear {\n  min-width: 165px;\n  height: 40px;\n}\n#standard_customized .listsector .leftmainspace .subcontent {\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n}\n#standard_customized .listsector .leftmainspace .subcontent .widthoffirst, #standard_customized .listsector .leftmainspace .subcontent .descriptitlesector .descriptioncontent, #standard_customized .listsector .leftmainspace .subcontent .sectorheight, #standard_customized .listsector .leftmainspace .subcontent .secondwidth {\n  width: 50%;\n  height: 55px;\n  margin-bottom: 25px;\n}\n#standard_customized .listsector .leftmainspace .subcontent .secondwidth {\n  width: 100% !important;\n}\n#standard_customized .listsector .leftmainspace .subcontent .sectorheight {\n  width: 100% !important;\n  height: 45px !important;\n  margin-bottom: 6px !important;\n}\n#standard_customized .listsector .leftmainspace .subcontent .firstviewcontent p {\n  width: 35%;\n  height: 20px;\n  margin-bottom: 20px;\n}\n#standard_customized .listsector .leftmainspace .subcontent .descriptitlesector p {\n  width: 20%;\n  height: 15px;\n  margin-bottom: 20px;\n}\n#standard_customized .listsector .leftmainspace .subcontent .descriptitlesector .descriptioncontent {\n  width: 100% !important;\n  height: 85px !important;\n}\n#standard_customized .listsector .clearpro, #standard_customized .listsector .addviewload {\n  min-width: 80px;\n  height: 40px;\n}\n#standard_customized .listsector .addviewload {\n  min-width: 95px !important;\n}\n#standard_customized .listsector .alignload {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n#standard_customized .listsector .addviewload .heightofbtn {\n  height: 40px;\n}\n#standard_customized .placeholder-content {\n  height: 320px;\n  background: #000;\n  position: relative;\n  -webkit-animation-duration: 1.7s;\n          animation-duration: 1.7s;\n  -webkit-animation-fill-mode: forwards;\n          animation-fill-mode: forwards;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-name: placeholderAnimate;\n          animation-name: placeholderAnimate;\n  background: #f6f7f8;\n  background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\n  background-size: 1300px;\n}\n#standard_customized .placeholder-content_item {\n  width: 100%;\n  height: 20px;\n  position: absolute;\n  z-index: 2;\n}\n#standard_customized .placeholder-content_item:after,\n#standard_customized .placeholder-content_item:before {\n  width: inherit;\n  height: inherit;\n  content: "";\n  position: absolute;\n}\n@-webkit-keyframes placeholderAnimate {\n  0% {\n    background-position: -650px 0;\n  }\n  100% {\n    background-position: 650px 0;\n  }\n}\n@keyframes placeholderAnimate {\n  0% {\n    background-position: -650px 0;\n  }\n  100% {\n    background-position: 650px 0;\n  }\n}\n#standard_customized .pagetitle {\n  background: #000;\n  position: relative;\n  -webkit-animation-duration: 1.7s;\n          animation-duration: 1.7s;\n  -webkit-animation-fill-mode: forwards;\n          animation-fill-mode: forwards;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-name: pagetitleAnimate;\n          animation-name: pagetitleAnimate;\n  background: #f6f7f8;\n  background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\n  background-size: 1300px;\n}\n#standard_customized .pagetitle:before {\n  width: inherit;\n  height: inherit;\n  content: "";\n  position: absolute;\n}\n@-webkit-keyframes pagetitleAnimate {\n  0% {\n    background-position: -650px 0;\n  }\n  100% {\n    background-position: 650px 0;\n  }\n}\n@keyframes pagetitleAnimate {\n  0% {\n    background-position: -650px 0;\n  }\n  100% {\n    background-position: 650px 0;\n  }\n}\n#standard_customized .errors {\n  color: #dc4c64;\n}\n#standard_customized .mat-checkbox-disabled {\n  opacity: 0.5;\n  cursor: no-drop;\n  background-color: #f8f8f8;\n}\n#standard_customized #standard_course .approved {\n  color: #00a551;\n}\n#standard_customized #standard_course .update {\n  color: #0c4b9a;\n}\n#standard_customized #standard_course .declined {\n  color: #ed1c27;\n}\n#standard_customized #standard_course .new {\n  color: #f4811f;\n}\n#standard_customized #standard_course .requiredfiels h4 {\n  color: #262626;\n}\n#standard_customized #standard_course .requiredfiels .yesno {\n  display: flex;\n  align-items: center;\n}\n#standard_customized #standard_course .requiredfiels .yesno p {\n  color: #848484;\n}\n#standard_customized #standard_course .requiredfiels .yesno p span {\n  color: #dc4c64;\n}\n#standard_customized #standard_course .yesno {\n  display: flex;\n  align-items: center;\n}\n#standard_customized #standard_course .yesno p {\n  color: #848484;\n}\n#standard_customized #standard_course .yesno p span {\n  color: #dc4c64;\n}\n#standard_customized #standard_course .readonlyfield {\n  pointer-events: none;\n}\n#standard_customized #standard_course .readonlyfield .mat-form-field-outline {\n  background-color: #f8f8f8 !important;\n  cursor: no-drop !important;\n}\n#standard_customized #standard_course .readonlyfield input[readonly] {\n  cursor: no-drop !important;\n}\n#standard_customized #standard_course .readonlyfield .mat-select-arrow:before {\n  display: none;\n}\n#standard_customized #standard_course .txt-gry {\n  color: #848484;\n}\n#standard_customized #standard_course .txt-gry3 {\n  color: #262626 !important;\n}\n#standard_customized #standard_course #profile .hint {\n  width: 168px;\n  word-break: break-word;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field {\n  width: 162px !important;\n  height: 162px !important;\n}\n#standard_customized #standard_course #profile #uploaded .filers input.mat-input-element {\n  margin-top: 0rem !important;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: #999999;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field-appearance-outline .mat-form-field-flex {\n  padding: 0px !important;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 0 2px !important;\n  border-top: 0.4em solid transparent !important;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border: 1px solid currentcolor !important;\n  border-radius: 1px !important;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border: 1px solid currentcolor !important;\n  border-radius: 1px !important;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field-appearance-outline .mat-form-field-wrapper {\n  padding-bottom: 0px;\n}\n#standard_customized #standard_course #profile #uploaded .filers mat-label {\n  color: #999999;\n}\n#standard_customized #standard_course #profile #uploaded .filers mat-label span {\n  color: #ED1C27;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field label {\n  text-align: center;\n  margin-top: 1px;\n}\n#standard_customized #standard_course #profile #uploaded .filers input.mat-input-element {\n  background-color: #fff;\n  text-align: center;\n  height: 162px !important;\n  width: 162px !important;\n  margin-bottom: 2px !important;\n}\n#standard_customized #standard_course #profile #uploaded .filers .mat-form-field-suffix {\n  top: -0.75em;\n}\n#standard_customized #standard_course #profile #uploaded .document mat-label {\n  color: #999999;\n}\n#standard_customized #standard_course #profile #uploaded .document img {\n  width: 20px;\n}\n#standard_customized #standard_course #profile #uploaded .document mat-icon {\n  color: #999999;\n}\n#standard_customized #standard_course #profile #uploaded .document .mat-form-field-wrapper {\n  padding-bottom: 0px;\n}\n#standard_customized #standard_course #profile #uploaded .document .mat-form-field-outline-start {\n  border: none !important;\n  border-radius: 1px !important;\n}\n#standard_customized #standard_course #profile #uploaded .document .mat-form-field-outline-end {\n  border: none !important;\n  border-radius: 1px !important;\n}\n#standard_customized #standard_course .mat-radio-button .mat-radio-outer-circle {\n  border-color: #d9d9d9;\n}\n#standard_customized #standard_course .mat-radio-button.mat-accent .mat-radio-inner-circle {\n  background-color: #e20613 !important;\n}\n#standard_customized #standard_course .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #d9d9d9;\n}\n#standard_customized #standard_course .mat-radio-label-content {\n  color: #000000cc;\n  font-size: 16px;\n}\n#standard_customized #standard_course .mat-cell {\n  color: #262626;\n}\n#standard_customized #standard_course .mat-cell .document_img {\n  width: 32px;\n}\n#standard_customized #standard_course .mat-cell .viewdocument {\n  cursor: pointer;\n}\n#standard_customized #standard_course .daterangetime .md-drppicker {\n  width: 650px;\n  right: 0 !important;\n  margin-top: 20px;\n}\n#standard_customized #standard_course .closeanddateicon {\n  display: flex !important;\n  align-items: center !important;\n}\n#standard_customized #standard_course .mat-raised-button {\n  border-radius: 2px;\n  box-shadow: none;\n  font-size: 16px;\n}\n#standard_customized #standard_course .submit_btn {\n  background-color: #ED1C27 !important;\n  color: #fff !important;\n  min-width: 110px;\n  height: 45px;\n}\n#standard_customized #standard_course .setup_btn {\n  background-color: #848484 !important;\n  color: #fff !important;\n  min-width: 110px;\n  height: 45px;\n}\n#standard_customized #standard_course .cancelbtn {\n  min-width: 110px;\n  background-color: #e8e8e8;\n  color: #262626;\n  padding-left: 0px;\n  padding-right: 0px;\n  height: 45px;\n}\n#standard_customized #standard_course .mat-ink-bar {\n  width: 0px !important;\n}\n#standard_customized #standard_course .mat-tab-header {\n  border: 0px;\n}\n#standard_customized #standard_course .mat-tab-label-active {\n  background-color: #0c4b9a !important;\n  color: #fff !important;\n}\n#standard_customized #standard_course .mat-tab-label-active .contentcircle {\n  color: #ffffff !important;\n  border: 1px solid #fff !important;\n}\n#standard_customized #standard_course .mat-tab-label-active p {\n  color: #ffffff !important;\n}\n#standard_customized #standard_course .mat-tab-label-active p span {\n  color: #ffffff !important;\n}\n#standard_customized #standard_course .file_upload #uploaded {\n  display: flex;\n}\n@media (max-width: 1279px) {\n  #standard_customized #standard_course .file_upload #uploaded {\n    display: block;\n  }\n}\n#standard_customized #standard_course .file_upload #uploaded .filers {\n  width: 50%;\n}\n@media (max-width: 1279px) {\n  #standard_customized #standard_course .file_upload #uploaded .filers {\n    width: 100%;\n  }\n}\n#standard_customized #standard_course .file_upload #uploaded .document {\n  width: 50%;\n  padding-left: 30px;\n}\n#standard_customized #standard_course .file_upload #uploaded .document .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  display: none;\n}\n#standard_customized #standard_course .file_upload #uploaded .document .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  display: none;\n}\n#standard_customized #standard_course .file_upload #uploaded .document .mat-form-field-appearance-outline .mat-form-field-suffix {\n  left: -239px;\n}\n@media (max-width: 1279px) {\n  #standard_customized #standard_course .file_upload #uploaded .document {\n    width: 100%;\n    padding-left: 0px;\n  }\n}\n#standard_customized #standard_course .file_upload #uploaded .document .close_icons {\n  display: block;\n}\n#standard_customized #standard_course .file_upload #uploaded .document .delete_icon {\n  display: none;\n}\n#standard_customized #standard_course .file_upload #uploaded .document .view_btn {\n  display: block;\n  color: #848484;\n}\n#standard_customized #standard_course .workcheckbox {\n  display: flex;\n  align-items: center;\n}\n#standard_customized #standard_course .workcheckbox .mat-checkbox-inner-container {\n  width: 20px;\n  height: 20px;\n}\n#standard_customized #standard_course .workcheckbox .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #0c4b9a !important;\n}\n#standard_customized #standard_course .workcheckbox .mat-checkbox-frame {\n  border: 1px solid #c4c4c4;\n}\n#standard_customized #standard_course .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #00a551;\n}\n#standard_customized #standard_course .mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: #00a55062;\n}\n#standard_customized #standard_course .mat-tab-label {\n  opacity: 1;\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #eaedf2;\n  margin-right: 5px;\n  height: 80px;\n  justify-content: flex-start;\n  padding: 0 10px;\n  min-width: 125px;\n}\n#standard_customized #standard_course .mat-tab-label:nth-child(2) {\n  width: 250px;\n}\n#standard_customized #standard_course .mat-tab-list {\n  opacity: 1;\n  min-width: auto !important;\n  padding: 0px !important;\n  justify-content: flex-start;\n}\n#standard_customized #standard_course .mat-raised-button[disabled]:not([class*=mat-elevation-z]) {\n  cursor: no-drop;\n  opacity: 0.5;\n}\n#standard_customized #standard_course .mat-card {\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  position: relative;\n}\n#standard_customized #standard_course .mat-card .mat-card-content img {\n  width: 100px;\n  height: 100px;\n}\n#standard_customized #standard_course .mat-card .mat-card-content .cardinfo h4 {\n  color: #262626;\n}\n#standard_customized #standard_course .mat-card .mat-card-content .cardinfo .centre_info {\n  gap: 30px;\n}\n#standard_customized #standard_course .mat-card .mat-card-content .cardinfo .centre_info p {\n  color: #848484;\n}\n#standard_customized #standard_course .mat-card .mat-card-content .cardinfo .centre_info p span {\n  color: #262626;\n}\n#standard_customized #standard_course .mat-card .cardbtn {\n  position: absolute;\n  margin-top: -34px;\n  width: 93%;\n  border-radius: 20px;\n  display: flex;\n  align-items: baseline;\n  justify-content: end;\n}\n#standard_customized #standard_course .mat-card .cardbtn button {\n  border-radius: 20px;\n}\n#standard_customized #standard_course .tabscontent {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#standard_customized #standard_course .tabscontent .contentcircle {\n  width: 28px;\n  height: 28px;\n  min-width: 28px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center !important;\n  align-items: center !important;\n  background-clip: padding-box;\n  background-color: transparent;\n  color: #848484;\n  box-shadow: 0 0 8px rgba(51, 51, 51, 0.15);\n  border: 1px solid #848484;\n}\n#standard_customized #standard_course .tabscontent .tabtitle p {\n  color: #262626;\n  text-align: left;\n  white-space: normal;\n}\n#standard_customized #standard_course .tabscontent .tabtitle p span {\n  color: #ed1c27;\n}\n#standard_customized #standard_course .subtitleform {\n  font-weight: 700;\n}\n#standard_customized #standard_course .title h4 {\n  color: #0c4b9a;\n}\n#standard_customized #standard_course .title .subtitle h4 {\n  color: #262626;\n}\n#standard_customized #standard_course .title .line {\n  flex: 4;\n}\n#standard_customized #standard_course .title .line .mat-divider {\n  width: 12%;\n  border-top-width: 3px;\n  border-color: #ED1C27;\n}\n#standard_customized #standard_course .mat-input-element {\n  color: #262626;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #d9d9d9;\n  background-color: #ffffff;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border-radius: 3px 0 0 3px;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border-radius: 0 3px 3px 0;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: #6ba5ec;\n  background-color: #f8f8f8;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #0c4b9a;\n  background-color: #f8f8f8;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-focused.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  color: #0c4b9a;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  background-color: #f8f8f8;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-form-field-disabled .mat-select-arrow:before {\n  display: none !important;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #dc4c64;\n  background-color: #f8f8f8;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  transform: translateY(-0.9rem) scale(0.75);\n  color: #848484;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#standard_customized #standard_course .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap {\n  width: 0px !important;\n}\n#standard_customized #standard_course .paginationwithfilter {\n  display: flex !important;\n  justify-content: space-between !important;\n  align-items: center !important;\n}\n#standard_customized #standard_course .date_exp .mat-form-field-appearance-outline .mat-form-field-suffix {\n  display: flex;\n  align-items: center;\n}\n#standard_customized #standard_course .readonly input[readonly] {\n  cursor: no-drop;\n}\n#standard_customized #standard_course .mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: transparent !important;\n}\n#standard_customized #standard_course .mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #dc4c64 !important;\n}\n#standard_customized #standard_course .filter {\n  height: 45px;\n}\n#standard_customized #standard_course .userimg {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#standard_customized #standard_course .userimg img {\n  width: 168px;\n  height: 168px;\n}\n#standard_customized #standard_course .userimg img:hover {\n  transform: scale(1.1);\n}\n#standard_customized #standard_course .userimg span {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: 20px;\n  background-color: #c4c4c4;\n  position: relative;\n  top: 33px;\n  left: -44px;\n  opacity: 0.5;\n}\n#standard_customized #standard_course .userimg span:hover {\n  background-color: #ed1c2770;\n  transform: scale(1.1);\n}\n#standard_customized #standard_course .userimg span:hover .mat-icon {\n  color: #ED1C27;\n}\n#standard_customized #standard_course .mat-icon {\n  cursor: pointer;\n}\n#standard_customized #standard_course .mat-form-field-suffix .mat-icon {\n  color: #848484;\n  cursor: pointer;\n}\n#standard_customized #standard_course .icongroup .mat-icon {\n  background-color: #fff;\n  color: #848484;\n  padding: 10px;\n  border: 1px solid #d9d9d9;\n  border-radius: 3px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 25px;\n}\n#standard_customized #standard_course .icongroup .mat-icon.add {\n  background-color: #0c4b9a !important;\n  color: #fff !important;\n}\n#standard_customized #standard_course .add_icon {\n  color: #fff;\n  background-color: #0c4b9a;\n  padding: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#standard_customized #standard_course .arabiclanguage input,\n#standard_customized #standard_course .arabiclanguage .mat-form-field-label {\n  text-align: right;\n}\n#standard_customized #standard_course .arabiclanguage .mat-form-field-label {\n  text-align: right;\n}\n#standard_customized #standard_course .arabiclanguage .mat-error {\n  text-align: right;\n}\n#standard_customized #standard_course .editbtn {\n  background-color: transparent;\n  cursor: pointer;\n  padding: 4px;\n}\n#standard_customized #standard_course .editbtn:hover {\n  background-color: #ED1C27;\n  color: #fff;\n  border-radius: 2px;\n}\n#standard_customized #standard_course .courebox {\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  padding: 5px 10px;\n  margin: 2px;\n}\n#standard_customized #standard_course .subtitleform {\n  display: flex;\n}\n#standard_customized #standard_course .subtitleform .mat-icon {\n  color: #848484;\n}\n#standard_customized #standard_course .icongroup .mat-icon {\n  background-color: #fff;\n  border: 1px solid #d9d9d9;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 30px;\n}\n#standard_customized #standard_course #documents #uploaded,\n#standard_customized #standard_course .documents #uploaded {\n  display: flex;\n}\n@media (max-width: 959px) {\n  #standard_customized #standard_course #documents #uploaded,\n#standard_customized #standard_course .documents #uploaded {\n    display: block;\n  }\n}\n#standard_customized #standard_course #documents #uploaded .filers,\n#standard_customized #standard_course .documents #uploaded .filers {\n  width: 50%;\n}\n@media (max-width: 959px) {\n  #standard_customized #standard_course #documents #uploaded .filers,\n#standard_customized #standard_course .documents #uploaded .filers {\n    width: 100%;\n  }\n}\n#standard_customized #standard_course #documents #uploaded .document,\n#standard_customized #standard_course .documents #uploaded .document {\n  width: 50%;\n  padding-left: 30px;\n}\n#standard_customized #standard_course #documents #uploaded .document .mat-form-field-appearance-outline .mat-form-field-outline-start,\n#standard_customized #standard_course .documents #uploaded .document .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  display: none;\n}\n#standard_customized #standard_course #documents #uploaded .document .mat-form-field-appearance-outline .mat-form-field-outline-end,\n#standard_customized #standard_course .documents #uploaded .document .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  display: none;\n}\n#standard_customized #standard_course #documents #uploaded .document .mat-form-field-appearance-outline .mat-form-field-suffix,\n#standard_customized #standard_course .documents #uploaded .document .mat-form-field-appearance-outline .mat-form-field-suffix {\n  left: -239px;\n}\n@media (max-width: 959px) {\n  #standard_customized #standard_course #documents #uploaded .document,\n#standard_customized #standard_course .documents #uploaded .document {\n    width: 100%;\n    padding-left: 0px;\n  }\n}\n#standard_customized #standard_course #documents #uploaded .document .close_icons,\n#standard_customized #standard_course .documents #uploaded .document .close_icons {\n  display: block;\n}\n#standard_customized #standard_course #documents #uploaded .document .delete_icon,\n#standard_customized #standard_course .documents #uploaded .document .delete_icon {\n  display: none;\n}\n#standard_customized #standard_course #documents #uploaded .document .view_btn,\n#standard_customized #standard_course .documents #uploaded .document .view_btn {\n  display: block;\n  color: #848484;\n}\n#standard_customized #standard_course .masterPageTop {\n  display: flex;\n}\n#standard_customized #standard_course .availabledate {\n  padding: 15px;\n}\n#standard_customized #standard_course .availabletable {\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #fff;\n  margin: 10px 0px;\n  /*&.hidefilter{\n      #searchfilters{\n          display:none !important;\n      }\n  }*/\n}\n#standard_customized #standard_course .availabletable .mat-cell {\n  color: #262626;\n}\n#standard_customized #standard_course .availabletable .mat-header-cell {\n  color: #626366 !important;\n  background-color: #eaedf2;\n  font-size: 15px;\n}\n#standard_customized #standard_course .availabletable .mat-row:hover {\n  background-color: #f5f5f5 !important;\n}\n#standard_customized #standard_course .availabletable #searchrow,\n#standard_customized #standard_course .availabletable #filtershow {\n  background: #fbfbfb !important;\n  border: none;\n}\n#standard_customized #standard_course .availabletable .serachrow {\n  background: #fff !important;\n  min-height: 73px !important;\n  padding-right: 15px;\n}\n#standard_customized #standard_course .availabletable .serachrow .mat-form-field-outline {\n  background-color: #fff !important;\n}\n#standard_customized #standard_course .awaredtable {\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #fff;\n  margin: 10px 0px;\n}\n#standard_customized #standard_course .awaredtable .manageoptions {\n  padding-right: 15px;\n}\n#standard_customized #standard_course .awaredtable .mat-row {\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n#standard_customized #standard_course .awaredtable .mat-row:hover {\n  background-color: #f5f5f5 !important;\n}\n#standard_customized #standard_course .awaredtable .mat-cell {\n  color: #262626;\n}\n#standard_customized #standard_course .awaredtable .mat-header-cell {\n  color: #626366 !important;\n  background-color: #eaedf2;\n  font-size: 15px;\n}\n#standard_customized #standard_course .mat-paginator-container .mat-paginator-page-size-label {\n  color: #999;\n  font-size: 15px;\n}\n#standard_customized #standard_course .mat-paginator-container .mat-select-value {\n  color: #626366;\n  font-size: 15px;\n}\n#standard_customized #standard_course .mat-paginator-container .mat-paginator-range-label {\n  color: #999;\n  font-size: 15px;\n  margin: 0px 10px !important;\n}\n#standard_customized #standard_course .weekededtag {\n  border: 1px solid;\n  border-radius: 2px;\n  padding: 7px 10px;\n  display: flex;\n  align-items: center;\n}\n#standard_customized #standard_course .renewal {\n  display: flex;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  padding: 15px;\n  justify-content: space-between;\n  align-items: center;\n}\n#standard_customized #standard_course .renewal .renewal_info {\n  gap: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#standard_customized #standard_course .renewal .renewal_info .mat-divider {\n  height: 51px;\n}\n#standard_customized #standard_course .renewal .renewal_info .mat-divider .mat-divider-vertical {\n  border-right-color: #c4c4c4;\n  border-right-width: 2px !important;\n}\n#standard_customized #standard_course .renewal .renewal_info p {\n  color: #848484;\n}\n#standard_customized #standard_course .renewal .renewal_info p span {\n  color: #262626;\n}\n#standard_customized #standard_course .renewal .renewal_info .remainder {\n  border: 1px solid #ED1C27;\n  border-radius: 2px;\n  padding: 8px;\n}\n#standard_customized #standard_course .renewal .renewal_info .remainder p {\n  color: #ED1C27;\n}\n#standard_customized #standard_course .renewal .renewal_info .remainder p span {\n  color: #ED1C27;\n}\n#standard_customized #standard_course .renewal .viewbtn {\n  background-color: #0c4b9a;\n  color: #fff;\n}\n#standard_customized #standard_course .success .centercontent {\n  height: 71vh;\n}\n#standard_customized #standard_course .success .success_icon {\n  width: 72px;\n  height: 72px;\n  border-radius: 50px;\n  background-color: #fff;\n  border: 3px solid #00a551;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#standard_customized #standard_course .success .success_icon .mat-icon {\n  font-size: 50px;\n  color: #00a551;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#standard_customized #standard_course .success .succes_msg h4 {\n  color: #00a551;\n}\n#standard_customized #standard_course .success .succes_msg p {\n  color: #262626;\n}\n#standard_customized #standard_course .success .succes_msg .viewform {\n  background-color: #ED1C27;\n  color: #fff;\n}\n#standard_customized #standard_course .secondtab .mat-form-field .mat-select.mat-select-disabled .mat-select-arrow::before {\n  color: transparent !important;\n}\n#standard_customized #standard_course .decline {\n  border: 1px solid #ED1C27;\n  border-radius: 3px;\n  padding: 15px;\n  background-color: #fff8f8;\n}\n#standard_customized #standard_course .decline h4 {\n  color: #ED1C27;\n}\n#standard_customized #standard_course .decline p {\n  color: #262626;\n}\n#standard_customized #standard_course .card {\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  padding: 15px;\n  background-color: #ffffff !important;\n}\n#standard_customized #standard_course .cardwht {\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  padding: 15px;\n  background-color: #ffffff !important;\n}\n#standard_customized #standard_course .carder {\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n}\n#standard_customized #standard_course .carder .rangedate {\n  padding: 15px;\n}\n#standard_customized #standard_course #regapp .closeanddateicomax {\n  top: 14px !important;\n}\n#standard_customized #standard_course #searchrow,\n#standard_customized #standard_course #filtershow {\n  background: #fff !important;\n  border: none;\n}\n#standard_customized #standard_course #searchrow .serachrow,\n#standard_customized #standard_course #filtershow .serachrow {\n  background: #f8f8f8 !important;\n  min-height: 73px !important;\n  padding-right: 15px;\n}\n#standard_customized #standard_course #searchrow .serachrow .mat-form-field-outline,\n#standard_customized #standard_course #filtershow .serachrow .mat-form-field-outline {\n  background-color: #fff !important;\n}\n#standard_customized #standard_course .footerpaginator .mat-paginator-outer-container .mat-paginator-container {\n  padding: 0px !important;\n}\n@media (max-width: 768px) {\n  #standard_customized #standard_course .footerpaginator .mat-paginator-outer-container .mat-paginator-container {\n    display: block !important;\n  }\n}\n#standard_customized #standard_course .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n  width: calc(100% - 186px);\n  color: #0c4b9a;\n}\n#standard_customized #standard_course .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions .mat-paginator-range-label {\n  width: calc(100% - 186px);\n}\n@media (max-width: 768px) {\n  #standard_customized #standard_course .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n    width: auto !important;\n  }\n}\n#standard_customized #standard_course .scrolldata {\n  position: relative;\n  z-index: 1;\n  display: block;\n  overflow-x: auto;\n  background-color: #fff;\n  scroll-behavior: smooth;\n}\n#standard_customized #standard_course .scrolldata::-webkit-scrollbar {\n  width: 6px;\n  height: 5px;\n}\n#standard_customized #standard_course .scrolldata::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n#standard_customized #standard_course .scrolldata::-webkit-scrollbar-thumb {\n  background: #ccc;\n  border-radius: 2px;\n}\n#standard_customized #standard_course .scrolldata::-webkit-scrollbar-thumb:hover {\n  background: #ccc;\n}\n#standard_customized #standard_course .tabforclientelenew .mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 8px 0 !important;\n}\n#standard_customized #standard_course .tabforclientelenew .manageoptions .mat-icon {\n  color: #acacac;\n}\n#standard_customized #standard_course .hrstag {\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  margin-left: 15px;\n  min-width: 82px;\n}\n#standard_customized #standard_course .master-menu .mat-menu-content {\n  background-color: #666666;\n  color: #fff;\n}\n#standard_customized #standard_course .masterPageTop .mat-paginator-range-actions button {\n  display: none;\n}\n#standard_customized #standard_course .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: #d9d9d9 !important;\n}\n#standard_customized #standard_course .mat-sort-header-arrow {\n  color: #ED1C27;\n}\n#standard_customized #standard_course .nofound {\n  margin-top: 5%;\n}\n#standard_customized #standard_course .rangedate {\n  background-color: #fbfbfb;\n}\n#standard_customized #standard_course .timepickerwidth {\n  max-width: 85px;\n}\n#standard_customized #standard_course .timepickerwidth .mat-icon {\n  font-size: 20px;\n  color: #848484;\n}\n#standard_customized .borderslot {\n  border-left: 1px solid #ddd;\n  align-items: center !important;\n  place-content: center center !important;\n}\n#standard_customized .w-150 {\n  width: 150px;\n}\n#standard_customized .usrfrm {\n  display: flex;\n  flex-direction: column !important;\n}\n#standard_customized .NorecordLoader {\n  height: 30px;\n  width: 100%;\n  border-radius: 2px;\n  background: #000;\n  position: relative;\n  -webkit-animation-duration: 1.7s;\n          animation-duration: 1.7s;\n  -webkit-animation-fill-mode: forwards;\n          animation-fill-mode: forwards;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-name: pagetitleAnimate;\n          animation-name: pagetitleAnimate;\n  background: #f6f7f8;\n  background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\n  background-size: 1300px;\n}\n#standard_customized .NorecordLoader:before {\n  width: inherit;\n  height: inherit;\n  content: "";\n  position: absolute;\n}\n.mat-button-focus-overlay {\n  display: none !important;\n}\n.option-listing div {\n  margin: 0 !important;\n}\n.searchinmultiselect {\n  display: flex;\n  align-items: center;\n  padding: 6px 10px;\n  background: #e9edf0;\n}\n.searchinmultiselect input::-webkit-input-placeholder {\n  color: #7f8fa3 !important;\n}\n.searchinmultiselect i {\n  color: #7f8fa3 !important;\n  padding-right: 6px;\n}\n.searchinmultiselect .searchselect {\n  width: calc(100% - 25px) !important;\n}\n.searchinmultiselect .reseticon {\n  cursor: pointer;\n}\n.select_with_search {\n  overflow: hidden !important;\n  max-height: 100% !important;\n  margin-top: 50px !important;\n  margin-bottom: 15px !important;\n}\n.select_with_option {\n  overflow: hidden !important;\n  max-height: 100% !important;\n  margin-top: 49px !important;\n  margin-bottom: 15px !important;\n}\n.select_with_option.multiple {\n  margin-top: 48px !important;\n  margin-left: 25px;\n  min-width: calc(100% + 28px) !important;\n}\n.searchinmultiselect {\n  display: flex;\n  align-items: center;\n  padding: 10px 10px;\n  background: #e9edf0;\n  margin: 10px;\n}\n.searchselect {\n  width: calc(100% - 25px) !important;\n  padding-left: 10px;\n}\n.mat-option.mat-active {\n  background: #fff;\n  color: rgba(0, 0, 0, 0.87);\n}\n.option-listing {\n  overflow-x: auto;\n  overflow-y: auto;\n  max-height: 290px;\n}\n.option-listing::-webkit-scrollbar {\n  width: 7px;\n}\n/* Track */\n.option-listing::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n/* Handle */\n.option-listing::-webkit-scrollbar-thumb {\n  background: #ED1C27;\n}\n/* hover */\n.option-listing::-webkit-scrollbar-thumb:hover {\n  background: #ED1C27;\n}\n.myPanelClass {\n  margin: 36px 0px;\n}\n.mat-menu-panel.table_menu {\n  background-color: #666666 !important;\n}\n.mat-menu-panel.table_menu .mat-menu-item {\n  line-height: 36px;\n  height: 31px;\n  color: #fff;\n}\n.mat-select-disabled .mat-select-value {\n  cursor: no-drop;\n  color: #262626 !important;\n}\n.mat-menu-panel.menu-panel {\n  margin-top: 7px;\n  min-width: 230px;\n}\n.mat-menu-panel.menu-panel .mat-menu-item:hover {\n  color: #ED1C27;\n}\n.mat-dialog-container {\n  padding: 24px !important;\n}\n.select_with_search.multiple {\n  margin-top: 55px !important;\n  margin-left: 25px;\n  min-width: calc(100% + 27px) !important;\n}\n.whentootltipadded {\n  background-color: #666666 !important;\n  color: #fff;\n  min-height: 45px !important;\n}\n.whentootltipadded .mat-menu-item {\n  color: #fff !important;\n  height: 30px !important;\n  line-height: 20px !important;\n}\n.custom-tooltip {\n  white-space: pre-wrap;\n  display: flex;\n  flex-direction: column;\n  line-height: 22px;\n  font-family: "opal_regular", sans-serif;\n  color: #ffffff;\n  background-color: #333;\n}'},UOFF:function(e,t,a){"use strict";a.r(t),t.default='<div [formGroup]="batchform" id="traininglistpopup">\r\n    <div class="trainingdurationhead" fxLayoutAlign="space-between center">\r\n        <h2 class="m-0 fs-16">{{\'course.trainingdurset\' | translate}}</h2>\r\n        <mat-icon (click)="closedialog()" class="cursor-pointer" matTooltip="Close">close</mat-icon>\r\n    </div>\r\n    <div class="pd-25">\r\n        <div fxLayout="row wrap" class="coursesubtitle" fxLayoutAlign="flex-start center">\r\n            <div fxFlex.gt-sm="13" fxFlex="100">\r\n                <p class="fs-14 m-0">{{\'course.coursetitle\' | translate}}</p>\r\n            </div>\r\n            <div fxFlex.gt-sm="87" fxFlex="100">\r\n                <span class="fs-14 complantag">Computer Programming Languages</span>\r\n            </div>  \r\n         \r\n        </div>\r\n        <div fxLayout="row wrap">\r\n            <div fxFlex.gt-sm="13" fxFlex="100">\r\n                 &nbsp;\r\n            </div>\r\n            <div fxFlex.gt-sm="87" fxFlex="100" class="p-t-35" fxLayoutAlign="flex-start">\r\n                <div class="totalleanerheader mindaterangewidth">\r\n                    <p class="fs-14 m-0">{{\'course.daterange\' | translate}}</p>\r\n                    <span class="fs-16">1-1-2023 to 1-3-2023</span>\r\n                </div>\r\n                <div class="totalleanerheader">\r\n                    <p class="fs-14 m-0">{{\'course.totaldays\' | translate}}</p>\r\n                    <span class="fs-16">90</span>\r\n                </div>\r\n            </div>  \r\n         \r\n        </div>\r\n        <div fxLayout="row wrap" >\r\n            <div fxFlex.gt-sm="13" fxFlex="100">\r\n                 &nbsp;\r\n            </div>\r\n            <div fxFlex.gt-sm="87" fxFlex="100">\r\n                <div class="conftiming">\r\n                    <h4 class="fs-14">{{\'course.configtiming\' | translate}}</h4>\r\n               </div>\r\n            </div>  \r\n        </div>\r\n       \r\n        <div fxLayout="row wrap" >\r\n            <div fxFlex.gt-sm="100" fxFlex="100">\r\n               \r\n                <div fxLayout="row wrap" class="coursesubtitle p-b-20" fxLayoutAlign="flex-start center">\r\n                    <div fxFlex.gt-sm="13" fxFlex="100">\r\n                        <p class="fs-14 m-0">{{\'course.from\' | translate}}</p>\r\n                    </div>\r\n                    <div fxFlex.gt-sm="87" fxFlex="100">\r\n                        <div fxLayoutAlign="flex-start">\r\n                            <div class="timepickerwidth">\r\n                                <mat-form-field >\r\n                                    \x3c!-- The timepicker input --\x3e\r\n                                    <input matTimepicker #t="matTimepicker" [minDate]="minValue"\r\n                                        [maxDate]="maxValue" [strict]="false"\r\n                                        formControlName="starttime"\r\n                                        required>\r\n                                    <mat-icon matSuffix\r\n                                        (click)="t.showDialog()">access_time</mat-icon>\r\n                                     \r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div fxLayoutAlign="flex-start center" class="slottag p-l-15">\r\n                                <mat-icon>add</mat-icon>\r\n                                <span class="fs-14 p-l-8">{{\'course.addslot\' | translate}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <mat-error *ngIf="cour.starttime.errors?.required || batchform.submitted">\r\n                            {{\'course.starttime\' | translate}} </mat-error>\r\n                    </div>  \r\n                </div>\r\n                \r\n            </div>\r\n         \r\n        </div>\r\n        <div fxLayout="row wrap" class="coursesubtitle p-b-30" fxLayoutAlign="flex-start center">\r\n            <div fxFlex.gt-sm="13" fxFlex="100">\r\n                <p class="fs-14 m-0">{{\'course.to\' | translate}}</p>\r\n            </div>\r\n            <div fxFlex.gt-sm="87" fxFlex="100">\r\n                <div class="timepickerwidth"> \r\n                    <mat-form-field >\r\n                        \x3c!-- The timepicker input --\x3e\r\n                        <input matTimepicker #t="matTimepicker" [minDate]="minValue"\r\n                            [maxDate]="maxValue" [strict]="false"\r\n                            formControlName="endtime"\r\n                            required>\r\n                        <mat-icon matSuffix\r\n                            (click)="t.showDialog()">access_time</mat-icon>\r\n                          \r\n                    </mat-form-field>\r\n                </div>\r\n                <mat-error *ngIf="cour.endtime.errors?.required || batchform.submitted">\r\n                    {{\'course.endtime\' | translate}} </mat-error>\r\n            </div>  \r\n        </div>\r\n        <div fxLayout="row wrap" >\r\n            <div fxFlex.gt-sm="13" fxFlex="100" class="coursesubtitle">\r\n                <p class="fs-14 m-0">{{\'course.setweekedned\' | translate}}</p>\r\n            </div>\r\n            <div fxFlex.gt-sm="87" fxFlex="100">\r\n                <mat-table class="summarytablelist" #table [dataSource]="quicksetupdatalist" \r\n                matSortDisableClear>\r\n                <ng-container matColumnDef="days">\r\n                    <mat-header-cell rowspan="2" fxFlex="80px" mat-header-cell *matHeaderCellDef\r\n                       ></mat-header-cell>\r\n                    <mat-cell rowspan="2"  data-label="Selected Date" fxFlex="80px"\r\n                        *matCellDef="let quickdata">\r\n                      <div class="daytopalign">\r\n                            <h4 class="m-0 fs-14">{{\'course.days\' | translate}}</h4>\r\n                      </div> \r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef="sunday">\r\n                    <mat-header-cell fxFlex="80px" mat-header-cell *matHeaderCellDef\r\n                     >{{\'course.sunday\' | translate}}</mat-header-cell>\r\n                    <mat-cell data-label="{{\'batch.batchtype\' | translate}}" fxFlex="80px"\r\n                        *matCellDef="let quickdata">\r\n                        <mat-checkbox > \r\n                         \r\n                        </mat-checkbox>\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef="monday">\r\n                    <mat-header-cell fxFlex="80px" mat-header-cell *matHeaderCellDef\r\n                        >{{\'course.monday\' | translate}}</mat-header-cell>\r\n                    <mat-cell data-label="{{\'batch.batchtype\' | translate}}" fxFlex="80px"\r\n                        *matCellDef="let quickdata">\r\n                        <mat-checkbox > \r\n                         \r\n                        </mat-checkbox>\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef="tuesday">\r\n                    <mat-header-cell fxFlex="80px" mat-header-cell *matHeaderCellDef\r\n                       >{{\'course.tuesday\' | translate}}</mat-header-cell>\r\n                    <mat-cell data-label="{{\'batch.batchtype\' | translate}}" fxFlex="80px"\r\n                        *matCellDef="let quickdata">\r\n                        <mat-checkbox > \r\n                         \r\n                        </mat-checkbox>\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef="wednesday">\r\n                    <mat-header-cell fxFlex="95px" mat-header-cell *matHeaderCellDef\r\n                        >{{\'course.wednesday\' | translate}}</mat-header-cell>\r\n                    <mat-cell data-label="{{\'batch.batchtype\' | translate}}" fxFlex="95px"\r\n                        *matCellDef="let quickdata">\r\n                        <mat-checkbox > \r\n                         \r\n                        </mat-checkbox>\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef="thursday">\r\n                    <mat-header-cell fxFlex="80px" mat-header-cell *matHeaderCellDef\r\n                       >{{\'course.thursday\' | translate}}</mat-header-cell>\r\n                    <mat-cell data-label="{{\'batch.batchtype\' | translate}}" fxFlex="80px"\r\n                        *matCellDef="let quickdata">\r\n                        <mat-checkbox > \r\n                         \r\n                        </mat-checkbox>\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef="friday">\r\n                    <mat-header-cell fxFlex="80px" mat-header-cell *matHeaderCellDef\r\n                        >{{\'course.friday\' | translate}}</mat-header-cell>\r\n                    <mat-cell data-label="{{\'batch.batchtype\' | translate}}" fxFlex="80px"\r\n                        *matCellDef="let quickdata">\r\n                        <mat-checkbox > \r\n                         \r\n                        </mat-checkbox>\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef="saturday">\r\n                    <mat-header-cell fxFlex="115px" mat-header-cell *matHeaderCellDef\r\n                        >{{\'course.saturday\' | translate}}</mat-header-cell>\r\n                    <mat-cell data-label="{{\'batch.batchtype\' | translate}}" fxFlex="115px"\r\n                        *matCellDef="let quickdata">\r\n                        <mat-checkbox > \r\n                        </mat-checkbox>\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef="quicksetupcolumn"></mat-header-row>\r\n                <mat-row *matRowDef="let row; columns: quicksetupcolumn;"></mat-row>\r\n            </mat-table>\r\n            </div>  \r\n        </div>\r\n        <div fxLayout="row wrap" fxLayoutAlign="end" class="cancelandpublish m-t-40">\r\n            <button mat-raised-button class="m-r-10 clearbtn ShowHide fs-15" type="button">{{\'course.courclear\' | translate}}\r\n            </button>\r\n            <button mat-raised-button  type="submit"\r\n                class="ShowHidefs-15 savebtn m-l-10">{{\'course.coursave\' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n   \r\n</div>'},cp5n:function(e,t,a){"use strict";a.r(t),t.default='<div [ngSwitch]="standardTemplate" #pageScroll id="standard_customized" class="pagescroll">\r\n    <div id="standard_course" *ngIf="Submitted" fxLayout="row wrap" fxLayoutAlign="center">\r\n        <div fxFlex="100" class="branches">\r\n            <div class="renewal m-b-30" *ngIf="!renewal">\r\n                <div class="renewal_info">\r\n                    <p class="fs-16 m-0">{{\'institute.opalapplnumb\' | translate}} <br><span>OPAL25897</span></p>\r\n                    <mat-divider [vertical]="true"></mat-divider>\r\n                    <p class="fs-16 m-0">{{\'institute.dateofexpi\' | translate}}<br><span>24-01-2014</span></p>\r\n                    <div class="remainder">\r\n                        <p class="fs-16 m-0">{{\'institute.nooddays\' | translate}}: <span>24</span></p>\r\n                    </div>\r\n                </div>\r\n                <div class="btns">\r\n                    <button mat-raised-button class="viewbtn fs-16">{{\'institute.viewcert\' | translate}}</button>\r\n                </div>\r\n            </div>\r\n            <ng-template [ngSwitchCase]="\'course\'">\r\n                <div class="paginationwithfilter masterPageTop ">\r\n                    \x3c!-- [style.visibility]="(resultsLength > 5) ? \'visible\' : \'hidden\' " --\x3e\r\n                    <mat-paginator class="masterPage masterPageTop" #paginator [length]="resultsLength" [pageSize]="10"\r\n                        [pageSizeOptions]="[5, 10, 25, 100]" (page)="syncPrimaryPaginator($event);"></mat-paginator>\r\n                    <div fxLayout="row wrap" fxLayoutAlign="end">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100">\r\n                            \x3c!-- <button mat-raised-button color="primary" type="button"\r\n                                (click)="ApplyCertificate();scrollTo(\'pagescroll\')"\r\n                                class="ShowHidefs-15 submit_btn m-r-10">{{\'international.add\' | translate}}\r\n                            </button> --\x3e\r\n                            <button mat-raised-button [matMenuTriggerFor]="menu"\r\n                                class="ShowHidefs-15 submit_btn m-r-10">{{\'branch.applycourse\' | translate}}<i\r\n                                    class="fa fa-chevron-down m-l-5" aria-hidden="true"></i></button>\r\n                            <mat-menu #menu="matMenu" class="menu-panel applymenu">\r\n                                <button mat-menu-item (click)="ApplyCertificate(2);scrollTo(\'pagescroll\')"\r\n                                    class="fs-16">{{\'branch.stand\' | translate}}</button>\r\n                                <button mat-menu-item (click)="ApplyCertificate(3);scrollTo(\'pagescroll\')"\r\n                                    class="fs-16">{{\'branch.cust\' | translate}}</button>\r\n                            </mat-menu>\r\n                            <button mat-raised-button type="button" color="primary" (click)="clickEvent();"\r\n                                class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7"\r\n                                    aria-hidden="true"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div fxLayout="row wrap">\r\n                    <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                        <div class="awaredtable">\r\n                            <mat-table #table class="scrolldata" [dataSource]="TrainingBranchData" matSort\r\n                                matSortDisableClear>\r\n                                <ng-container matColumnDef="applictionno">\r\n                                    <mat-header-cell fxFlex="200px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.applform\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="applictionno" fxFlex="200px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder"> {{BranchData.applictionno}}</div>\r\n                                        </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="appiim_officetype"> \r\n                                    <mat-header-cell fxFlex="200px" mat-header-cell *matHeaderCellDef \r\n                                        mat-sort-header>{{\'branch.offitype\' | translate}}</mat-header-cell> \r\n                                    <mat-cell data-label="appiim_officetype" fxFlex="200px" *matCellDef="let BranchData"> \r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div> \r\n                                        <div *ngIf="!tblplaceholder"> {{(BranchData.appiim_officetype == 1)? (\'table.main\' | translate) :(\'table.branch\' | translate)}}</div> \r\n                                         </mat-cell> \r\n                                </ng-container>\r\n                                <ng-container matColumnDef="appiim_branchname_en">\r\n                                    <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.branchname\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="appiim_branchname_en" fxFlex="250px" *matCellDef="let BranchData"> \r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder"> {{(BranchData.appiim_officetype == 2)?(ifarbic == true? \r\n                                            (BranchData.appiim_branchname_ar):(BranchData.appiim_branchname_en)):(\'-\')}}</div> \r\n                                         </mat-cell>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef="pm_projectname_en">\r\n                                    <mat-header-cell fxFlex="200px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.courtype\' |\r\n                                        translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="pm_projectname_en" fxFlex="200px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">{{ifarbic == true?\r\n                                            (BranchData.pm_projectname_ar):(BranchData.pm_projectname_en)}}</div>\r\n                                         </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="coursename_en">\r\n                                    <mat-header-cell fxFlex="270px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.courtile\' |\r\n                                        translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="coursename_en" fxFlex="270px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder"> {{ifarbic == true?\r\n                                            (BranchData.coursename_ar):(BranchData.coursename_en)}}</div>\r\n                                        </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="courscat_en">\r\n                                    <mat-header-cell fxFlex="200px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.courcate\' |\r\n                                        translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="courscat_en" fxFlex="200px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder"> {{ifarbic == true?\r\n                                            (BranchData.courscat_ar):(BranchData.courscat_en)}}</div>\r\n                                         </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="reqfor_en">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.request\' |\r\n                                        translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="reqfor_en" fxFlex="230px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">{{BranchData.reqfor_ar ?(ifarbic == true?\r\n                                            (BranchData.reqfor_ar):(BranchData.reqfor_en)):\'-\'}}</div>\r\n                                         </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="delto_en">\r\n                                    <mat-header-cell fxFlex="300px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.courdeli\' |\r\n                                        translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="delto_en" fxFlex="300px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">  {{ (ifarbic == true?\r\n                                            (BranchData.delto_ar):(BranchData.delto_en)) ? (ifarbic == true?\r\n                                            (BranchData.delto_ar):(BranchData.delto_en)) : \'-\' }}</div>\r\n                                       </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="dateofexpiry">\r\n                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.dateofexpi\' | translate}}\r\n                                    </mat-header-cell>\r\n                                    <mat-cell data-label="dateofexpiry" fxFlex="263px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">{{BranchData.dateofexpiry ? BranchData.dateofexpiry : \'-\'}} </div>\r\n                                        </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="applicationstatus">\r\n                                    <mat-header-cell fxFlex="280px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'branch.applstat\' |\r\n                                        translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="applicationstatus" fxFlex="280px"\r\n                                        *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder"> <span *ngIf="BranchData.applicationstatus == \'1\'">{{\'table.yettosubmit\'\r\n                                            |translate}}</span>\r\n                                        <span *ngIf="BranchData.applicationstatus == \'2\'">{{\'table.subfordesk\'\r\n                                            |translate}}</span>\r\n                                        <span *ngIf="BranchData.applicationstatus == \'3\'">{{\'table.declduringdesk\'\r\n                                            |translate}}</span>\r\n                                        <span *ngIf="BranchData.applicationstatus == \'4\'">{{\'table.resubmdesk\'\r\n                                            |translate}}</span>\r\n                                        <span *ngIf="BranchData.applicationstatus == \'5\' || BranchData.applicationstatus == \'18\'">{{\'table.yettopay\'\r\n                                            |translate}}</span>\r\n                                        <span *ngIf="BranchData.applicationstatus == \'6\'">{{\'table.paidconfipend\'\r\n                                            |translate}}</span> \r\n                                    <span *ngIf="BranchData.applicationstatus == \'7\'">{{\'table.awitorsiteaudit\'\r\n                                        |translate}}</span> \r\n                                    <span *ngIf="BranchData.applicationstatus == \'8\'">{{\'table.confsiteautit\'\r\n                                        |translate}}</span>\r\n                                    <span *ngIf="BranchData.applicationstatus == \'9\'">{{\'table.readforaudit\'\r\n                                        |translate}}</span>\r\n                                        <span *ngIf="BranchData.applicationstatus == \'10\' || BranchData.applicationstatus == \'11\' || BranchData.applicationstatus == \'13\' \r\n                                        || BranchData.applicationstatus == \'14\' || BranchData.applicationstatus == \'15\' || BranchData.applicationstatus == \'16\' ||  BranchData.applicationstatus == \'20\'">\r\n                                        {{\'Approval Pending\'}}</span>\r\n                                    <span *ngIf="BranchData.applicationstatus == \'17\'">{{\'table.approved\'\r\n                                        |translate}}</span>\r\n                                            <span *ngIf="BranchData.applicationstatus == \'19\'">{{\'Suspended\' | translate}}</span>\r\n                                    </div>\r\n                                        </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="certification">\r\n                                    <mat-header-cell fxFlex="190px" mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                        {{\'branch.certstat\' | translate}} </mat-header-cell>\r\n                                    <mat-cell data-label="certification" fxFlex="190px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder"> <span *ngIf="BranchData.certification == \'1\'" class="red">{{\'table.new\'\r\n                                            |translate}}</span>\r\n                                            <span *ngIf="BranchData.certification == \'2\'" class="green">{{\'table.acti\'\r\n                                                |translate}}</span>\r\n                                        <span *ngIf="BranchData.certification == \'3\'" class="red">{{\'table.expi\'\r\n                                            |translate}}</span></div></mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="addedon">\r\n                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                        {{\'branch.addon\' | translate}} </mat-header-cell>\r\n                                    <mat-cell data-label="addedon" fxFlex="263px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">{{BranchData.addedon}}</div></mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="lastUpdated">\r\n                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                        {{\'branch.lastupdat\' | translate}} </mat-header-cell>\r\n                                    <mat-cell data-label="lastUpdated" fxFlex="263px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">{{(BranchData.lastUpdated)?BranchData.lastUpdated:\'-\'}}</div> </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="action" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" mat-header-cell *matHeaderCellDef>{{\'branch.action\'\r\n                                        | translate}}\r\n                                    </mat-header-cell>\r\n                                    <mat-cell data-label="action" fxFlex="100px" *matCellDef="let BranchData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder"><div class="manageoptions">\r\n                                            <button class="menubutton" mat-icon-button [matMenuTriggerFor]="actionmenu"\r\n                                                aria-label="Example icon-button with a menu">\r\n                                                <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                            </button>\r\n                                            <mat-menu #actionmenu="matMenu"\r\n                                                class="master-menu whentootltipadded table_menu">\r\n                                                \x3c!-- edit --\x3e\r\n                                                <button type="button" mat-menu-item *ngIf="BranchData.applicationstatus == \'1\' && BranchData.appdm_issuspended != 1" (click)="editapplicationdata(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,\'edit\',BranchData.applicationstatus,BranchData.appdt_apptype)"><span>{{\'table.edit\' |\r\n                                                        translate}} </span></button>\r\n                                                 \x3c!-- view --\x3e\r\n                                                <button type="button" mat-menu-item *ngIf="BranchData.applicationstatus >= 2"  (click)="editapplicationdata(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,\'view\',BranchData.applicationstatus,BranchData.appdt_apptype)"><span>{{\'table.certificate\' | translate}}</span></button>\r\n                                               \x3c!-- renew  --\x3e\r\n                                                <button type="button" mat-menu-item *ngIf="((BranchData.applicationstatus == \'17\')&&(BranchData.days && BranchData.days < 30) && BranchData.appdm_issuspended != 1) || (BranchData.certification == \'3\' && BranchData.applicationstatus == \'17\' && BranchData.appdm_issuspended != 1)" (click)="editapplicationdata(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,\'renew\',BranchData.applicationstatus,BranchData.appdt_apptype)" ><span>{{\'table.renew\' |translate}}</span></button>\r\n                                               \x3c!-- update --\x3e\r\n                                                <button type="button" mat-menu-item *ngIf="(BranchData.applicationstatus == \'3\' && BranchData.appdm_issuspended != 1)|| (BranchData.certification == \'2\' && BranchData.applicationstatus == \'17\' && BranchData.appdm_issuspended != 1) "  (click)="editapplicationdata(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,\'update\',BranchData.applicationstatus,BranchData.appdt_apptype)" ><span>{{\'table.updatcert\' | translate}}</span></button>\r\n                                                <button type="button" mat-menu-item *ngIf="(BranchData.applicationstatus == \'5\' || BranchData.applicationstatus == \'18\' ) && BranchData.appdm_issuspended != 1" (click)="makepayment(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,BranchData.appdt_apptype,BranchData.appdt_status,\'edit\')"><span>{{\'table.makepaym\' | translate}}</span></button>\r\n                                                <button type="button" mat-menu-item *ngIf="BranchData.applicationstatus == \'6\' && BranchData.appdm_issuspended != 1"   (click)="makepayment(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,BranchData.appdt_apptype,BranchData.appdt_status,\'edit\')"><span>{{\'table.paymdeta\' | translate}}</span></button>\r\n                                                <button type="button" mat-menu-item *ngIf="(BranchData.applicationstatus == \'8\' || BranchData.applicationstatus == \'7\' || BranchData.applicationstatus == \'13\') && BranchData.appdm_issuspended != 1" (click)="makepayment(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,BranchData.appdt_apptype,BranchData.appdt_status,\'edit\')" ><span>{{\'table.confirm\' | translate}}</span></button> \r\n                                                <button type="button" mat-menu-item *ngIf="BranchData.applicationstatus == \'9\' && BranchData.appdm_issuspended != 1" (click)="makepayment(BranchData.applicationdtlstmp_pk,BranchData.appdt_projectmst_fk,BranchData.appdt_apptype,BranchData.appdt_status,\'edit\')" ><span>{{\'table.viewsite\' | translate}}</span></button>\r\n                                                <button type="button" mat-menu-item *ngIf="BranchData.applicationstatus == \'17\' && BranchData.appdt_certificatepath" (click)="opencertificate(BranchData.appdt_certificatepath)"  ><span>{{\'View Certificate\'}}</span></button>\r\n                                                \x3c!-- <button type="button" mat-menu-item><span>{{\'table.addbatch\' |\r\n                                                        translate}}</span></button> --\x3e \r\n                                            </mat-menu>\r\n                                        </div></div>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-first">\r\n                                    <mat-header-cell fxFlex="200px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                            <input matInput [formControl]="appl_form" (keyup)="applyFilter($event.target.value,\'appl_form\')">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-second">\r\n                                    <mat-header-cell fxFlex="200px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.sele\' |\r\n                                                translate}}</mat-label>\r\n                                            <mat-select [formControl]="officetype" (selectionChange)="applyFilter($event.value,\'officetype\')" multiple>\r\n                                                <mat-option value="1">{{\'table.main\' |translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'table.branch\' |translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-three">\r\n                                    <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                            <input matInput [formControl]="bran_name" (keyup)="applyFilter($event.target.value,\'bran_name\')">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-four">\r\n                                    <mat-header-cell fxFlex="200px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.sele\' |\r\n                                                translate}}</mat-label>\r\n                                            <mat-select [formControl]="coures_type" (selectionChange)="applyFilter($event.value,\'coures_type\')" multiple>\r\n                                                <mat-option value="2">{{\'table.stand\' |translate}}</mat-option>\r\n                                                <mat-option value="3">{{\'table.cust\' |translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-five">\r\n                                    <mat-header-cell fxFlex="270px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                            <input matInput [formControl]="course_titles"  (keyup)="applyFilter($event.target.value,\'course_titles\')">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-six">\r\n                                    <mat-header-cell fxFlex="200px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                            <input matInput [formControl]="course_cat"  (keyup)="applyFilter($event.target.value,\'course_cat\')">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-seven">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.sele\' |\r\n                                                translate}}</mat-label>\r\n                                            <mat-select [formControl]="requested" (selectionChange)="applyFilter($event.value,\'requested\')" multiple>\r\n                                                <mat-option *ngFor="let req of reqformst"\r\n                                                value={{req.referencemst_pk}}>{{ifarbic == true ?\r\n                                                (req.rm_name_ar):(req.rm_name_en)}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-eight">\r\n                                    <mat-header-cell fxFlex="300px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                            <input matInput [formControl]="courdeliver"  (keyup)="applyFilter($event.target.value,\'courdeliver\')">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-nine">\r\n                                    <mat-header-cell fxFlex="263px" class="serachrow " *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <div class="drpicker" id="regapp">\r\n                                                \x3c!-- <mat-label>{{\'table.sele\' |translate}}</mat-label> --\x3e\r\n                                                <input id="login_session"  (ngModelChange)="applyFilter($event,\'date_expiry\')" [formControl]="date_expiry" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                <div class="closeanddateicon">\r\n                                                    <mat-datepicker-toggle matSuffix >\r\n                                                    </mat-datepicker-toggle>\r\n                                                </div>\r\n                                            </div>\r\n                                         \r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-ten">\r\n                                    <mat-header-cell fxFlex="280px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.sele\' |\r\n                                                translate}}</mat-label>\r\n                                            <mat-select [formControl]="appl_status" panelClass="select_with_search multiple" (selectionChange)="applyFilter($event.value,\'appl_status\')" multiple>\r\n                                                <div class="option-listing countryselectwithimage">\r\n                                                <mat-option value="1">{{\'table.yettosubmit\' |translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'table.subfordesk\' |translate}}</mat-option>\r\n                                                <mat-option value="3">{{\'table.declduringdesk\' |translate}}</mat-option>\r\n                                                <mat-option value="4">{{\'table.resubmdesk\' |translate}}</mat-option>\r\n                                                <mat-option value="5,18">{{\'table.yettopay\' |translate}}</mat-option>\r\n                                                <mat-option value="6">{{\'table.paidconfipend\' |translate}}</mat-option>\r\n                                                <mat-option value="7">{{\'table.awitorsiteaudit\' |translate}}</mat-option>\r\n                                                <mat-option value="8">{{\'table.confsiteautit\' |translate}}</mat-option>\r\n                                                <mat-option value="9">{{\'table.readforaudit\' |translate}}</mat-option>\r\n                                                <mat-option value="10,11,12,13,14,15,16,20">{{\'Approval Pending\'}}</mat-option>\r\n                                                \x3c!-- <mat-option value="10">{{\'table.submforqualmana\' |translate}}</mat-option>\r\n                                                <mat-option value="11">{{\'table.submforauthor\' |translate}}</mat-option>\r\n                                                <mat-option value="12">{{\'table.submforceo\' |translate}}</mat-option>\r\n                                                <mat-option value="13">{{\'table.siteaudidecl\' |translate}}</mat-option>\r\n                                                <mat-option value="14">{{\'table.resubmforqual\' |translate}}</mat-option>\r\n                                                <mat-option value="15">{{\'table.resubmforauth\' |translate}}</mat-option>\r\n                                                <mat-option value="16">{{\'table.resubmforceoapp\' |translate}}</mat-option> --\x3e\r\n                                                <mat-option value="17">{{\'table.approved\' |translate}}</mat-option>\r\n                                                \x3c!-- <mat-option value="18">{{\'Declined by finance team\' | translate }}</mat-option> --\x3e\r\n                                                <mat-option value="19">{{\'Suspended\' | translate}}</mat-option>\r\n                                                </div>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-eleven">\r\n                                    <mat-header-cell fxFlex="190px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.sele\' |\r\n                                                translate}}</mat-label>\r\n                                            <mat-select [formControl]="cert"  (selectionChange)="applyFilter($event.value,\'cert\')">\r\n                                                <mat-option value="1">{{\'table.new\' |translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'table.acti\' |translate}}</mat-option>\r\n                                                <mat-option value="3">{{\'table.expi\' |translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-twelve">\r\n                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <div class="drpicker" id="regapp">\r\n                                                \x3c!-- <mat-label>{{\'table.sele\' |translate}}</mat-label> --\x3e\r\n                                                <input id="login_session" [formControl]="addedon_branch"  (ngModelChange)="applyFilter($event,\'addedon_branch\')" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                <div class="closeanddateicon">\r\n                                                    <mat-datepicker-toggle matSuffix >\r\n                                                    </mat-datepicker-toggle>\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-thirten">\r\n                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <div class="drpicker" id="regapp">\r\n                                                \x3c!-- <mat-label>{{\'table.sele\' |translate}}</mat-label> --\x3e\r\n                                                <input id="login_session" (ngModelChange)="applyFilter($event,\'lastUpdated_branch\')" [formControl]="lastUpdated_branch" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                <div class="closeanddateicon">\r\n                                                    <mat-datepicker-toggle matSuffix >\r\n                                                    </mat-datepicker-toggle>\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-fourteen" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n\r\n                                        <i class="fa fa-refresh m-l-15 cursorview" (click)="clearFiltersecound();filtersts=false;"\r\n                                            aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <mat-header-row id="headerrowcells" *matHeaderRowDef="BranchListData;" >\r\n                                </mat-header-row>\r\n                                <mat-header-row id="searchrow"\r\n                                    *matHeaderRowDef="[\'row-first\' , \'row-second\' , \'row-three\' , \'row-four\' , \'row-five\' , \'row-six\' , \'row-seven\' , \'row-eight\' , \'row-nine\' , \'row-ten\' , \'row-eleven\' , \'row-twelve\' , \'row-thirten\' , \'row-fourteen\']">\r\n                                </mat-header-row>\r\n                                <mat-row mat-row *matRowDef="let row; columns: BranchListData;"></mat-row>\r\n                                <ng-container matColumnDef="disclaimer">\r\n                                    <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                        <div [ngClass]="tblplaceholder? \' \' :\'nofound\'" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                            <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                <div fxLayout="row wrap" fxLayoutAlign="center center"  *ngIf="tblplaceholder"\r\n                                                class="NorecordLoader m-t-10"></div>\r\n                                                <img src="assets/images/opalimages/norecord.svg" alt="norecord" *ngIf="!tblplaceholder">\r\n                                                <p class="m-t-10 txt-gry3 fs-16" *ngIf="!tblplaceholder">{{\'common.noreco\' | translate}} \r\n                                                </p>\r\n                                    </div>\r\n                                </div>\r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container>\r\n                                  \r\n                                    <mat-footer-row [class.stickyclass]="(resultsLength > 0) ? \'none\' : \'block\'" [style.display]="(resultsLength > 0) ? \'none\' : \'block\' " \r\n                                        *matFooterRowDef="[\'disclaimer\']" style="justify-content: center;display: none;">\r\n                                    </mat-footer-row>\r\n                                </ng-container>\r\n                            </mat-table>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                    class="masterPage masterbottom " showFirstLastButtons\r\n                                    [pageSize]="paginator?.pageSize" (page)="syncPrimaryPaginator($event);"\r\n                                    [pageIndex]="paginator?.pageIndex" [length]="paginator?.length"\r\n                                    [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                                </mat-paginator>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template [ngSwitchCase]="\'standardFroms\'">\r\n                <div class="m-l-0 m-r-0 m-b-20 declinecmd"  *ngIf="this.applicationstatus == 3">\r\n                    <h4 class="18 m-5 m-l-0">{{\'institute.declcomm\' | translate}}</h4>\r\n                         <p class="fs-16 txt-gry3 m-b-30" [innerHTML]="maincomment? maincomment : \'Nil\'"></p>\r\n                         <mat-divider></mat-divider>\r\n                    <div class="validinfo"  fxLayout="row wrap" >\r\n                         <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}}:<span class="fs-16 txt-gry3 m-l-10">{{mainapprovdecon}}</span></p>\r\n                    </div>\r\n                </div>\r\n                <h4 class="fs-15 txt-gry3"  *ngIf="this.intertabmanditoryornot && ShowHide">Note: All the entries marked with an \u2018<span class="red">*</span>\u2019 are mandatory i.e., you must provide the required information to proceed further</h4>\r\n                <mat-tab-group class="tabsdetials " *ngIf="ShowHide" [(selectedIndex)]="mattab">\r\n                    \x3c!--tab 1--\x3e\r\n                    <mat-tab>\r\n                        <ng-template mat-tab-label>\r\n                            <div class="tabscontent">\r\n                                <span class="contentcircle m-r-10">1</span>\r\n                                <div class="tabtitle">\r\n                                    <P class="fs-14">{{\'course.course\' | translate}} <span class="mandatory" *ngIf="this.applicationtype != \'view\'" >*</span></P>\r\n                                </div>\r\n                            </div>\r\n                        </ng-template>\r\n                        \x3c!-- <div class="formcontainer m-t-25">\r\n                            <div class="title" fxLayout="row" fxLayoutAlign="center center">\r\n                                <h4 clas="fs-18"> {{\'course.course\' | translate}}</h4>\r\n                                <div class="line p-l-20"><mat-divider></mat-divider></div>\r\n                            </div>\r\n                        </div> --\x3e\r\n                        <div class="successcmd m-l-0 m-r-0 m-b-20 m-t-25" *ngIf="coursecommandsts == 3 || coursecommandsts == 4" [ngClass]="coursecommandsts == 4 ? \'declinecmd\' : \'successcmd\'">\r\n                            <p class="18 comment" *ngIf="coursecommandsts == 3">{{\'institute.approvalcmd\' | translate}}</p>\r\n                            <p class="18 comment" *ngIf="coursecommandsts == 4">{{\'institute.declcomm\' | translate}}</p>\r\n                            <p class="16 m-b-30" [innerHTML]="coursecommand? coursecommand : \'Nil\'" ></p>\r\n                                <mat-divider></mat-divider>\r\n                               <div class="validinfo"  fxLayout="row wrap" >\r\n                                <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}} : <span class="fs-16 txt-gry3">{{courseappon}}</span></p>\r\n                                <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}} : <span class="fs-16 txt-gry3">{{courseappby}}</span></p>\r\n                               </div>\r\n                        </div>\r\n                        <form autocomplete="off" [formGroup]="CourseForm">\r\n                            <div class="formcontainer m-t-15">\r\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'course.offtype\' | translate}} </mat-label>\r\n                                            <mat-select required formControlName="office_type" required\r\n                                                panelClass="select_with_option"\r\n                                                (selectionChange)="offictypechange(cour.office_type.value)">\r\n                                                <mat-option [value]="1">{{\'table.main\' |translate}}</mat-option>\r\n                                                <mat-option [value]="2">{{\'table.branch\' |translate}}</mat-option>\r\n                                            </mat-select>\r\n                                            <mat-error\r\n                                                *ngIf="cour.office_type.errors?.required || CourseForm.submitted">\r\n                                                {{\'course.selectofftype\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div *ngIf="showbranch" fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'course.branchname\' | translate}} </mat-label>\r\n                                            <mat-select required formControlName="bran_ch" required  (selectionChange)="branchchoose(cour.bran_ch.value)"\r\n                                                panelClass="select_with_option">\r\n                                                <mat-option *ngFor="let branch of branchlist"\r\n                                                    value={{branch.appinstinfomain_pk}}>{{branch.branchname_en}}</mat-option>\r\n\r\n                                            </mat-select>\r\n                                            <mat-error *ngIf="cour.bran_ch.errors?.required || CourseForm.submitted">\r\n                                                {{\'course.selectbranchname\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                    <div fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'course.courtitl\' | translate}} </mat-label>\r\n                                            <mat-select required formControlName="course_titleen"\r\n                                                 panelClass="select_with_search"\r\n                                                *ngIf="(courselist | filter : searchCourseTitlelist) as couselistresult"\r\n                                                (selectionChange)="selectedcourse(cour.course_titleen.value)">\r\n                                                <div class="searchinmultiselect">\r\n                                                    <mat-icon >search</mat-icon>\r\n                                                    <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                        matInput class="searchselect" type="Search"\r\n                                                        placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                        (keydown)="$event.stopPropagation();"\r\n                                                        [(ngModel)]="searchCourseTitlelist"\r\n                                                        [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                    <mat-icon (click)="searchCourseTitlelist = \'\'" class="reseticon"\r\n                                                        matSuffix\r\n                                                        *ngIf="searchCourseTitlelist !=\'\' && searchCourseTitlelist !=null">clear</mat-icon>\r\n                                                </div>\r\n                                                <div class="option-listing countryselectwithimage">\r\n                                                    <mat-option\r\n                                                        *ngFor="let cousre of courselist | filter : searchCourseTitlelist"\r\n                                                        value={{cousre.pk}}>{{cousre.course_en}}</mat-option>\r\n                                                    <div *ngIf="couselistresult?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                                </div>\r\n                                            </mat-select>\r\n                                            <mat-error\r\n                                                *ngIf="cour.course_titleen.errors?.required || CourseForm.submitted">\r\n                                                {{\'course.entecourengl\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                        <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'">\r\n                                            <mat-label>{{\'course.courlevel\' | translate}}</mat-label>\r\n                                            <input (keydown.enter)="$event.preventDefault()"\r\n                                                [errorStateMatcher]="matcher" matInput formControlName="cour_level"\r\n                                                [readonly]="editOption">\r\n                                            \x3c!-- <mat-error *ngIf="cour.cour_level.errors?.required || CourseForm.submitted">\r\n                                                {{\'course.selecourlevel\' | translate}}\r\n                                            </mat-error> --\x3e\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                        <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'">\r\n                                            <mat-label>{{\'course.courcate\' | translate}}</mat-label>\r\n                                            <input (keydown.enter)="$event.preventDefault()"\r\n                                                [errorStateMatcher]="matcher" matInput formControlName="cour_cate"\r\n                                                [readonly]="editOption">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div> \r\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100" class="popoverforsubcate">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-select required formControlName="cour_subcate" multiple \r\n                                                *ngIf="(governoratelist | filter : searchGovernorate1) as sublist"\r\n                                                panelClass="select_with_search multiple"> \r\n                                                <mat-select-trigger>\r\n                                                    {{CourseForm.controls[\'cour_subcate\'].value ? businessUnitDataTemp :\r\n                                                    \'\'}}\r\n                                                    <span *ngIf="CourseForm.controls[\'cour_subcate\'].value?.length > 1" [matTooltip]="this.applicationtype == \'view\'?JoinList(subcatecoryListforpopup): \'\'" matTooltipClass="custom-tooltip"\r\n                                                        class="addtioanlValues" >\r\n                                                        (+{{CourseForm.controls[\'cour_subcate\'].value.length - 1}}\r\n                                                        {{CourseForm.controls[\'cour_subcate\'].value?.length === 2 ?\r\n                                                        \'other\' : \'others\'}})  \r\n                                                    </span>\r\n                                                    \x3c!-- <popover-content #myPopoverc placement="right" [popoverOnHover]="true" [animation]="true" [closeOnClickOutside]="true">\r\n                                            \r\n                                                        <div *ngFor="let subcat of subcatecoryListforpopup">\r\n                                                           {{subcat}}\r\n                                                        </div>\r\n                                                    </popover-content> --\x3e\r\n                                                </mat-select-trigger>\r\n                                                <div class="searchinmultiselect">\r\n                                                    <mat-icon >search</mat-icon>\r\n                                                    <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                        matInput class="searchselect" type="Search"\r\n                                                        placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                        (keydown)="$event.stopPropagation();"\r\n                                                        [(ngModel)]="searchGovernorate1"\r\n                                                        [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                    <mat-icon (click)="searchGovernorate1 = \'\'" class="reseticon"\r\n                                                        matSuffix\r\n                                                        *ngIf="searchGovernorate1 !=\'\' && searchGovernorate1 !=null">clear</mat-icon>\r\n                                                </div>\r\n                                                <div class="option-listing countryselectwithimage">\r\n                                                    <mat-option\r\n                                                        *ngFor="let subcate of subcategory  | filter : searchGovernorate1 "\r\n                                                        value={{subcate.subpk}}> {{subcate.subcategory_en}}</mat-option>\r\n                                                    <div *ngIf="sublist?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                                </div>\r\n                                            </mat-select>\r\n                                            \r\n                                            <mat-label>{{\'course.coursubcate\' | translate}}</mat-label>\r\n                                            <mat-error *ngIf="cour.cour_subcate.errors?.required || CourseForm.submitted">\r\n                                                {{\'course.selectthesub\' | translate}}\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                       \r\n                                    </div>\r\n                                    <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                        <mat-form-field appearance="outline" [ngClass]="first_form_disbale == true ? \'readonlyfield\' : \' \'">\r\n                                            <mat-select required formControlName="request_for"  (selectionChange)="selectedreqfor(cour.request_for.value)"\r\n                                                panelClass="select_with_option">\r\n                                                <mat-option *ngFor="let req of reqformst"\r\n                                                    value={{req.referencemst_pk}}>{{ifarbic == true ?\r\n                                                    (req.rm_name_ar):(req.rm_name_en)}}</mat-option>\r\n\r\n                                            </mat-select>\r\n                                            <mat-label>{{\'course.request\' | translate}}</mat-label>\r\n                                            <mat-error\r\n                                                *ngIf="cour.request_for.errors?.required || CourseForm.submitted">\r\n                                                {{\'course.selerequest\' | translate}}\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                                <div *ngIf="standorcustom == \'custom\'" fxLayout="column">\r\n                                    <p class="fs-18 txt-gry3 subtitleform">{{\'course.courunit\' | translate}}</p>\r\n                                    <div class="detials">\r\n                                        <div class="paginationwithfilter masterPageTop ">\r\n                                            <mat-paginator class="masterPage masterPageTop" #unitpaginator [length]="unitlength"\r\n                                                [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                                (page)="syncPrimaryunitcde($event);"></mat-paginator>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="courebox m-t-15">\r\n                                        <div *ngIf="this.unitlength != 0" fxFlex="100">\r\n                                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15 units"\r\n                                            *ngFor="let uni of unit">\r\n                                            <div fxFlex.gt-sm="50" fxFlex="100" >\r\n                                                <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'">\r\n                                                    <mat-label>{{\'course.unitcode\' | translate}} </mat-label>\r\n                                                    <input (keydown.enter)="$event.preventDefault()"\r\n                                                        [errorStateMatcher]="matcher" matInput \r\n                                                         required [readonly]="editOption"\r\n                                                        value={{uni.appocum_UnitCode}}>\r\n\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                                                ngClass.md="p-l-30" ngClass.lg="p-l-20" ngClass.xl="p-l-20"\r\n                                                fxFlex="100">\r\n                                                <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'">\r\n                                                    <mat-label>{{\'course.unittitl\' | translate}} </mat-label>\r\n                                                    <input (keydown.enter)="$event.preventDefault()"\r\n                                                        [errorStateMatcher]="matcher" matInput \r\n                                                         required [readonly]="editOption"\r\n                                                        value={{uni.appocum_UnitTitle}}>\r\n\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                        \r\n                                        </div>\r\n                                        </div>\r\n                                        <div  class="nofound" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100" *ngIf="this.unitlength == 0">\r\n                                            <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                <img src="assets/images/opalimages/norecord.svg" alt="norecord">\r\n                                                <p class="m-t-10 txt-gry3 fs-16">{{\'common.noreco\' | translate}}</p>\r\n                                           </div>\r\n                                       </div>\r\n                                    </div>\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                        <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                            class="masterPage masterbottom " showFirstLastButtons [pageSize]="unitpaginator?.pageSize"\r\n                                            (page)="syncPrimaryunitcde($event);" [pageIndex]="unitpaginator?.pageIndex"\r\n                                            [length]="unitlength" [pageSizeOptions]="unitpaginator?.pageSizeOptions">\r\n                                        </mat-paginator>\r\n                                    </div>\r\n                                    <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15 units">\r\n                                        <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                            <mat-form-field appearance="outline" >\r\n                                                <mat-label>{{\'course.courdeli\' | translate}} </mat-label>\r\n                                                \x3c!-- *ngIf = "!others" --\x3e\r\n                                                <mat-select required formControlName="course_delivered"\r\n                                                    [errorStateMatcher]="matcher" panelClass="select_with_search"\r\n                                                    [disableOptionCentering]="true"\r\n                                                    *ngIf="(deliverto | filter : searchDeliverTo) as goverresult"\r\n                                                    (selectionChange)="delivertochange(cour.course_delivered.value)"\r\n                                                    panelClass="select_with_search" >\r\n                                                    <div class="searchinmultiselect">\r\n                                                        <mat-icon >search</mat-icon>\r\n                                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                            matInput class="searchselect" type="Search"\r\n                                                            placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                            (keydown)="$event.stopPropagation();"\r\n                                                            [(ngModel)]="searchDeliverTo"\r\n                                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                        <mat-icon (click)="searchDeliverTo = \'\'" class="reseticon"\r\n                                                            matSuffix\r\n                                                            *ngIf="searchDeliverTo !=\'\' && searchDeliverTo !=null">clear</mat-icon>\r\n                                                    </div>\r\n                                                    <div class="option-listing countryselectwithimage">\r\n                                                        <mat-option\r\n                                                            *ngFor="let deliver of deliverto | filter : searchDeliverTo"\r\n                                                            value={{deliver.referencemst_pk}}>{{ifarbic == true?\r\n                                                            (deliver.rm_name_ar):(deliver.rm_name_en)}}</mat-option>\r\n                                                            <mat-option value="others">{{\'Others\'}}</mat-option>\r\n                                                        <div *ngIf="goverresult?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                                    </div>\r\n                                                </mat-select>\r\n                                                <mat-error\r\n                                                *ngIf="(cour.course_delivered.value && cour.course_delivered.errors?.required) || CourseForm.submitted">\r\n                                                {{\'course.selectcourdeli\' | translate}}\r\n                                            </mat-error>\r\n                                            </mat-form-field>\r\n                                            <mat-form-field appearance="outline" *ngIf = "others">\r\n                                                <mat-label>{{\'course.courdeli\' | translate}} </mat-label>\r\n                                                <input (keydown.enter)="$event.preventDefault()" formControlName="course_delivered_new"\r\n                                                      matInput \r\n                                                    required\r\n                                                    >\r\n                                                    <mat-error\r\n                                                    *ngIf="cour.course_delivered_new.errors?.required || CourseForm.submitted">\r\n                                                    {{\'course.Enterctcourdeli\' | translate}}\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                                <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" type="button"\r\n                                    (click)="prev()">{{\'course.canc\' | translate}}\r\n                                </button>\r\n                                <button mat-raised-button color="primary" *ngIf="this.applicationtype == \'new\' || this.applicationtype == \'renew\'"  type="submit" (click)="courseAdd()"\r\n                                    class="ShowHidefs-15 submit_btn m-l-10">{{\'course.saveandnext\' | translate}}\r\n                                </button>\r\n                                <button mat-raised-button color="primary"  *ngIf="this.applicationtype == \'edit\' || this.applicationtype == \'update\'" type="submit" (click)="courseAdd()"\r\n                                    class="ShowHidefs-15 submit_btn m-l-10">{{\'course.updateandnext\' | translate}}\r\n                                </button>\r\n                                 <button mat-raised-button color="primary" *ngIf="this.applicationtype == \'view\'"  type="submit" (click)="nexttab()"\r\n                                    class="ShowHidefs-15 submit_btn m-l-10">{{\'course.next\' | translate}}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </mat-tab>\r\n                    \x3c!--tab 2--\x3e\r\n                    <mat-tab>\r\n                        <ng-template mat-tab-label>\r\n                            <div class="tabscontent">\r\n                                <span class="contentcircle m-r-10">2</span>\r\n                                <div class="tabtitle">\r\n                                    <P class="fs-14">{{\'international.interreco\' | translate}} <span class="mandatory" *ngIf="this.applicationtype != \'view\' && this.intertabmanditoryornot">*</span></P>\r\n                                </div>\r\n                            </div>\r\n                        </ng-template>\r\n                        \x3c!-- <div class="formcontainer m-t-25">\r\n                            <div class="title" fxLayout="row" fxLayoutAlign="center center">\r\n                                <h4 clas="fs-18">{{\'international.interreco\' | translate}}</h4>\r\n                                <div class="line p-l-20"><mat-divider></mat-divider></div>\r\n                            </div>\r\n                            <div class="successcmd m-l-0 m-r-0 m-b-20" *ngIf="interstatus == 3 || interstatus == 4 " [ngClass]="interstatus == 4 ? \'declinecmd\' : \'successcmd\'">\r\n                                <p class="18 comment" *ngIf="interstatus == 3">{{\'institute.approvalcmd\' | translate}}</p>\r\n                                <p class="18 comment" *ngIf="interstatus == 4">{{\'institute.declcomm\' | translate}}</p>\r\n                                <p class="16 m-b-30" >{{intercomment}}</p>\r\n                                    <mat-divider></mat-divider>\r\n                                   <div class="validinfo"  fxLayout="row wrap" >\r\n                                    <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}}:<span class="fs-16 txt-gry3 m-l-10">{{interaddedon}}</span></p>\r\n                                    <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}}:<span class="fs-16 txt-gry3 m-l-10">{{interaddedby}}</span></p>\r\n                                   </div>\r\n                            </div>\r\n                        </div> --\x3e\r\n                        <div class="paginationwithfilter masterPageTop m-b-25">\r\n                            \x3c!-- [style.visibility]="(resultsLength > 5) ? \'visible\' : \'hidden\' " --\x3e\r\n                            <mat-paginator class="masterPage masterPageTop" #paginator [length]="secondaryLength"\r\n                                [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                (page)="secondaryPaginator($event);"></mat-paginator>\r\n                            <div fxLayout="row wrap">\r\n                                <div fxFlex.gt-sm="100" fxFlex="100">\r\n                                    <button *ngIf="this.applicationtype !=\'view\' && !nodocumentopload" mat-raised-button color="primary" type="button" (click)="sHowhide()"\r\n                                        class="ShowHidefs-15 submit_btn m-r-10">{{\'international.add\' | translate}}\r\n                                    </button>\r\n                                    <button mat-raised-button type="button" color="primary" (click)="clickEvent()"\r\n                                        class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7"\r\n                                            aria-hidden="true"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout="row wrap">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                                <div class="awaredtable">\r\n                                    <mat-table #table class="scrolldata" [dataSource]="dataSource" matSort multiTemplateDataRows\r\n                                        matSortDisableClear>\r\n                                        <ng-container matColumnDef="irm_intlrecogname_en">\r\n                                            <mat-header-cell fxFlex="300px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'international.awarorgan\' | translate}}\r\n                                            </mat-header-cell>\r\n                                            <mat-cell data-label="irm_intlrecogname_en" fxFlex="300px"\r\n                                                *matCellDef="let element">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{element.irm_intlrecogname_en}}</div> </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="last_aud">\r\n                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'international.lastaudi\' |\r\n                                                translate}}</mat-header-cell>\r\n                                            <mat-cell data-label="last_aud" fxFlex="263px" *matCellDef="let element">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{element.last_aud}}</div> </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="url">\r\n                                            <mat-header-cell fxFlex="120px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'international.document\' | translate}}\r\n                                            </mat-header-cell>\r\n                                            <mat-cell data-label="url" fxFlex="120px" *matCellDef="let element">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder" fxLayoutAlign="start center">\r\n                                                    <span mat-button class="viewdocument txt-gry3 m-t-5"><a target="_blank"\r\n                                                      class="txt-gry3" fxLayoutAlign="start center" href={{element.url}}><img  class="document_img p-r-5" src="assets/images/opalimages/{{element.mcfd_filetype}}_new.svg">View</a></span></div></mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="status">\r\n                                            <mat-header-cell fxFlex="170px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>\r\n                                                {{\'international.stat\' | translate}} </mat-header-cell>\r\n                                            <mat-cell data-label="status" fxFlex="170px" *matCellDef="let element">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder"> <span *ngIf="element.status == \'1\'" class="red">{{\'table.new\'\r\n                                                    |translate}}</span>\r\n                                                <span *ngIf="element.status == \'2\'" class="blue">{{\'table.updated\' |translate}}</span>\r\n                                                \x3c!-- <span *ngIf="element.status == \'3\'" class="green"  (click)="expandedElement = expandedElement === element ? null : element">{{\'table.approv\'\r\n                                                    |translate}}<img class="p-l-15" matTooltip="{{\'table.tool\' |translate}}"\r\n                                                    mat-button src="assets/images/statusicon.svg" alt="statusicon"></span>\r\n                                                <span *ngIf="element.status == \'4\'" class="red"  (click)="expandedElement = expandedElement === element ? null : element">{{\'table.decl\'\r\n                                                    |translate}}<img class="p-l-15" matTooltip="{{\'table.tool\' |translate}}"\r\n                                                    mat-button src="assets/images/statusicon.svg" alt="statusicon"></span> --\x3e\r\n                                                    <span *ngIf="element.status == \'3\'" class="green">{{\'table.approv\' |translate}}</span>\r\n                                                    <span *ngIf="element.status == \'4\'" class="red">{{\'table.decl\' |translate}}</span>\r\n                                                </div>\r\n                                               \r\n                                            </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="created_on">\r\n                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>\r\n                                                {{\'international.addon\' | translate}} </mat-header-cell>\r\n                                            <mat-cell data-label="created_on" fxFlex="263px" *matCellDef="let element">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{element.created_on}}</div>\r\n                                                 </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="updated_on">\r\n                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>\r\n                                                {{\'international.lastupdat\' | translate}} </mat-header-cell>\r\n                                            <mat-cell data-label="updated_on" fxFlex="263px" *matCellDef="let element">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{element.updated_on ? element.updated_on : \'-\'}}</div>\r\n                                                 </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="action" stickyEnd>\r\n                                            <mat-header-cell fxFlex="100px" mat-header-cell *matHeaderCellDef>\r\n                                                {{\'international.Action\' | translate}}\r\n                                            </mat-header-cell>\r\n                                            <mat-cell data-label="action" fxFlex="100px" *matCellDef="let element">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder"><div class="manageoptions">\r\n                                                    <button class="menubutton" mat-icon-button\r\n                                                        [matMenuTriggerFor]="actionmenu"\r\n                                                        aria-label="Example icon-button with a menu">\r\n                                                        <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                    </button>\r\n                                                    <mat-menu #actionmenu="matMenu"\r\n                                                        class="master-menu whentootltipadded">\r\n                                                        <button type="button" mat-menu-item\r\n                                                            (click)="interedit(element,\'edit\')" *ngIf="this.applicationtype !=\'view\' && !nodocumentopload"><span>{{\'table.edit\'\r\n                                                                |\r\n                                                                translate}} </span></button>\r\n                                                        <button type="button" mat-menu-item *ngIf="this.applicationtype !=\'view\' && element.status == 1" (click)="interdelete(element.appintrecogtmp_pk,\'delete\')"><span>{{\'table.delete\' |\r\n                                                                translate}}</span></button>\r\n                                                                \x3c!-- *ngIf="this.applicationtype ==\'view\'" --\x3e\r\n                                                        <button type="button" mat-menu-item  (click)="interedit(element,\'view\')"><span>{{\'table.view\' |\r\n                                                                translate}}</span></button>\r\n                                                    </mat-menu>\r\n                                                </div></div>\r\n                                                \r\n                                            </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="expandedDetail" stickyEnd>\r\n                                            <td mat-cell fxFlex="1479px"  *matCellDef="let element" [attr.colspan]="displayedColumns.length">\r\n                                              <div *ngIf="expandedElement === element">\r\n                                                <div class="example-element-detail"\r\n                                                   [@detailExpand]="element == expandedElement ? \'expanded\' : \'collapsed\'" *ngIf="element.status == \'3\' || element.status == \'4\'" >\r\n                                                <div class="example-element-diagram "  [ngClass]="element.status == 3 ? \'successcmd\' : \'declinecmd\'">\r\n                                                    <div fxLayout="row" fxLayoutAlign="space-between center">\r\n                                                        <p class="fs-18 comment m-0">{{\'institute.comm\' | translate}}  </p>\r\n                                                        <mat-icon  class="fs-18 comment" matTooltip="{{\'institute.close\' | translate}}" (click)="toggleExpansion()">close</mat-icon>\r\n                                                       </div>\r\n                                                        <p class="16 m-b-30" [innerHTML]="element.appintit_appdeccomment?element.appintit_appdeccomment:\'Nil\' | striphtml" ></p>\r\n                                                            <mat-divider></mat-divider>\r\n                                                           <div class="validinfo"  fxLayout="row wrap" >\r\n                                                            <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}} : <span class="fs-16 txt-gry3">{{element.appintit_appdecon}}</span></p>\r\n                                                            <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}} : <span class="fs-16 txt-gry3">{{element.oum_firstname}}</span></p>\r\n                                                           </div>\r\n                                                </div>\r\n                                              </div>\r\n                                              </div>\r\n                                            </td>\r\n                                          </ng-container>\r\n                                        <ng-container matColumnDef="row-first">\r\n                                            <mat-header-cell fxFlex="300px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                    <input matInput [formControl]="Awarding" (keyup)="applyFilterforinter($event.target.value,\'Awarding\')">\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-second">\r\n                                            <mat-header-cell fxFlex="263px" class="serachrow datepickerrangeform" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    \x3c!-- <mat-label>{{\'table.search\' |translate}}</mat-label> --\x3e\r\n                                                    <div class="drpicker" id="regapp">\r\n                                                        <input id="login_session" (ngModelChange)="applyFilterforinter($event,\'LastAudited\')" [formControl]="LastAudited" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                        <div class="closeanddateicon">\r\n                                                            <mat-datepicker-toggle matSuffix >\r\n                                                            </mat-datepicker-toggle>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-three">\r\n                                            <mat-header-cell fxFlex="120px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                \x3c!-- <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                    <input matInput [formControl]=" ">\r\n                                                </mat-form-field> --\x3e\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        \x3c!-- <ng-container matColumnDef="row-three"></ng-container> --\x3e\r\n                                        <ng-container matColumnDef="row-four">\r\n                                            <mat-header-cell fxFlex="170px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                    <mat-select [formControl]="Status" multiple (selectionChange)="applyFilterforinter($event.value,\'Status\')">\r\n                                                        <mat-option value="1">{{\'table.new\' |translate}}</mat-option>\r\n                                                        <mat-option value="2">{{\'table.updated\'\r\n                                                            |translate}}</mat-option>\r\n                                                        <mat-option value="3">{{\'table.approv\' |translate}}</mat-option>\r\n                                                        <mat-option value="4">{{\'table.decl\' |translate}}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-five">\r\n                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    \x3c!-- <mat-label>{{\'table.search\' |translate}}</mat-label> --\x3e\r\n                                                    <div class="drpicker" id="regapp">\r\n                                                        <input id="login_session" (ngModelChange)="applyFilterforinter($event,\'Addedon\')" [formControl]="Addedon" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                        <div class="closeanddateicon">\r\n                                                            <mat-datepicker-toggle matSuffix >\r\n                                                            </mat-datepicker-toggle>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    \r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-six">\r\n                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <div class="drpicker" id="regapp">\r\n                                                        <input id="login_session" (ngModelChange)="applyFilterforinter($event,\'LastUpdated\')" [formControl]="LastUpdated" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                        <div class="closeanddateicon">\r\n                                                            <mat-datepicker-toggle matSuffix >\r\n                                                            </mat-datepicker-toggle>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-seven" stickyEnd>\r\n                                            <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n\r\n                                                <i class="fa fa-refresh m-l-15 cursorview" (click)="Filterinternational();filtersts=false;"\r\n                                                    aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        \x3c!-- <mat-header-row id="headerrowcells" *matHeaderRowDef="displayedColumns">\r\n                                        </mat-header-row>\r\n                                        <mat-header-row id="searchrow"\r\n                                            *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\' , \'row-seven\']">\r\n                                        </mat-header-row>\r\n                                        <mat-row mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row> --\x3e\r\n                                        <tr mat-header-row id="headerrowcells" *matHeaderRowDef="displayedColumns;"></tr>\r\n                                        <mat-header-row id="searchrow"\r\n                                        *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\' , \'row-seven\']">\r\n                                        </mat-header-row>\r\n                                        <tr mat-row *matRowDef="let element; columns: displayedColumns;" class="example-element-row"\r\n                                            [class.example-expanded-row]="expandedElement === element">\r\n                                        </tr>\r\n                                        <tr mat-row *matRowDef="let element; columns: [\'expandedDetail\']"\r\n                                        [class.example-detail-row-expanded]="expandedElement === element"\r\n                                        [class.example-detail-row-collapsed]="expandedElement !== element">\r\n                                    </tr>\r\n                                        \x3c!-- <tr mat-row *matRowDef="let row; columns: [\'expandedDetail\']" class="example-detail-row"></tr> --\x3e\r\n                                        <ng-container matColumnDef="disclaimer">\r\n                                            <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                                <div [ngClass]="tblplaceholder? \' \' :\'nofound\'" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                                    <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                        <div fxLayout="row wrap" fxLayoutAlign="center center"  *ngIf="tblplaceholder"\r\n                                                        class="NorecordLoader m-t-10"></div>\r\n                                                        <img src="assets/images/opalimages/norecord.svg" alt="norecord" *ngIf="!tblplaceholder">\r\n                                                        <p class="m-t-10 txt-gry3 fs-16" *ngIf="!tblplaceholder">{{\'common.noreco\' | translate}} \r\n                                                        </p>\r\n                                            </div>\r\n                                        </div>\r\n                                            </td>\r\n                                        </ng-container>\r\n                                        <ng-container>\r\n                                          \r\n                                            <mat-footer-row  [class.stickyclass]="(secondaryLength > 0) ? \'none\' : \'block\' " [style.display]="(secondaryLength > 0) ? \'none\' : \'block\' " \r\n                                                *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                            </mat-footer-row>\r\n                                        </ng-container>\r\n                                    </mat-table>\r\n                                </div>\r\n                                <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                        <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                            class="masterPage masterbottom " showFirstLastButtons\r\n                                            [pageSize]="paginator?.pageSize" (page)="secondaryPaginator($event);"\r\n                                            [pageIndex]="paginator?.pageIndex" [length]="paginator?.length"\r\n                                            [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                                        </mat-paginator>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                            <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" type="button"\r\n                                (click)="previnst()">{{\'international.prev\' | translate}}\r\n                            </button>\r\n                            <button mat-raised-button color="primary" type="button" (click)="nextOperate()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'international.next\' | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </mat-tab>\r\n                    \x3c!--tab 3--\x3e\r\n                    <mat-tab>\r\n                        <ng-template mat-tab-label>\r\n                            <div class="tabscontent">\r\n                                <span class="contentcircle m-r-10">3</span>\r\n                                <div class="tabtitle">\r\n                                    <P class="fs-14">{{\'documents.docurequ\' | translate}} <span *ngIf="this.applicationtype != \'view\'" class="mandatory">*</span></P>\r\n                                </div>\r\n                            </div>\r\n                        </ng-template>\r\n                        \x3c!-- <div class="formcontainer m-t-25">\r\n                            <div class="title" fxLayout="row" fxLayoutAlign="center center">\r\n                                <h4 clas="fs-18"> {{\'documents.docurequ\' | translate}}</h4>\r\n                                <div class="line p-l-20"><mat-divider></mat-divider></div>\r\n                            </div>\r\n                        </div> --\x3e\r\n                      \r\n                        <form autocomplete="off" [formGroup]="documentForm" id="documentForm">\r\n                            <div class="requiredfiels m-t-25" *ngFor="let doc of docmst ;let indexOfelement=index;" >\r\n                              <div fxLayout="row ">\r\n                                <h4 class="m-0 fs-16">{{indexOfelement+1}}{{\'.\'}} {{ifarbic == true?\r\n                                    (doc.ddm_documentname_ar):(doc.ddm_documentname_en)}}\r\n                                    <span *ngIf="formParentArrayFormation(indexOfelement+1,\'text\',doc)"></span>\r\n                                    <span *ngIf="doc.appdst_status == 1" class="badge mainnew m-l-10">New</span>\r\n                                    <span *ngIf="doc.appdst_status == 2" class="badge mainupdate m-l-10">Update</span>\r\n                                   <span *ngIf="doc.appdst_status == 3" style="cursor: pointer;">\r\n                                    <span  class="badge mainappr m-l-10" (click)="toggle(indexOfelement)">Approved</span>\r\n                                    <img class="p-l-10" matTooltip="View Comments" \r\n                                    (click)="toggle(indexOfelement)" mat-button src="assets/images/statusicon.svg" alt="statusicon">\r\n                                   </span>\r\n                                   <span *ngIf="doc.appdst_status == 4" style="cursor: pointer;">\r\n                                    <span  class="badge maindecl m-l-10" (click)="toggle(indexOfelement)">Declined</span>\r\n                                    <img class="p-l-10" matTooltip="View Comments" \r\n                                    (click)="toggle(indexOfelement)" mat-button src="assets/images/statusicon.svg" alt="statusicon">\r\n                                   </span>\r\n                                </h4>\r\n                                \r\n                                \x3c!-- <span *ngIf="doc.appdst_status == 4" class="badge maindecl m-l-10">Declined</span> --\x3e\r\n                              </div>\r\n                                <input matInput *ngIf="hidden" formControlName="referpk_{{indexOfelement+1}}">\r\n                                 <div *ngIf="isopen[indexOfelement]" [@fadeInOut] class="m-t-10">\r\n                                    <div class="successcmd m-l-0 m-r-0 m-b-20" *ngIf="doc.appdst_status == 3 || doc.appdst_status == 4" [ngClass]="doc.appdst_status == 4 ? \'declinecmd\' : \'successcmd\'">\r\n                                        <div fxLayout="row" fxLayoutAlign="space-between center">\r\n                                            <p class="18 comment" *ngIf="doc.appdst_status == 3">{{\'institute.approvalcmd\' | translate}}</p>\r\n                                            <p class="18 comment" *ngIf="doc.appdst_status == 4">{{\'institute.declcomm\' | translate}}</p>\r\n                                             <mat-icon fxLayoutAlign="center center" class="close fs-18" style="cursor: pointer;" (click)="toggle(indexOfelement)" matTooltip="{{\'common.close\' | translate}}">close</mat-icon>\r\n                                            </div>\r\n                                        <p class="16 m-b-30 m-0" *ngIf="doc.appdst_appdeccomment" [innerHTML]="doc.appdst_appdeccomment | striphtml"></p>\r\n                                        <p class="16 m-b-30" *ngIf="!doc.appdst_appdeccomment">Nil</p>\r\n                                            <mat-divider class="m-t-15"></mat-divider>\r\n                                           <div class="validinfo"  fxLayout="row wrap" >\r\n                                            <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}} : <span class="fs-16 txt-gry3">{{doc.appdst_appdecon}}</span></p>\r\n                                            <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}} : <span class="fs-16 txt-gry3">{{doc.oum_firstname}}</span></p>\r\n                                           </div>\r\n                                    </div>\r\n                                 </div>\r\n                                <div class="yesno" [ngClass]="(this.applicationtype == \'view\' || nodocumentopload)? \'readonlyfield\' : \'\'" >\r\n                                    <p class="m-r-40">{{\'documents.prov\' | translate}}<span class="req m-l-5">*</span>\r\n                                    </p>\r\n                                    <mat-radio-group aria-label="Select an option"\r\n                                        formControlName="redio_{{indexOfelement+1}}">\r\n                                        <mat-radio-button value="1"\r\n                                            (click)="docradiobtn(1,indexOfelement+1,doc.documentdtlsmst_pk);"\r\n                                            class="m-r-30 m-l-30" >{{\'documents.yes\' |\r\n                                            translate}}</mat-radio-button>\r\n                                        <mat-radio-button value="2"\r\n                                            (click)="docradiobtn(2,indexOfelement+1,doc.documentdtlsmst_pk);"\r\n                                            class="m-l-30">{{\'documents.no\'\r\n                                            |\r\n                                            translate}}</mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                </div>\r\n\r\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15"\r\n                                    id="doc_{{indexOfelement+1}}">\x3c!-- *ngIf="isValid" --\x3e\r\n                                    <div fxFlex="100" fxFlex.gt-sm="100" class="documents">\r\n                                        <app-filee #updateinfo [noteHideShow]="false" [fileMstRef]="drvInputed1" [deleteicon]="deleteicon" [requiredfield]="requiredfieldshow"\r\n                                            (filesSelected)="fileeSelected1($event,drvInputed1,indexOfelement+1)" formControlName="file_{{indexOfelement+1}}">\r\n                                        </app-filee>\r\n                                        <input matInput *ngIf="hidden" formControlName="file1_{{indexOfelement+1}}">\r\n                                        <mat-hint class="txt-gry fs-12"> {{\'documents.noteyoucanupload\' | translate}}</mat-hint>\r\n                                        \x3c!-- <mat-error\r\n                                                *ngIf="documentForm.controls[\'file_\' + (indexOfelement+1)].invalid && documentForm.submitted">\r\n                                                {{\'Please Upload file\' | translate}} </mat-error> --\x3e\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf="doc.ddm_status == 2 || (doc.appdst_submissionstatus && doc.appdst_submissionstatus)== 2" fxLayout="row wrap" fxLayoutAlign="flex-start center"\r\n                                    id="re_{{indexOfelement+1}}" [ngClass]="(this.applicationtype == \'view\' || nodocumentopload)? \'readonlyfield\' : \'\'">\x3c!-- *ngIf="!isValid" --\x3e\r\n                                \r\n                                    <div fxFlex="100" fxFlex="90" class="remark">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'documents.remark\' | translate}}</mat-label>\r\n                                            <textarea #length matInput (ngModelChange)="onCommentChange($event,indexOfelement+1)" maxlength="1000"\r\n                                                formControlName="remark_{{indexOfelement+1}}" required>\r\n                                         </textarea>\r\n                                            <mat-error\r\n                                                *ngIf="documentForm.controls[\'remark_\' + (indexOfelement+1)].invalid">\r\n                                                {{\'documents.enterthrremark\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                        <mat-hint fxLayoutAlign="flex-end start"\r\n                                            class="fs-13 txt-gry">{{uploadlength[indexOfelement+1] || 0 || ((doc.appdst_remarks)?(doc.appdst_remarks.length):(0)) }}/1000</mat-hint>\r\n                                            \x3c!-- || ((doc.appdst_remarks.length)?(doc.appdst_remarks.length):(0)) --\x3e\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                                <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" type="button"\r\n                                    (click)="prevoperat()">{{\'documents.prev\' | translate}}\r\n                                </button>\r\n                                <button mat-raised-button color="primary" type="submit" [disabled]="docsavebtn" *ngIf="this.applicationtype == \'new\' || this.applicationtype == \'renew\'"  (click)="nextCourse()"\r\n                                    class="ShowHidefs-15 submit_btn m-l-10">{{\'documents.saveandnext\' | translate}}\r\n                                </button>\r\n                                <button mat-raised-button color="primary" type="submit" *ngIf="this.applicationtype == \'edit\' || (this.applicationtype == \'update\' && !nodocumentopload) " (click)="nextCourse()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'course.updateandnext\' | translate}}\r\n                            </button>\r\n                            <button mat-raised-button color="primary" type="submit"  *ngIf="this.applicationtype ==\'view\' || nodocumentopload"  (click)="gotostaff()"\r\n                            class="ShowHidefs-15 submit_btn m-l-10">{{\'course.next\' | translate}}\r\n                        </button>\r\n                      \r\n                            </div>\r\n                        </form>\r\n                    </mat-tab>\r\n                    \x3c!--tab 4--\x3e\r\n                    <mat-tab>\r\n                        <ng-template mat-tab-label>\r\n                            <div class="tabscontent">\r\n                                <span class="contentcircle m-r-10"> 4\r\n                                </span>\r\n                                <div class="tabtitle">\r\n                                    <P class="fs-14">{{\'staff.staff\' | translate}} <span class="mandatory" *ngIf="this.applicationtype != \'view\'" >*</span></P>\r\n                                </div>\r\n                            </div>\r\n                        </ng-template>\r\n                        \x3c!-- <div class="formcontainer m-t-25">\r\n                            <div class="title" fxLayout="row" fxLayoutAlign="center center">\r\n                                <h4 clas="fs-18"> {{\'staff.staff\' | translate}}</h4>\r\n                                <div class="line p-l-20"><mat-divider></mat-divider></div>\r\n                            </div>\r\n                        </div> --\x3e\r\n                        <div class="successcmd m-l-0 m-r-0 m-b-20 m-t-25" *ngIf="comment == 3 || comment == 4" [ngClass]="comment == true ? \'declinecmd\' : \'successcmd\'">\r\n                            <p class="18 comment" *ngIf="comment == 3">{{\'institute.approvalcmd\' | translate}}</p>\r\n                            <p class="18 comment" *ngIf="comment == 4">{{\'institute.declcomm\' | translate}}</p>\r\n                            <p class="16 m-b-30" >test</p>\r\n                                <mat-divider></mat-divider>\r\n                               <div class="validinfo"  fxLayout="row wrap" >\r\n                                <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}} : <span class="fs-16 txt-gry3">2-03-2023</span></p>\r\n                                <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}} : <span class="fs-16 txt-gry3">sam</span></p>\r\n                               </div>\r\n                        </div>\r\n                        <div class="paginationwithfilter masterPageTop ">\r\n                            \x3c!-- [style.visibility]="(resultsLength > 5) ? \'visible\' : \'hidden\' " --\x3e\r\n                            <mat-paginator class="masterPage masterPageTop" #paginatorthird [length]="thirdLength"\r\n                                [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                (page)="thirdPaginator($event);"></mat-paginator>\r\n                            <div fxLayout="row wrap">\r\n                                <div fxFlex.gt-sm="100" fxFlex="100">\r\n                                    <button mat-raised-button color="primary" type="button" *ngIf="this.applicationtype !=\'view\'" (click)="showHidestaff()"\r\n                                        class="ShowHidefs-15 submit_btn m-r-10">{{\'international.add\' | translate}}\r\n                                    </button>\r\n                                    <button mat-raised-button type="button" color="primary" (click)="clickEvent()"\r\n                                        class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7"\r\n                                            aria-hidden="true"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout="row wrap">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                                <div class="awaredtable">\r\n                                    <mat-table #table class="scrolldata" [dataSource]="StaffList" matSort  multiTemplateDataRows #sortstaffgrid="matSort"\r\n                                        matSortDisableClear>\r\n                                        <ng-container matColumnDef="sir_idnumber">\r\n                                            <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'staff.civinumb\' | translate}}</mat-header-cell>\r\n                                            <mat-cell data-label="sir_idnumber" fxFlex="250px" *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{staffData.sir_idnumber}}</div>\r\n                                                  </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="sir_name_en">\r\n                                            <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'staff.staffname\' | translate}}</mat-header-cell>\r\n                                            <mat-cell data-label="sir_name_en" fxFlex="250px" *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{ifarbic == true ?(staffData.sir_name_ar):(staffData.sir_name_en)}}</div>\r\n                                                </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="age">\r\n                                            <mat-header-cell fxFlex="120px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'staff.age\' | translate}} </mat-header-cell>\r\n                                            <mat-cell data-label="age" fxFlex="120px" *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{staffData.age}}</div>\r\n                                                  </mat-cell>\r\n                                        </ng-container> \r\n                                        <ng-container matColumnDef="rolename_en">\r\n                                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'staff.roleofcourse\' | translate}}</mat-header-cell>\r\n                                            <mat-cell data-label="rolename_en" fxFlex="230px"\r\n                                                *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                \x3c!-- <div *ngIf="!tblplaceholder">{{(ifarbic == true ?(staffData.rm_rolename_ar+(staffData.rolecnt >= 1 ?\'(+\'+staffData.rolecnt+\')\':\'\')):(staffData.rm_rolename_en+(staffData.rolecnt >= 1 ?\'(+\'+staffData.rolecnt+\')\':\'\')))}}</div> --\x3e\r\n                                                \r\n                                                <div *ngIf="!tblplaceholder">\r\n                                                    {{(ifarbic?splitRoleFunction(staffData.rolename_ar):splitRoleFunction(staffData.rolename_en))}}\r\n                                                    <span *ngIf="rolesubcategory.length != 1">\r\n                                                        <span  style="cursor: pointer;" matTooltip="{{rolecategory_remove}}">\r\n                                                         (+{{rolesubcategory.length-1}})\r\n                                                         </span>\r\n                                                     </span>  \r\n                                                </div>\r\n                                            </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="ccm_catname_en">\r\n                                            <mat-header-cell fxFlex="200px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'staff.coursesub\' | translate}}</mat-header-cell>\r\n                                            <mat-cell data-label="ccm_catname_en" fxFlex="200px"\r\n                                                *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">\r\n                                                    {{ifarbic?splitCourseFunction(staffData.ccm_catname_ar):splitCourseFunction(staffData.ccm_catname_en)}}\r\n                                                    <span *ngIf="coursesubcategory.length != 1">\r\n                                                        <span  style="cursor: pointer;" matTooltip="{{category_remove}}">\r\n                                                         (+{{coursesubcategory.length-1}})\r\n                                                         </span>\r\n                                                    </span> \r\n                                                </div>\r\n                                            </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="status">\r\n                                            <mat-header-cell fxFlex="190px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>\r\n                                                {{\'staff.stat\' | translate}} </mat-header-cell>\r\n                                            <mat-cell data-label="status" fxFlex="190px" *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder"><span *ngIf="staffData.appsit_status == \'1\'" class="red">{{\'table.new\'\r\n                                                    |translate}}</span>\r\n                                                <span *ngIf="staffData.appsit_status == \'2\'" class="blue">{{\'table.updated\'\r\n                                                    |translate}}</span>\r\n                                                \x3c!-- <span *ngIf="staffData.appsit_status == \'3\'" class="green" (click)="expandedElement = expandedElement === staffData ? null : staffData">{{\'table.approv\'\r\n                                                    |translate}}<img class="p-l-15" matTooltip="{{staffData.appsit_appdeccomment}}"\r\n                                                    mat-button src="assets/images/statusicon.svg" alt="statusicon"></span>\r\n                                                <span *ngIf="staffData.appsit_status == \'4\'" class="red"  (click)="expandedElement = expandedElement === staffData ? null : staffData">{{\'table.decl\'\r\n                                                    |translate}}<img class="p-l-15" matTooltip="{{staffData.appsit_appdeccomment}}"\r\n                                                    mat-button src="assets/images/statusicon.svg" alt="statusicon"></span> </div>--\x3e\r\n                                                    <span *ngIf="staffData.appsit_status == \'5\'" class="declined">{{\'Failed\'}}</span> \r\n                                                    <span *ngIf="staffData.appsit_status == \'3\'" class="green">{{\'table.approv\' |translate}}</span>\r\n                                                    <span *ngIf="staffData.appsit_status == \'4\'" class="red">{{\'table.decl\' |translate}}</span></div>\r\n                                                </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="competcard">\r\n                                            <mat-header-cell fxFlex="190px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>\r\n                                                {{\'staff.compcard\' | translate}} </mat-header-cell>\r\n                                                \x3c!-- 1 -new ,2-active 3-expired 4-postforupgrade --\x3e\r\n                                            <mat-cell data-label="competcard" fxFlex="190px"\r\n                                                *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">\r\n                                                    <span *ngIf="staffData.competcard == \'1\'"\r\n                                                    class="new">{{\'New\'}}</span>\r\n                                                    <span *ngIf="staffData.competcard == \'2\'"\r\n                                                    class="approved">{{\'Active\'}}</span>\r\n                                                <span *ngIf="staffData.competcard == \'3\'" class="declined">{{\'Expired\'}}</span>\r\n                                                <span *ngIf="staffData.competcard == \'4\'"\r\n                                                class="update">{{\'Posted for Card Upgrade\'}}</span></div>\r\n                                            </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="addedon">\r\n                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'staff.addon\' | translate}}</mat-header-cell>\r\n                                            <mat-cell data-label="addedon" fxFlex="263px" *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{staffData.addedon}}</div>\r\n                                                 </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="updatedon">\r\n                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                mat-sort-header>{{\'staff.lastupdat\' | translate}} </mat-header-cell>\r\n                                            <mat-cell data-label="updatedon" fxFlex="263px"\r\n                                                *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder">{{staffData.updatedon?staffData.updatedon:\'-\'}}</div>\r\n                                                 </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="action" stickyEnd>\r\n                                            <mat-header-cell fxFlex="100px" mat-header-cell\r\n                                                *matHeaderCellDef>{{\'staff.Action\' | translate}} </mat-header-cell>\r\n                                            <mat-cell data-label="action" fxFlex="100px" *matCellDef="let staffData">\r\n                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                <div *ngIf="!tblplaceholder"><div class="manageoptions">\r\n                                                    <button class="menubutton" mat-icon-button\r\n                                                        [matMenuTriggerFor]="actionmenu"\r\n                                                        aria-label="Example icon-button with a menu">\r\n                                                        <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                    </button>\r\n                                                    <mat-menu #actionmenu="matMenu"\r\n                                                        class="master-menu whentootltipadded">\r\n                                                        <button type="button" mat-menu-item *ngIf="this.applicationtype !=\'view\'" (click)="editstaffgrid(staffData,\'edit\')">\r\n                                                            <span>{{\'table.edit\' | translate}} </span>\r\n                                                        </button>\r\n                                                        <button type="button" mat-menu-item *ngIf="this.applicationtype !=\'view\' && staffData.appsit_status == 1" (click)="deletestaffgrid(staffData.appostaffinfotmp_pk)">\r\n                                                            <span>{{\'table.delete\' | translate}}</span>\r\n                                                        </button>\r\n                                                        <button type="button" mat-menu-item  (click)="editstaffgrid(staffData,\'view\')">\r\n                                                            <span>{{\'table.view\' | translate}}</span>\r\n                                                        </button>\r\n                                                        <button *ngIf="staffData.showaccessor == \'show\'" type="button" mat-menu-item (click)="accessorschedule(staffData.appostaffinfotmp_pk)">\r\n                                                            <span>{{\'Schedule Assessor Availability\'}}</span>\r\n                                                        </button>\r\n                                                    </mat-menu>\r\n                                                </div></div>\r\n                                            </mat-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="expandedDetail">\r\n                                            <td mat-cell fxFlex="1866px"  *matCellDef="let staffData" [attr.colspan]="staffListData.length">\r\n                                             <div *ngIf="expandedElement === staffData">\r\n                                                <div class="example-element-detail"\r\n                                                [@detailExpand]="staffData == expandedElement ? \'expanded\' : \'collapsed\'" *ngIf="staffData.appsit_status == \'3\' || staffData.appsit_status == \'4\'">\r\n                                             <div class="example-element-diagram" [ngClass]="staffData.appsit_status == 3 ? \'successcmd\' : \'declinecmd\'">\r\n                                                 <div fxLayout="row" fxLayoutAlign="space-between center">\r\n                                                     <p class="fs-18 comment m-0">{{\'institute.comm\' | translate}}  </p>\r\n                                                     <mat-icon  class="fs-18 comment" matTooltip="{{\'institute.close\' | translate}}" (click)="toggleExpansion()">close</mat-icon>\r\n                                                    </div>\r\n                                                     <p class="16 m-b-30" [innerHTML]="staffData.appsit_appdeccomment | striphtml"></p>\r\n                                                         <mat-divider></mat-divider>\r\n                                                        <div class="validinfo"  fxLayout="row wrap" >\r\n                                                         <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}} : <span class="fs-16 txt-gry3">{{staffData.oum_firstname}}</span></p>\r\n                                                         <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}} : <span class="fs-16 txt-gry3">{{staffData.appsit_appdecby}}</span></p>\r\n                                                        </div>\r\n                                             </div>\r\n                                           </div>\r\n                                             </div>\r\n                                            </td>\r\n                                          </ng-container>\r\n                                        <ng-container matColumnDef="row-first">\r\n                                            <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                    <input matInput [formControl]="civil_numb" (keyup)="applyFilterforstaff($event.target.value,\'civil_numb\')">\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-second">\r\n                                            <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                    <input matInput [formControl]="staff_name" (keyup)="applyFilterforstaff($event.target.value,\'staff_name\')">\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-three">\r\n                                            <mat-header-cell fxFlex="120px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                \x3c!-- <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                    <mat-select [formControl]="age">\r\n                                                        <mat-option value="1">23</mat-option>\r\n                                                        <mat-option value="2">30</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-form-field> --\x3e\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-four">\r\n                                            <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                    <input matInput [formControl]="role_course"  (keyup)="applyFilterforstaff($event.target.value,\'role_course\')">\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-five">\r\n                                            <mat-header-cell fxFlex="200px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                    <input matInput [formControl]="cours_sub_cate" (keyup)="applyFilterforstaff($event.target.value,\'cours_sub_cate\')">\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-six">\r\n                                            <mat-header-cell fxFlex="190px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.sele\' |\r\n                                                        translate}}</mat-label>\r\n                                                    <mat-select [formControl]="StatusCour" multiple  (selectionChange)="applyFilterforstaff($event.value,\'StatusCour\')">\r\n                                                        <mat-option value="1">{{\'table.new\' |translate}}</mat-option>\r\n                                                        <mat-option value="2">{{\'table.updated\'|translate}}</mat-option>\r\n                                                        <mat-option value="3">{{\'table.approv\' |translate}}</mat-option>\r\n                                                        <mat-option value="4">{{\'table.decl\' |translate}}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-seven">\r\n                                            <mat-header-cell fxFlex="190px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                \x3c!-- <mat-form-field class="filter" appearance="outline">\r\n                                                    <mat-label>{{\'table.sele\' |\r\n                                                        translate}}</mat-label>\r\n                                                    <mat-select [formControl]="StatusCour" multiple  (selectionChange)="applyFilterforstaff($event.value,\'StatusCour\')">\r\n                                                        <mat-option value="1">{{\'table.new\' |translate}}</mat-option>\r\n                                                        <mat-option value="2">{{\'table.updated\'|translate}}</mat-option>\r\n                                                        <mat-option value="3">{{\'table.approv\' |translate}}</mat-option>\r\n                                                        <mat-option value="4">{{\'table.decl\' |translate}}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-form-field> --\x3e\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-eight">\r\n                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    \x3c!-- <mat-label>{{\'table.search\' |translate}}</mat-label> --\x3e\r\n                                                    <div class="drpicker" id="regapp">\r\n                                                        <input id="login_session" [formControl]="adddoncour" (ngModelChange)="applyFilterforinter($event,\'adddoncour\')" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                        <div class="closeanddateicon">\r\n                                                            <mat-datepicker-toggle matSuffix >\r\n                                                            </mat-datepicker-toggle>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    \r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-nine">\r\n                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <mat-form-field class="filter" appearance="outline">\r\n                                                    \x3c!-- <mat-label>{{\'table.search\' |translate}}</mat-label> --\x3e\r\n                                                    <div class="drpicker" id="regapp">\r\n                                                        <input id="login_session" [formControl]="LastUpdatedcour" (ngModelChange)="applyFilterforinter($event,\'LastUpdatedcour\')" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                        <div class="closeanddateicon">\r\n                                                            <mat-datepicker-toggle matSuffix >\r\n                                                            </mat-datepicker-toggle>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                  \r\n                                                </mat-form-field>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef="row-ten" stickyEnd>\r\n                                            <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                                                <i class="fa fa-refresh m-l-15 cursorview" (click)="clearFilterfour();filtersts=false;"\r\n                                                    aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                            </mat-header-cell>\r\n                                        </ng-container>\r\n                                        \x3c!-- <ng-container matColumnDef="row-ten" stickyEnd>\r\n                                            <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                                style="text-align:center">\r\n                \r\n                                                <i class="fa fa-refresh m-l-15 cursorview" (click)="Filterstaff();filtersts=false;"\r\n                                                    aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                            </mat-header-cell>\r\n                                        </ng-container> --\x3e\r\n                                        \x3c!-- <mat-header-row id="headerrowcells" *matHeaderRowDef="staffListData">\r\n                                        </mat-header-row>\r\n                                        <mat-header-row id="searchrow"\r\n                                            *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\' , \'row-seven\' , \'row-eight\', \'row-nine\']">\r\n                                        </mat-header-row>\r\n                                        <mat-row mat-row *matRowDef="let row; columns: staffListData;"></mat-row> --\x3e\r\n                                        <tr mat-header-row id="headerrowcells" *matHeaderRowDef="staffListData;"></tr>\r\n                                        <mat-header-row id="searchrow"\r\n                                        *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\' , \'row-seven\' , \'row-eight\', \'row-nine\' , \'row-ten\']">\r\n                                        </mat-header-row>\r\n                                        <tr mat-row *matRowDef="let element; columns: staffListData;" class="example-element-row"\r\n                                            [class.example-expanded-row]="expandedElement === element">\r\n                                        </tr>\r\n                                        <tr mat-row *matRowDef="let element; columns: [\'expandedDetail\']"\r\n                                        [class.example-detail-row-expanded]="expandedElement === element"\r\n                                        [class.example-detail-row-collapsed]="expandedElement !== element">\r\n                                    </tr>\r\n                                        <ng-container matColumnDef="disclaimer">\r\n                                            <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                                <div [ngClass]="tblplaceholder? \' \' :\'nofound\'" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                                    <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                        <div fxLayout="row wrap" fxLayoutAlign="center center"  *ngIf="tblplaceholder"\r\n                                                        class="NorecordLoader m-t-10"></div>\r\n                                                        <img src="assets/images/opalimages/norecord.svg" alt="norecord" *ngIf="!tblplaceholder">\r\n                                                        <p class="m-t-10 txt-gry3 fs-16" *ngIf="!tblplaceholder">{{\'common.noreco\' | translate}} \r\n                                                        </p>\r\n                                            </div>\r\n                                        </div>\r\n                                            </td>\r\n                                        </ng-container>\r\n                                        <ng-container>\r\n                                            <mat-footer-row [class.stickyclass]="(thirdLength > 0) ? \'none\' : \'block\'" [style.display]="(thirdLength > 0) ? \'none\' : \'block\' " \r\n                                                *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                            </mat-footer-row>\r\n                                        </ng-container>\r\n                                    </mat-table>\r\n                                </div>\r\n                                <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                        <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                            class="masterPage masterbottom " showFirstLastButtons\r\n                                            [pageSize]="paginatorthird?.pageSize" (page)="thirdPaginator($event);"\r\n                                            [pageIndex]="paginatorthird?.pageIndex" [length]="thirdLength"\r\n                                            [pageSizeOptions]="paginatorthird?.pageSizeOptions">\r\n                                        </mat-paginator>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="p-l-5 declare" fxLayout="row wrap" fxLayoutAlign="start center" *ngIf="this.applicationtype != \'view\'">\r\n                            <mat-checkbox (change)="oncHeckenable($event)"\r\n                            [disabled]="this.secondaryLength == 0 && this.thirdLength == 0 "> </mat-checkbox>\r\n                            <p class="fs-15 txt-gry3 m-l-10 m-0">{{\'staff.declarenotes\' | translate}}</p>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                            <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" type="button"\r\n                                (click)="prevcourse()">{{\'staff.prev\' | translate}}\r\n                            </button>\r\n                            \x3c!-- <button  *ngIf="secondaryLength > 0 && thirdLength > 0 &&  applicationtype != \'view\' "  mat-raised-button color="primary" type="button" (click)="finished()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.submdeskrev\' | translate}}\r\n                            </button> --\x3e\r\n                            <button  [disabled]="finalsubmitbtn"  mat-raised-button color="primary" type="button" (click)="finished()" *ngIf="this.applicationtype != \'view\' && this.resubmit_status == 1"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.submdeskrev\' | translate}}\r\n                            </button>\r\n                            <button  [disabled]="finalsubmitbtn"  mat-raised-button color="primary" type="button" (click)="finished()" *ngIf="this.applicationtype != \'view\' && this.resubmit_status == 2"\r\n                            class="ShowHidefs-15 submit_btn m-l-10">{{\'Re Submit for Desktop Review \' | translate}}\r\n                        </button>\r\n                        </div>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n                <div id="forms">\r\n                    \x3c!--courses--\x3e\r\n                    <form autocomplete="off" [formGroup]="awaredForm" *ngIf="international">\r\n                        <div class="successcmd m-l-0 m-r-0 m-b-20" *ngIf="interstatus == 3 || interstatus == 4" [ngClass]="interstatus == 4 ? \'declinecmd\' : \'successcmd\'">\r\n                            <p class="18 comment" *ngIf="interstatus == 3">{{\'institute.approvalcmd\' | translate}}</p>\r\n                            <p class="18 comment" *ngIf="interstatus == 4">{{\'institute.declcomm\' | translate}}</p>\r\n                            <p class="16 m-b-30"[innerHTML]="intercomment | striphtml" ></p>\r\n                                <mat-divider></mat-divider>\r\n                               <div class="validinfo"  fxLayout="row wrap" >\r\n                                <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}} : <span class="fs-16 txt-gry3">{{interaddedon}}</span></p>\r\n                                <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}} : <span class="fs-16 txt-gry3">{{interaddedby}}</span></p>\r\n                               </div>\r\n                        </div>\r\n                        <div class="formcontainer m-t-25">\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                    <mat-form-field class="example-full-width" appearance="outline">\r\n                                        <mat-select [errorStateMatcher]="matcher" required  (selectionChange)="awardorganchoose($event.value)"\r\n                                        formControlName="award_organ" (click)="listedaward = \'\'"\r\n                                        panelClass="select_with_search"\r\n                                        *ngIf="(interreg | filter : listedaward) as listedresult" >\r\n                                        <div class="searchinmultiselect">\r\n                                            <mat-icon >search</mat-icon>\r\n                                            <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                            class="searchselect" type="Search" placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                            (keydown)="$event.stopPropagation();" [(ngModel)]="listedaward"\r\n                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                            <mat-icon (click)="listedaward = \'\'" class="reseticon" matSuffix\r\n                                            *ngIf="listedaward !=\'\' && listedaward !=null">clear</mat-icon>\r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                            <mat-option *ngFor="let inter of interreg | filter : listedaward"\r\n                                            value={{inter.pk}}>{{inter.irm_intlrecogname_en}}\r\n                                            </mat-option>\r\n                                            <div *ngIf="listedresult.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                        </div>\r\n                                </mat-select>\r\n                                <mat-label>{{\'international.awardorgan\' | translate}}</mat-label>\r\n                                <mat-error *ngIf="awar.award_organ.errors?.required || awaredForm.submitted">\r\n                                    {{\'international.seleanawarorgan\' | translate}}\r\n                                </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100" class="date_exp">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label> {{\'international.lastaudidate\' | translate}}</mat-label>\r\n                                        <input matInput required formControlName="last_audit" (mousedown)="picker4.open(); $event.preventDefault" [disabled]="picker4.opened" (dateChange)="addEvent(\'last_audit\', $event)"\r\n                                            [matDatepicker]="picker4" readonly [max]="today">\r\n                                        <mat-datepicker-toggle matSuffix [for]="picker4"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker4></mat-datepicker>\r\n                                        \x3c!-- <mat-icon matSuffix class="m-b-4"\r\n                                            matTooltip="{{\'supplierreg.provtheopal\' | translate}} ">info_outline</mat-icon> --\x3e\r\n                                        <mat-error *ngIf="awar.last_audit.errors?.required || awaredForm.submitted">\r\n                                            {{\'international.selelastaudi\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                <div fxFlex="100" id="documents">\r\n\r\n                                \r\n                                <app-filee #Intrecog [fileMstRef]="drvInputed" [deleteicon]="deleteicon" [requiredfield]="requiredfieldshow"\r\n                                    (filesSelected)="fileeSelected($event,drvInputed)" formControlName="document_upload"\r\n                                    [notePosition]="\'bottom\'">\r\n                                </app-filee> \r\n\r\n                                   <mat-hint class="txt-gry fs-12"> {{\'international.noteyoucanupload\' |\r\n                                        translate}}</mat-hint> \r\n                                        \x3c!-- <mat-error *ngIf="!fileerror">Please Upload a file</mat-error> --\x3e\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                            <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" type="button"\r\n                                (click)="awardcancel()">{{\'international.canc\' | translate}}\r\n                            </button>\r\n                            <button *ngIf="this.interapptype == \'new\'" mat-raised-button color="primary" type="submit" (click)="addData()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'international.add\' | translate}}\r\n                            </button>\r\n                            <button *ngIf="this.interapptype == \'edit\'"  mat-raised-button color="primary" type="submit" (click)="addData()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'Update\'| translate}}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    \x3c!--staff--\x3e\r\n                    <div *ngIf="staffform">\r\n                        <div class="successcmd m-l-0 m-r-0 m-b-20" *ngIf="staffstatus == 3 || staffstatus == 4" [ngClass]="staffstatus == 4 ? \'declinecmd\' : \'successcmd\'">\r\n                            <p class="18 comment" *ngIf="staffstatus == 3">{{\'institute.approvalcmd\' | translate}}</p>\r\n                            <p class="18 comment" *ngIf="staffstatus == 4">{{\'institute.declcomm\' | translate}}</p>\r\n                            <p class="16 m-b-30" [innerHTML]="staffcommand?staffcommand:\'Nil\' | striphtml"></p>\r\n                                <mat-divider></mat-divider>\r\n                               <div class="validinfo"  fxLayout="row wrap" >\r\n                                <p class="fs-16 txt-gry m-r-40">{{\'institute.lastvalion\' | translate}} : <span class="fs-16 txt-gry3">{{staffappon}}</span></p>\r\n                                <p class="fs-16 txt-gry m-l-30">{{\'institute.lastvaliby\' | translate}} : <span class="fs-16 txt-gry3">{{staffappby}}</span></p>\r\n                               </div>\r\n                        </div>\r\n                        <div  class="projlstngph w-100 listsector" *ngIf="loaderform">\r\n                            <div class="leftmainspace">\r\n                                <div class="subcontent">\r\n                                    <div class="descriptitlesector">\r\n                                        <p class="pagetitle"></p>\r\n                                        </div>\r\n                                    <div fxLayout="row wrap" >\r\n                                        <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth m-r-25"></span>\r\n                                      </div>\r\n                                  <div fxLayout="row wrap" >\r\n                                    <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                    <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                    ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                  </div>\r\n                                  <div fxLayout="row wrap" >\r\n                                    <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                    <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-0" ngClass.md="m-l-25"\r\n                                    ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                  </div>\r\n                                  <div fxLayout="row wrap" >\r\n                                    <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                    <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                    ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                  </div>\r\n                                  <div fxLayout="row wrap" >\r\n                                    <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                    <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                    ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                  </div>\r\n                                  <div fxLayout="row wrap" >\r\n                                    <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                    <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                    ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                  </div>\r\n                                  <div class="descriptitlesector">\r\n                                    <p class="pagetitle"></p>\r\n                                    </div>\r\n                                <div fxLayout="row wrap" >\r\n                                  <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                  <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                  ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                </div>\r\n                                <div fxLayout="row wrap" >\r\n                                  <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                  <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-0" ngClass.md="m-l-25"\r\n                                  ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                </div>\r\n                                <div fxLayout="row wrap" >\r\n                                  <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                </div>\r\n                                <div fxLayout="row wrap"  fxLayoutAlign="end">\r\n                                    <span fxFlex.gt-sm="10" fxFlex="10" class="pagetitle secondwidth "></span>\r\n                                    <span fxFlex.gt-sm="10" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                    ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                  </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <form autocomplete="off" [formGroup]="staffForm" *ngIf="!loaderform">\r\n                            <div class="yesno" *ngIf="staffapptype == \'new\'">\r\n                                <p class="m-r-40">{{\'staff.chos\' | translate}}<span class="req m-l-5">*</span>\r\n                                </p>\r\n                                <mat-radio-group aria-label="Select an option" (change)="radioButtonGroupChange($event)">\r\n                                    <mat-radio-button value="1" [checked]="selectedOption1"  class="m-r-30 m-l-30"\r\n                                        >{{\'staff.mapexis\'|translate}}</mat-radio-button>\r\n                                    <mat-radio-button value="2" [checked]="selectedOption2" \r\n                                        class="m-l-30" >{{\'staff.addnew\'|translate}}</mat-radio-button>\r\n                                </mat-radio-group>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    class="read_only" *ngIf="newstaff">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.civinumb\' | translate}} </mat-label>\r\n                                        <mat-select required formControlName="civil_num" panelClass="select_with_search"\r\n                                            [disableOptionCentering]="true" appAlphabetonly\r\n                                            *ngIf="(staffs | filter : searchGovernorate1) as goverresult1"\r\n                                            (selectionChange)="selectcivilid(staf.civil_num.value)">\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" \r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} " \r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="searchGovernorate1"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchGovernorate1 = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchGovernorate1 !=\'\' && searchGovernorate1 !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let staff of staffs | filter : searchGovernorate1"\r\n                                                value={{staff.staffinforepo_pk}}> {{staff.sir_idnumber}}</mat-option>\r\n                                            <div *ngIf="goverresult?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                            </div>\r\n                                           \r\n                                        </mat-select>\r\n                                        <mat-error *ngIf="staf.civil_num.errors?.required  || staffForm.submitted">\r\n                                            {{\'staff.selyourcivinumb\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    *ngIf="!newstaff">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.civinumb\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" app-restrict-input="englishkeyboardnospace" appAlphanum\r\n                                            matInput required formControlName="civil_num" (blur)="checkcivilnum($event.target.value,\'civil_num\')"\r\n                                            >\r\n                                            \x3c!-- (keypress)="getstaffinfo(staf.civil_num.value)" --\x3e\r\n                                        <mat-error *ngIf="staf.civil_num.errors?.required  || staffForm.submitted">\r\n                                            {{\'staff.enteyourcivinumb\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    class="read_only">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.staffnameengl\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                                            matInput app-restrict-input="englishspace"  required formControlName="staffeng">\r\n                                        <mat-error *ngIf="staf.staffeng.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.entethenameofengl\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100" class="read_only">\r\n                                    <mat-form-field appearance="outline" class=" arabiclanguage">\r\n                                        <mat-label>{{\'staff.staffnamearab\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" app-restrict-input="arabic"\r\n                                            [errorStateMatcher]="matcher" matInput appAlphabetonly required formControlName="staffarab">\r\n                                        <mat-error *ngIf="staf.staffarab.errors?.required  || staffForm.submitted">\r\n                                            {{\'staff.entestaffarab\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.email\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                                            matInput\r\n                                            app-restrict-input="englishspace" (change)="changeingmdtls()" required\r\n                                            formControlName="email_id" maxlength="255">\r\n                                        <mat-error *ngIf="staf.email_id.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.enteanemail\' | translate}} </mat-error>\r\n                                        <mat-error\r\n                                            *ngIf="staffForm.get(\'email_id\').hasError(\'pattern\')">{{\'staff.entevalidemail\'|\r\n                                            translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" ngClass.sm="m-0">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.datebirth\' | translate}} </mat-label>\r\n                                        <input matInput required formControlName="date_birth"\r\n                                            (mousedown)="pickerage.open(); $event.preventDefault" [disabled]="pickerage.opened" \r\n                                            [max]="maxDate" [matDatepicker]="pickerage" readonly>\r\n                                        <mat-datepicker-toggle matSuffix [for]="pickerage"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #pickerage></mat-datepicker>\r\n                                        <mat-error *ngIf="staf.date_birth.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.selethedate\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100" class="readonly"\r\n                                  *ngIf="!ageShow"  >\r\n                                    <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'">\r\n                                        <mat-label>{{\'staff.age\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" matInput [readonly]="editOption" \r\n                                            (change)="changeingmdtls()" formControlName="age" >\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="gend_er" \r\n                                            panelClass="select_with_option">\r\n                                            <mat-option value="1">{{\'staff.male\' | translate}}</mat-option>\r\n                                            <mat-option value="2">{{\'staff.female\' | translate}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.gender\' | translate}}</mat-label>\r\n                                        <mat-error *ngIf="staf.gend_er.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.selegender\' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'" *ngIf="!gendershow">\r\n                                    <mat-label>{{\'staff.formofadd\' | translate}}</mat-label>\r\n                                    \x3c!-- <mat-select required formControlName="gender_address" \r\n                                        [(ngModel)]=\'genderselect\' panelClass="select_with_option">\r\n                                        <mat-option value="1">{{\'staff.mr\' | translate}}</mat-option>\r\n                                        <mat-option value="2">{{\'staff.ms\' | translate}}</mat-option>\r\n                                    </mat-select> --\x3e\r\n                                    <input (keydown.enter)="$event.preventDefault()" matInput \r\n                                    (change)="changeingmdtls()" [readonly]="editOption"   formControlName="gender_address"  >\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="national" [errorStateMatcher]="matcher"\r\n                                            panelClass="select_with_search"\r\n                                            *ngIf="(countrylist | filter : searchGovernorate2) as countresult"\r\n                                            (selectionChange)="selectedGovernorate(cour.course_titleen.value)">\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="searchGovernorate2"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchGovernorate2 = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchGovernorate2 !=\'\' && searchGovernorate2 !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option \r\n                                                    *ngFor="let country of countrylist | filter : searchGovernorate2"\r\n                                                    value="{{country.opalcountrymst_pk}}">\r\n                                                    {{ifarbic == true ?\r\n                                                    (country.ocym_countryname_ar):(country.ocym_countryname_en)}}\r\n                                                </mat-option>\r\n                                                <div *ngIf="countresult?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                            </div>\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.nation\' | translate}}</mat-label>\r\n                                        <mat-error *ngIf="staf.national.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.selenation\' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100"  class="popoverforsubcate">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select multiple required formControlName="role" \r\n                                            [errorStateMatcher]="matcher" panelClass="select_with_search multiple"\r\n                                            *ngIf="(rolemst | filter : searchrole) as roleresult">\r\n                                            <mat-select-trigger>\r\n                                                {{staffForm.controls[\'role\'].value ? mainroleUnitDataTemp : \'\'}}\r\n                                                <span *ngIf="staffForm.controls[\'role\'].value?.length > 1"  [matTooltip]="this.applicationtype == \'view\'?JoinList(mainRoleListforPopup) : \'\'" matTooltipClass="custom-tooltip"\r\n                                                    class="example-additional-selection">\r\n                                                    (+{{staffForm.controls[\'role\'].value.length - 1}}\r\n                                                    {{staffForm.controls[\'role\'].value?.length === 2 ? \'other\' :\r\n                                                    \'others\'}})\r\n                                                </span>\r\n                                                \r\n                                            </mat-select-trigger>\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();" [(ngModel)]="searchrole"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchrole = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchrole !=\'\' && searchrole !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let role of rolemst | filter : searchrole"\r\n                                                    value={{role.rolemst_pk}}>\r\n                                                    {{ifarbic == true ? (role.rm_rolename_ar):\r\n                                                    (role.rm_rolename_en)}}</mat-option>\r\n\r\n                                                <div *ngIf="roleresult?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                            </div>\r\n                                        </mat-select>\r\n\r\n                                        <mat-label>{{\'staff.mainrole\' | translate}}</mat-label>\r\n                                        <mat-error *ngIf="staf.role.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.selemainrole\' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                              \r\n                            </div>\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.jobtitl\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                                            matInput app-restrict-input="english" required formControlName="job_title">\r\n                                        <mat-error *ngIf="staf.job_title.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.entejobtitl\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="cont_type"\r\n                                            panelClass="select_with_option">\r\n                                            <mat-option *ngFor="let contact of contacttypemst"\r\n                                                value={{contact.referencemst_pk}}>{{ifarbic == true ? (contact.rm_name_ar):\r\n                                                (contact.rm_name_en)}}</mat-option>\r\n\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.conttype\' | translate}}</mat-label>\r\n                                        <mat-error *ngIf="staf.cont_type.errors?.required || staffForm.submitted">\r\n                                            {{\'staff.seleconttype\' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p class="fs-18 txt-gry3 subtitleform ">{{\'staff.permanresid\' | translate}}</p>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    class="read_only">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.house/street\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" app-restrict-input="english"\r\n                                            [errorStateMatcher]="matcher" matInput  \r\n                                            formControlName="house">\r\n                                        <mat-error *ngIf="staf.house.errors?.required  || staffForm.submitted">\r\n                                            {{\'staff.entehouse\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.house/street\' | translate}} 2</mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                                            matInput app-restrict-input="english" formControlName="houseadd">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10 secondtab" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    class="read_only">\r\n                                        <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'">\r\n                                            <mat-select  formControlName="count_ry" \r\n                                              panelClass="select_with_option">\r\n                                                <mat-option *ngFor="let country of countrymst  | filter : searchcount_ry"\r\n                                                value={{country.opalcountrymst_pk}}>{{ifarbic == true ? (country.ocym_countryname_ar):\r\n                                                (country.ocym_countryname_en)}}</mat-option>\r\n                                            </mat-select>\r\n                                            <mat-label>{{\'staff.count\' | translate}}</mat-label>\r\n                                            \r\n                                        </mat-form-field>\r\n                                        \x3c!-- <mat-form-field appearance="outline" [ngClass]="editOption == true ? \'readonlyfield\' : \' \'">\r\n                                            <input matInput formControlName="count_ry" [value]="31" >\r\n                                            <mat-label>{{\'staff.count\' | translate}}</mat-label>\r\n                                            \r\n                                        </mat-form-field> --\x3e\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="state" [errorStateMatcher]="matcher"\r\n                                            panelClass="select_with_search"\r\n                                            *ngIf="(statemst | filter : searchGovernorate3) as countresult"\r\n                                            (selectionChange)="stateselect(staf.state.value)">\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="searchGovernorate3"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchGovernorate3 = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchGovernorate3 !=\'\' && searchGovernorate3 !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let state of statemst  | filter : searchGovernorate3"\r\n                                                    value={{state.opalstatemst_pk}}>{{ifarbic == true? (state.osm_statename_ar):\r\n                                                    (state.osm_statename_en)}}</mat-option>\r\n                                                <div *ngIf="countresult?.length == 0">{{\'staff.noresultfound\' | translate}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.gove\' | translate}}</mat-label>\r\n                                        <mat-error *ngIf="staf.state.errors?.required  || staffForm.submitted">\r\n                                            {{\'staff.selegover\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15 m-b-25">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="city" [errorStateMatcher]="matcher"\r\n                                            panelClass="select_with_search"\r\n                                            *ngIf="(citymst | filter : searchGovernorate4) as countresult">\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="searchGovernorate4"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchGovernorate4 = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchGovernorate4 !=\'\' && searchGovernorate4 !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let city of citymst  | filter : searchGovernorate4"\r\n                                                    value={{city.opalcitymst_pk}}>{{ifarbic == true ? (city.ocim_cityname_ar):\r\n                                                    (city.ocim_cityname_en)}}</mat-option>\r\n                                                <div *ngIf="countresult?.length == 0">{{\'staff.noresultfound\' | translate}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.wila\' | translate}}</mat-label>\r\n                                        <mat-error *ngIf="staf.city.errors?.required  || staffForm.submitted">\r\n                                            {{\'staff.selewila\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <mat-hint class="txt-gry3 fs-16" *ngIf="saveandproceed" > {{\'staff.note\' | translate}}</mat-hint>\r\n                            \x3c!-- <mat-hint class="txt-gry3 fs-16" *ngIf="saveandproceed" >save and proceed </mat-hint> --\x3e\r\n                            <div *ngIf="saveandproceed"  fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                                <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15"\r\n                                    type="button" (click)="canclstaff()">{{\'staff.canc\' |\r\n                                    translate}}\r\n                                </button>\r\n                                <button mat-raised-button color="primary" type="button" (click)="savestaff()"\r\n                                    class="ShowHidefs-15 submit_btn m-l-10">{{\'institute.saveandproce\' |\r\n                                    translate}}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                      <div *ngIf="staffotherdetails"  class="editformeducation" >\r\n                       \x3c!-- new edu start --\x3e\r\n                            <form autocomplete="off" [formGroup]="educationForm">\r\n                                <div fxLayout="row wrap" fxLayoutAlign="space-between center">\r\n                                 <p class="fs-18 txt-gry3 subtitleform " >{{\'staff.educqual\' | translate}}</p>\r\n\r\n                                </div>\r\n                                <div class="card m-b-40 " *ngIf="educationformshow">\r\n                                    <div  class="projlstngph w-100 listsector" *ngIf="loaderformeducation">\r\n                                        <div class="leftmainspace">\r\n                                            <div class="subcontent">\r\n                                                <div class="descriptitlesector">\r\n                                                    <p class="pagetitle"></p>\r\n                                                    </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-0" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                            <div fxLayout="row wrap" >\r\n                                              <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                            </div>\r\n                                            <div fxLayout="row wrap"  fxLayoutAlign="end">\r\n                                                <span fxFlex.gt-sm="10" fxFlex="10" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="10" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                              <div *ngIf="!loaderformeducation && educationformshow">\r\n                               \r\n                                <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                        class="read_only">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'staff.instname\' | translate}}</mat-label>\r\n                                            <input (keydown.enter)="$event.preventDefault()" appAlphabetonly\r\n                                                app-restrict-input="english" [errorStateMatcher]="matcher" matInput app-restrict-input="firstspace"\r\n                                                required  formControlName="institute_name">\r\n                                            <mat-error\r\n                                                *ngIf="edu.institute_name.errors?.required  || educationForm.submitted">\r\n                                                {{\'staff.enteinstname\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                       \r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'staff.degecert\' | translate}} </mat-label>\r\n                                            <input (keydown.enter)="$event.preventDefault()"\r\n                                                [errorStateMatcher]="matcher" matInput type="text"\r\n                                                required formControlName="degree_cert">\r\n                                            <mat-error *ngIf="edu.degree_cert.errors?.required || educationForm.submitted">\r\n                                                {{\'staff.entedegecert\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                              \r\n                                <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                        class="read_only">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-select required formControlName="edut_level" [errorStateMatcher]="matcher"\r\n                                                panelClass="select_with_search" \r\n                                                *ngIf="(educationlvl | filter : selectsearchcity) as countresult">\r\n                                                <div class="searchinmultiselect">\r\n                                                    <mat-icon >search</mat-icon>\r\n                                                    <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                        matInput class="searchselect" type="Search"\r\n                                                        placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                        (keydown)="$event.stopPropagation();"\r\n                                                        [(ngModel)]="selectsearchcity"\r\n                                                        [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                    <mat-icon (click)="selectsearchcity = \'\'" class="reseticon" matSuffix\r\n                                                        *ngIf="selectsearchcity !=\'\' && selectsearchcity !=null">clear</mat-icon>\r\n                                                </div>\r\n                                                <div class="option-listing countryselectwithimage">\r\n                                                    <mat-option *ngFor="let lvl of educationlvl | filter : selectsearchcity"\r\n                                                value={{lvl.referencemst_pk}}>{{ifarbic == true? (lvl.rm_name_ar):\r\n                                                (lvl.rm_name_en)}}</mat-option>\r\n                                                    <div *ngIf="countresult.length == 0">{{\'supplierreg.nofoun\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </mat-select>\r\n                                            <mat-label>{{\'staff.educlevel\' | translate}}</mat-label>\r\n                                            <mat-error *ngIf="edu.edut_level.errors?.required  || educationForm.submitted">\r\n                                                {{\'staff.seleeduclevel\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n\r\n                                    </div>\r\n                                    <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'staff.graddate\' | translate}} </mat-label>\r\n                                            <input matInput required formControlName="GradeDate" (mousedown)="pickerofjoin.open(); $event.preventDefault" [disabled]="pickerofjoin.opened"\r\n                                                [matDatepicker]="pickerofjoin" readonly> \r\n                                            <mat-datepicker-toggle matSuffix \r\n                                                [for]="pickerofjoin"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #pickerofjoin></mat-datepicker>\r\n                                         \r\n                                            <mat-error *ngIf="edu.GradeDate.errors?.required || educationForm.submitted">\r\n                                                {{\'staff.selegraddate\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                        class="read_only">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'staff.gpagrad\' | translate}} </mat-label>\r\n                                            <input (keydown.enter)="$event.preventDefault()"\r\n                                                app-restrict-input="wordsandnumber" [errorStateMatcher]="matcher" matInput\r\n                                                required formControlName="gpa_grade"  maxlength="30">\r\n                                            <mat-error *ngIf="edu.gpa_grade.errors?.required  || educationForm.submitted">\r\n                                                {{\'staff.entegpagrad\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                        class="read_only">\r\n                                        <app-filee  [fileMstRef]="educationInput" [deleteicon]="deleteicon" [certificate]="true"  [requiredfield]="requiredfieldshow" [paymentNote]="false"\r\n                                        (filesSelected)="fileeSelectededucate($event,educationInput)" formControlName="education_files"\r\n                                        ></app-filee>\r\n                                        <mat-hint class="fs-14 txt-gry">Note: You can upload 1 file (jpg, jpeg, png, pdf) of max. size 5.0 MB.</mat-hint>\r\n                                        <mat-error\r\n                                    *ngIf="educationForm.controls.education_files.invalid && uploadedufiles == true">\r\n                                    {{\'Please Upload file\' | translate}} </mat-error>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                                    <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" (click)="cancelstaffedu()"\r\n                                        type="button">{{\'staff.canc\' |\r\n                                        translate}}\r\n                                    </button>\r\n                                    <button mat-raised-button color="primary" type="button" *ngIf="this.staffeduapptype == \'new\'" (click)="savestaffedu()"\r\n                                        class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.add\' | translate}}\r\n                                    </button>\r\n                                    <button mat-raised-button color="primary" type="button" *ngIf="this.staffeduapptype == \'edit\'" (click)="savestaffedu()"\r\n                                    class="ShowHidefs-15 submit_btn m-l-10">{{\'Update\'}}\r\n                                </button>\r\n                                </div>\r\n                              </div>\r\n                              </div>\r\n                              <div class="cardwht m-b-40 " *ngIf="!educationformshow">\r\n                                <div class="paginationwithfilter masterPageTop m-t-30 tableedu" >\r\n                                 \r\n                                    <mat-paginator class="masterPage masterPageTop" #paginatorfourth [length]="fourthLength"\r\n                                        [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                        (page)="fourthPaginator($event);"></mat-paginator>\r\n                                    <div fxLayout="row wrap">\r\n                                        <div fxFlex.gt-sm="100" fxFlex="100">\r\n                                            \r\n                                    <button  *ngIf="applicationtype != \'view\'" mat-raised-button color="primary" type="button" (click)="showhideeducationform(true)"\r\n                                    class="ShowHidefs-15 submit_btn m-r-15">{{\'staff.add\' | translate}}\r\n                                </button>\r\n                                            <button mat-raised-button type="button" color="primary"\r\n                                                (click)="clickEvent()" class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7" aria-hidden="true"></i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap">\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                                        <div class="awaredtable"  >\r\n                                            <mat-table #table class="scrolldata" [dataSource]="education" matSort\r\n                                                matSortDisableClear>\r\n                                                <ng-container matColumnDef="institute">\r\n                                                    <mat-header-cell fxFlex="290px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.instname\' | translate}}</mat-header-cell>\r\n                                                        <mat-cell data-label="institute" fxFlex="290px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder">{{educationData.institute}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="degree">\r\n                                                    <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.degecert\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="degree" fxFlex="250px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder">{{educationData.degree}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="edulvl_en">\r\n                                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.educlevel\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="edulvl_en" fxFlex="230px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder">{{ifarbic == true ? (educationData.edulvl_ar):\r\n                                                            (educationData.edulvl_en)}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="yearpass">\r\n                                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.graddate\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="yearpass" fxFlex="263px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder">{{educationData.yearpass}}</div>\r\n                                                        </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="grade">\r\n                                                    <mat-header-cell fxFlex="170px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.gpagrad\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="grade" fxFlex="170px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder">{{educationData.grade}} </div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="url">\r\n                                                    <mat-header-cell fxFlex="170px" mat-header-cell *matHeaderCellDef\r\n                                                       >{{\'staff.uploadcertifiacte\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="url" fxFlex="170px" *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder" fxLayoutAlign="start center">\r\n                                                            <span mat-button class="viewdocument txt-gry3 m-t-5"><a target="_blank"\r\n                                                              class="txt-gry3" fxLayoutAlign="start center" href={{educationData.url}}><img  class="document_img p-r-5" src="assets/images/opalimages/{{educationData.mcfd_filetype}}_new.svg">View</a></span></div></mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="addedu">\r\n                                                    <mat-header-cell fxFlex="283px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header> {{\'staff.addon\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="addedu" fxFlex="263px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder">{{educationData.addedu}} </div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="lastUpdated">\r\n                                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header> {{\'staff.lastupdat\' | translate}}\r\n\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="lastUpdated" fxFlex="263px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder">{{educationData.lastUpdated?educationData.lastUpdated:\'-\'}}  </div>\r\n                                                        </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="action" stickyEnd>\r\n                                                    <mat-header-cell fxFlex="100px" mat-header-cell *matHeaderCellDef>\r\n                                                        {{\'staff.Action\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="action" fxFlex="120px"\r\n                                                        *matCellDef="let educationData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!tblplaceholder"><div class="manageoptions">\r\n                                                            <button class="menubutton" mat-icon-button\r\n                                                                [matMenuTriggerFor]="actionmenu"\r\n                                                                aria-label="Example icon-button with a menu" type="button">\r\n                                                                <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                            </button>\r\n                                                            <mat-menu #actionmenu="matMenu"\r\n                                                                class="master-menu whentootltipadded">\r\n                                                                <button type="button" mat-menu-item *ngIf="this.applicationtype != \'view\'" (click)="editstaffedu(educationData,\'edit\')">\r\n                                                                    <span>{{\'table.edit\' | translate}} </span>\r\n                                                                </button>\r\n                                                                <button type="button" mat-menu-item  *ngIf="this.applicationtype != \'view\'" (click)="deletestaffedu(educationData.staffacademics_pk)">\r\n                                                                    <span>{{\'table.delete\' | translate}}</span>\r\n                                                                </button>\r\n                                                                <button type="button" mat-menu-item  *ngIf="this.applicationtype == \'view\'" (click)="editstaffedu(educationData,\'view\')">\r\n                                                                    <span>{{\'table.view\' | translate}}</span>\r\n                                                                </button>\r\n                                                            </mat-menu>\r\n                                                        </div></div>\r\n                                                    </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-first">\r\n                                                    <mat-header-cell fxFlex="290px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                            <input matInput [formControl]="institute" (keyup)="seracheducation($event.target.value,\'institute\')">\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-second">\r\n                                                    <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                     \r\n                                                                <input matInput  [formControl]="degree" (keyup)="seracheducation($event.target.value,\'institute\')">\r\n                                                          \r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-three">\r\n                                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                            <mat-select [formControl]="year_join" panelClass="select_with_search" (selectionChange)="applyFilter($event.value,\'year_join\')" multiple>\r\n                                                                <div class="option-listing countryselectwithimage">\r\n                                                                    <mat-option *ngFor="let lvl of educationlvl | filter : selectsearchcity"\r\n                                                                value={{lvl.referencemst_pk}}>{{ifarbic == true? (lvl.rm_name_ar):\r\n                                                                (lvl.rm_name_en)}}</mat-option>\r\n                                                                </div>\r\n                                                            </mat-select>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-four">\r\n                                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <div class="drpicker" id="regapp">\r\n                                                              \r\n                                                                <input id="login_session" [formControl]="year_pass" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                <div class="closeanddateicon">\r\n                                                                    <mat-datepicker-toggle matSuffix >\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-five">\r\n                                                    <mat-header-cell fxFlex="170px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                           \r\n                                                                <input matInput  [formControl]="grade" (keyup)="seracheducation($event.target.value,\'grade\')">\r\n                                                         \r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-six">\r\n                                                    <mat-header-cell fxFlex="170px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                      \r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-seven">\r\n                                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <div class="drpicker" id="regapp">\r\n                                                               \r\n                                                                <input id="login_session" [formControl]="add_On" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                <div class="closeanddateicon">\r\n                                                                    <mat-datepicker-toggle matSuffix >\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-eight">\r\n                                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                           \r\n                                                              <div class="drpicker" id="regapp">\r\n                                                          \r\n                                                                <input id="login_session" [formControl]="Last_Date" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                <div class="closeanddateicon">\r\n                                                                    <mat-datepicker-toggle matSuffix >\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-nine" stickyEnd>\r\n                                                    <mat-header-cell fxFlex="120px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <i class="fa fa-refresh m-l-15 cursorview" (click)="clearFiltereducation();filtersts=false;"\r\n                                                            aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <mat-header-row id="headerrowcells" *matHeaderRowDef="educationList;">\r\n                                                </mat-header-row>\r\n                                                <mat-header-row id="searchrow"\r\n                                                    *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\' , \'row-seven\', \'row-eight\' , \'row-nine\' ]">\r\n                                                </mat-header-row>\r\n                                                <mat-row mat-row\r\n                                                    *matRowDef="let row; columns: educationList;"></mat-row>\r\n                                                    <ng-container matColumnDef="disclaimer">\r\n                                                        <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                                            <div [ngClass]="tblplaceholder? \' \' :\'nofound\'" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                                                <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                                    <div fxLayout="row wrap" fxLayoutAlign="center center"  *ngIf="tblplaceholder"\r\n                                                                    class="NorecordLoader m-t-10"></div>\r\n                                                                    <img src="assets/images/opalimages/norecord.svg" alt="norecord" *ngIf="!tblplaceholder">\r\n                                                                    <p class="m-t-10 txt-gry3 fs-16" *ngIf="!tblplaceholder">{{\'common.noreco\' | translate}} \r\n                                                                    </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                        </td>\r\n                                                    </ng-container>\r\n                                                    <ng-container>\r\n                                                      \r\n                                                        <mat-footer-row [class.stickyclass]="(fourthLength > 0) ? \'none\' : \'block\'" [style.display]="(fourthLength > 0) ? \'none\' : \'block\' " \r\n                                                            *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                                        </mat-footer-row>\r\n                                                    </ng-container>\r\n                                            </mat-table>\r\n                                        </div>\r\n                                        <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                                            <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                                <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                                    class="masterPage masterbottom " showFirstLastButtons\r\n                                                    [pageSize]="paginatorfourth?.pageSize"\r\n                                                    (page)="fourthPaginator($event);"\r\n                                                    [pageIndex]="paginatorfourth?.pageIndex" [length]="fourthLength"\r\n                                                    [pageSizeOptions]="paginatorfourth?.pageSizeOptions">\r\n                                                </mat-paginator>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form> \r\n                           \x3c!-- new edu end --\x3e\r\n                           \x3c!-- old edu start --\x3e\r\n                           \x3c!-- <form autocomplete="off" [formGroup]="educationForm" >\r\n                            <div fxLayout="row wrap" fxLayoutAlign="space-between center">\r\n                             <p  *ngIf="!loaderformeducation" class="fs-18 txt-gry3 subtitleform " >{{\'staff.educqual\' | translate}}</p>\r\n\r\n                          \r\n                            </div>\r\n                            <div class="card m-b-40 ">\r\n                                <div  class="projlstngph w-100 listsector" *ngIf="loaderformeducation">\r\n                                    <div class="leftmainspace">\r\n                                        <div class="subcontent">\r\n                                            <div class="descriptitlesector">\r\n                                                <p class="pagetitle"></p>\r\n                                                </div>\r\n                                          <div fxLayout="row wrap" >\r\n                                            <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                            <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                            ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                          </div>\r\n                                          <div fxLayout="row wrap" >\r\n                                            <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                            <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-0" ngClass.md="m-l-25"\r\n                                            ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                          </div>\r\n                                          <div fxLayout="row wrap" >\r\n                                            <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                            <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                            ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                          </div>\r\n                                          <div fxLayout="row wrap" >\r\n                                            <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                            <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                            ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                          </div>\r\n                                        <div fxLayout="row wrap" >\r\n                                          <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                        </div>\r\n                                        <div fxLayout="row wrap"  fxLayoutAlign="end">\r\n                                            <span fxFlex.gt-sm="10" fxFlex="10" class="pagetitle secondwidth "></span>\r\n                                            <span fxFlex.gt-sm="10" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                            ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                          </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                   \r\n                          <div *ngIf="!loaderformeducation ">\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center " >\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" ngClass.sm="m-0">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.startdate\' | translate}} </mat-label>\r\n                                        <input matInput required formControlName="year_join" (mousedown)="pickerofjoin.open(); $event.preventDefault" [disabled]="pickerofjoin.opened"\r\n                                            [matDatepicker]="pickerofjoin" readonly> \r\n                                        <mat-datepicker-toggle matSuffix \r\n                                            [for]="pickerofjoin"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #pickerofjoin></mat-datepicker>\r\n                                        \r\n                                        <mat-error *ngIf="edu.year_join.errors?.required || educationForm.submitted">\r\n                                            {{\'staff.selestartdate\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.enddate\' | translate}} </mat-label>\r\n                                        <input matInput required formControlName="year_pass"\r\n                                        [min]="educationForm.controls[\'year_join\'].value == null ? today : educationForm.controls[\'year_join\'].value"\r\n                                        (mousedown)="pickerpass.open(); $event.preventDefault" [disabled]="pickerpass.opened"[matDatepicker]="pickerpass" readonly>\r\n                                        <mat-datepicker-toggle matSuffix [for]="pickerpass"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #pickerpass></mat-datepicker>\r\n                                      \r\n                                        <mat-error *ngIf="edu.year_pass.errors?.required || educationForm.submitted">\r\n                                            {{\'staff.seleenddate\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    class="read_only">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.instname\' | translate}}</mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()" appAlphabetonly\r\n                                            app-restrict-input="english" [errorStateMatcher]="matcher" matInput app-restrict-input="firstspace"\r\n                                            required  formControlName="institute_name">\r\n                                        <mat-error\r\n                                            *ngIf="edu.institute_name.errors?.required  || educationForm.submitted">\r\n                                            {{\'staff.enteinstname\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="institue_country" [errorStateMatcher]="matcher"\r\n                                        panelClass="select_with_search"  (selectionChange)="ctrychoose(edu.institue_country.value);cityselect(edu.institue_country.value)" \r\n                                        *ngIf="(countrymst | filter : searchcount_ry) as countresult">\r\n                                        <div class="searchinmultiselect">\r\n                                            <mat-icon >search</mat-icon>\r\n                                            <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                matInput class="searchselect" type="Search"\r\n                                                placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                (keydown)="$event.stopPropagation();"\r\n                                                [(ngModel)]="searchcount_ry"\r\n                                                [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                            <mat-icon (click)="searchcount_ry = \'\'" class="reseticon" matSuffix\r\n                                                *ngIf="searchcount_ry !=\'\' && searchcount_ry !=null">clear</mat-icon>\r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                            <mat-option *ngFor="let country of countrymst  | filter : searchcount_ry"\r\n                                            value={{country.opalcountrymst_pk}}>{{ifarbic == true ? (country.ocym_countryname_ar):\r\n                                            (country.ocym_countryname_en)}}</mat-option>\r\n                                            <div *ngIf="countresult.length == 0">{{\'staff.nocounmatc\' | translate}}\r\n                                            </div>\r\n                                        </div>\r\n                                    </mat-select>\r\n                                     \r\n                                        <mat-label>{{\'staff.count\' | translate}}</mat-label>\r\n                                        <mat-error\r\n                                            *ngIf="edu.institue_country.errors?.required  || educationForm.submitted">\r\n                                            {{\'staff.selecount\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="p-t-10">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="inst_state" [errorStateMatcher]="matcher"\r\n                                        panelClass="select_with_search" (selectionChange)="stateselect(edu.inst_state.value)"\r\n                                        *ngIf="(state | filter : selectsearchstate) as countresult">\r\n                                        <div class="searchinmultiselect">\r\n                                            <mat-icon >search</mat-icon>\r\n                                            <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                matInput class="searchselect" type="Search"\r\n                                                placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                (keydown)="$event.stopPropagation();"\r\n                                                [(ngModel)]="selectsearchstate"\r\n                                                [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                            <mat-icon (click)="selectsearchstate = \'\'" class="reseticon" matSuffix\r\n                                                *ngIf="selectsearchstate !=\'\' && selectsearchstate !=null">clear</mat-icon>\r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                            <mat-option *ngFor="let stat of state  | filter : selectsearchstate"\r\n                                            value={{stat.opalstatemst_pk}}>{{ifarbic == true? (stat.osm_statename_ar):\r\n                                            (stat.osm_statename_en)}}</mat-option>\r\n                                            <div *ngIf="countresult.length == 0">{{\'supplierreg.nofoun\' | translate}}\r\n                                            </div>\r\n                                        </div>\r\n                                    </mat-select>\r\n                                      \r\n                                        <mat-label *ngIf="!oman">{{\'staff.state\' | translate}}</mat-label>\r\n                                        <mat-label *ngIf="oman">{{\'staff.gove\' | translate}}</mat-label>\r\n                                        <mat-error\r\n                                            *ngIf="(edu.inst_state.errors?.required  || educationForm.submitted) && !oman">\r\n                                            {{\'staff.selestate\' | translate}} </mat-error>\r\n                                        <mat-error\r\n                                            *ngIf="(edu.inst_state.errors?.required  || educationForm.submitted) && oman">\r\n                                            {{\'staff.selegover\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                            <mat-select required formControlName="inst_city" [errorStateMatcher]="matcher"\r\n                                            panelClass="select_with_search" (selectionChange)="stateselect(edu.inst_state.value)"\r\n                                            *ngIf="(citymst | filter : selectsearchcity) as countresult">\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="selectsearchcity"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="selectsearchcity = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="selectsearchcity !=\'\' && selectsearchcity !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let city of citymst  | filter : selectsearchcity"\r\n                                                value={{city.opalcitymst_pk}}>{{ifarbic == true ? (city.ocim_cityname_ar):\r\n                                                (city.ocim_cityname_en)}}</mat-option>\r\n                                                <div *ngIf="countresult.length == 0">{{\'supplierreg.nofoun\' | translate}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-select>\r\n                                       \r\n                                        <mat-label *ngIf="!oman">{{\'staff.city\' | translate}}</mat-label>\r\n                                        <mat-label *ngIf="oman">{{\'staff.wila\' | translate}}</mat-label>\r\n                                        <mat-error\r\n                                            *ngIf="(edu.inst_city.errors?.required  || educationForm.submitted) && oman">\r\n                                            {{\'staff.selewila\' | translate}} </mat-error>\r\n                                        <mat-error\r\n                                            *ngIf="(edu.inst_city.errors?.required  || educationForm.submitted) && !oman">\r\n                                            {{\'staff.selecity\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    class="read_only">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="edut_level" [errorStateMatcher]="matcher"\r\n                                            panelClass="select_with_search" \r\n                                            *ngIf="(educationlvl | filter : selectsearchcity) as countresult">\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="selectsearchcity"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="selectsearchcity = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="selectsearchcity !=\'\' && selectsearchcity !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let lvl of educationlvl | filter : selectsearchcity"\r\n                                            value={{lvl.referencemst_pk}}>{{ifarbic == true? (lvl.rm_name_ar):\r\n                                            (lvl.rm_name_en)}}</mat-option>\r\n                                                <div *ngIf="countresult.length == 0">{{\'supplierreg.nofoun\' | translate}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.educlevel\' | translate}}</mat-label>\r\n                                        <mat-error *ngIf="edu.edut_level.errors?.required  || educationForm.submitted">\r\n                                            {{\'staff.seleeduclevel\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n                                <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.degecert\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()"\r\n                                            [errorStateMatcher]="matcher" matInput type="text"\r\n                                            required formControlName="degree_cert">\r\n                                        <mat-error *ngIf="edu.degree_cert.errors?.required || educationForm.submitted">\r\n                                            {{\'staff.entedegecert\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                    class="read_only">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.gpagrad\' | translate}} </mat-label>\r\n                                        <input (keydown.enter)="$event.preventDefault()"\r\n                                            app-restrict-input="wordsandnumber" [errorStateMatcher]="matcher" matInput\r\n                                            required formControlName="gpa_grade"  maxlength="30">\r\n                                        <mat-error *ngIf="edu.gpa_grade.errors?.required  || staffForm.submitted">\r\n                                            {{\'staff.entegpagrad\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                                <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" (click)="cancelstaffedu()"\r\n                                    type="button">{{\'staff.canc\' |\r\n                                    translate}}\r\n                                </button>\r\n                                <button mat-raised-button color="primary" type="button" *ngIf="this.staffeduapptype == \'new\'" (click)="savestaffedu()"\r\n                                    class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.add\' | translate}}\r\n                                </button>\r\n                                <button mat-raised-button color="primary"  *ngIf="this.staffeduapptype == \'edit\'" (click)="savestaffedu()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'Update\'}}\r\n                            </button>\r\n                            </div>\r\n                          </div>\r\n                            <div class="paginationwithfilter masterPageTop m-t-30 tableedu">\r\n                             \r\n                                <mat-paginator class="masterPage masterPageTop" #paginatorfourth [length]="fourthLength"\r\n                                    [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                    (page)="fourthPaginator($event);"></mat-paginator>\r\n                                <div fxLayout="row wrap">\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100">\r\n                                        <button mat-raised-button type="button" color="primary"\r\n                                            (click)="clickEvent()" class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7" aria-hidden="true"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout="row wrap">\r\n                                <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                                    <div class="awaredtable"  >\r\n                                        <mat-table #table class="scrolldata" [dataSource]="education" matSort\r\n                                            matSortDisableClear>\r\n                                            <ng-container matColumnDef="institute">\r\n                                                <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                    mat-sort-header>{{\'staff.instname\' | translate}}</mat-header-cell>\r\n                                                    <mat-cell data-label="institute" fxFlex="250px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder">{{educationData.institute}}</div>\r\n                                                     </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="degree">\r\n                                                <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                    mat-sort-header>{{\'staff.degecert\' | translate}}\r\n                                                </mat-header-cell>\r\n                                                <mat-cell data-label="degree" fxFlex="250px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder">{{educationData.degree}}</div>\r\n                                                     </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="yearjoin">\r\n                                                <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                    mat-sort-header>{{\'staff.startdate\' | translate}}\r\n                                                </mat-header-cell>\r\n                                                <mat-cell data-label="yearjoin" fxFlex="263px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder">{{educationData.yearjoin}}</div>\r\n                                                     </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="yearpass">\r\n                                                <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                    mat-sort-header>{{\'staff.enddate\' | translate}}\r\n                                                </mat-header-cell>\r\n                                                <mat-cell data-label="yearpass" fxFlex="263px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder">{{educationData.yearpass}} </div>\r\n                                                    </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="grade">\r\n                                                <mat-header-cell fxFlex="170px" mat-header-cell *matHeaderCellDef\r\n                                                    mat-sort-header>{{\'staff.gpagrad\' | translate}}\r\n                                                </mat-header-cell>\r\n                                                <mat-cell data-label="grade" fxFlex="170px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder">{{educationData.grade}} </div>\r\n                                                     </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="addedu">\r\n                                                <mat-header-cell fxFlex="283px" mat-header-cell *matHeaderCellDef\r\n                                                    mat-sort-header> {{\'staff.addon\' | translate}}\r\n                                                </mat-header-cell>\r\n                                                <mat-cell data-label="addedu" fxFlex="263px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder">{{educationData.addedu}} </div>\r\n                                                     </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="lastUpdated">\r\n                                                <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                    mat-sort-header> {{\'staff.lastupdat\' | translate}}\r\n\r\n                                                </mat-header-cell>\r\n                                                <mat-cell data-label="lastUpdated" fxFlex="263px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder">{{educationData.lastUpdated?educationData.lastUpdated:\'-\'}}  </div>\r\n                                                    </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="action" stickyEnd>\r\n                                                <mat-header-cell fxFlex="100px" mat-header-cell *matHeaderCellDef>\r\n                                                    {{\'staff.Action\' | translate}}\r\n                                                </mat-header-cell>\r\n                                                <mat-cell data-label="action" fxFlex="100px"\r\n                                                    *matCellDef="let educationData">\r\n                                                    <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                    <div *ngIf="!tblplaceholder"><div class="manageoptions">\r\n                                                        <button class="menubutton" mat-icon-button\r\n                                                            [matMenuTriggerFor]="actionmenu"\r\n                                                            aria-label="Example icon-button with a menu" type="button">\r\n                                                            <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                        </button>\r\n                                                        <mat-menu #actionmenu="matMenu"\r\n                                                            class="master-menu whentootltipadded">\r\n                                                            <button type="button" mat-menu-item *ngIf="this.applicationtype != \'view\'" (click)="editstaffedu(educationData,\'edit\')">\r\n                                                                <span>{{\'table.edit\' | translate}} </span>\r\n                                                            </button>\r\n                                                            <button type="button" mat-menu-item  *ngIf="this.applicationtype != \'view\'" (click)="deletestaffedu(educationData.staffacademics_pk)">\r\n                                                                <span>{{\'table.delete\' | translate}}</span>\r\n                                                            </button>\r\n                                                            <button type="button" mat-menu-item  *ngIf="this.applicationtype == \'view\'" (click)="editstaffedu(educationData,\'view\')">\r\n                                                                <span>{{\'table.view\' | translate}}</span>\r\n                                                            </button>\r\n                                                        </mat-menu>\r\n                                                    </div></div>\r\n                                                </mat-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-first">\r\n                                                <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n                                                    <mat-form-field class="filter" appearance="outline">\r\n                                                        <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                        <input matInput [formControl]="institute" (keyup)="seracheducation($event.target.value,\'institute\')">\r\n                                                    </mat-form-field>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-second">\r\n                                                <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n                                                    <mat-form-field class="filter" appearance="outline">\r\n                                                        <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                 \r\n                                                            <input matInput  [formControl]="degree" (keyup)="seracheducation($event.target.value,\'institute\')">\r\n                                                      \r\n                                                    </mat-form-field>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-three">\r\n                                                <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n                                                    <mat-form-field class="filter" appearance="outline">\r\n                                                        <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                        <div class="drpicker" id="regapp">\r\n                                                            <input id="login_session" [formControl]="year_join" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                            <div class="closeanddateicon">\r\n                                                                <mat-datepicker-toggle matSuffix >\r\n                                                                </mat-datepicker-toggle>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </mat-form-field>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-four">\r\n                                                <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n                                                    <mat-form-field class="filter" appearance="outline">\r\n                                                        <div class="drpicker" id="regapp">\r\n                                                            <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                            <input id="login_session" [formControl]="year_pass" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                            <div class="closeanddateicon">\r\n                                                                <mat-datepicker-toggle matSuffix >\r\n                                                                </mat-datepicker-toggle>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </mat-form-field>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-five">\r\n                                                <mat-header-cell fxFlex="170px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n                                                    <mat-form-field class="filter" appearance="outline">\r\n                                                        <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                       \r\n                                                            <input matInput  [formControl]="grade" (keyup)="seracheducation($event.target.value,\'grade\')">\r\n                                                     \r\n                                                    </mat-form-field>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-six">\r\n                                                <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n                                                    <mat-form-field class="filter" appearance="outline">\r\n                                                        <div class="drpicker" id="regapp">\r\n                                                            <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                            <input id="login_session" [formControl]="add_On" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                            <div class="closeanddateicon">\r\n                                                                <mat-datepicker-toggle matSuffix >\r\n                                                                </mat-datepicker-toggle>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </mat-form-field>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-seven">\r\n                                                <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n                                                    <mat-form-field class="filter" appearance="outline">\r\n                                                          <div class="drpicker" id="regapp">\r\n                                                            <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                            <input id="login_session" [formControl]="Last_Date" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                            <div class="closeanddateicon">\r\n                                                                <mat-datepicker-toggle matSuffix >\r\n                                                                </mat-datepicker-toggle>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </mat-form-field>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <ng-container matColumnDef="row-eight" stickyEnd>\r\n                                                <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                                    style="text-align:center">\r\n    \r\n                                                    <i class="fa fa-refresh m-l-15 cursorview" (click)="clearFiltereducation();filtersts=false;"\r\n                                                        aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                                </mat-header-cell>\r\n                                            </ng-container>\r\n                                            <mat-header-row id="headerrowcells" *matHeaderRowDef="educationList;">\r\n                                            </mat-header-row>\r\n                                            <mat-header-row id="searchrow"\r\n                                                *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\' , \'row-seven\', \'row-eight\' ]">\r\n                                            </mat-header-row>\r\n                                            <mat-row mat-row\r\n                                                *matRowDef="let row; columns: educationList;"></mat-row>\r\n                                                <ng-container matColumnDef="disclaimer">\r\n                                                    <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                                        <div class="nofound" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                                            <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                                <img src="assets/images/opalimages/norecord.svg" alt="norecord">\r\n                                                                <p class="m-t-10 txt-gry3 fs-16">{{\'common.noreco\' | translate}}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                    </td>\r\n                                                </ng-container>\r\n                                                <ng-container>\r\n                                                  \r\n                                                    <mat-footer-row [class.stickyclass]="(fourthLength > 0) ? \'none\' : \'block\'" [style.display]="(fourthLength > 0) ? \'none\' : \'block\' " \r\n                                                        *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                                    </mat-footer-row>\r\n                                                </ng-container>\r\n                                        </mat-table>\r\n                                    </div>\r\n                                    <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                                        <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                            <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                                class="masterPage masterbottom " showFirstLastButtons\r\n                                                [pageSize]="paginatorfourth?.pageSize"\r\n                                                (page)="fourthPaginator($event);"\r\n                                                [pageIndex]="paginatorfourth?.pageIndex" [length]="fourthLength"\r\n                                                [pageSizeOptions]="paginatorfourth?.pageSizeOptions">\r\n                                            </mat-paginator>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form> --\x3e\r\n\r\n                            \x3c!-- old edu end --\x3e\r\n                        <div fxLayout="row wrap" fxLayoutAlign="space-between center">\r\n                        <p class="fs-18 txt-gry3 subtitleform editdata" >{{\'staff.workqual\' | translate}}</p>\r\n                        \r\n                                </div>\r\n                                \x3c!-- new work form  --\x3e\r\n                      \r\n                            <form autocomplete="off" #staffWorkExperienceFormReset="ngForm" [formGroup]="staffworkexperienceForm">\r\n                              <div *ngIf="!loaderformwork && workexpformshow"  class="card m-b-40">\r\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15" >\r\n                                    <div fxFlex.gt-md="50" fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'staff.empl\' | translate}} </mat-label>\r\n                                            <input (keydown.enter)="$event.preventDefault()"\r\n                                                [errorStateMatcher]="matcher" matInput app-restrict-input="english"\r\n                                                required formControlName="oragn_name">\r\n                                            <mat-error\r\n                                                *ngIf="work.oragn_name.errors?.required || staffworkexperienceForm.submitted">\r\n                                                {{\'staff.seleempl\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'staff.datejoin\' | translate}} </mat-label>\r\n                                            <input matInput  formControlName="date_join" [max]="today"\r\n                                                (click)="pickerdatejoin.open()" [matDatepicker]="pickerdatejoin"\r\n                                                readonly>\r\n                                            <mat-datepicker-toggle matSuffix\r\n                                                [for]="pickerdatejoin"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #pickerdatejoin></mat-datepicker>\r\n                                            <mat-error\r\n                                                *ngIf="work.date_join.errors?.required || staffworkexperienceForm.submitted">\r\n                                                {{\'staff.seledatejoin\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15 date_exp">\r\n                                    <div fxFlex.gt-md="50" fxFlex="100">\r\n                                       \r\n                                        <mat-form-field appearance="outline" fxFlex="60">\r\n                                            <mat-label>{{\'staff.worktill\' | translate}} </mat-label>\r\n                                            <input matInput  formControlName="workdate" [required]="worktilled" (dateChange)="dateSelected($event)" [(ngModel)]="worktilldate"  [disabled]="notallowed"\r\n                                            (mousedown)="pickerwork.open(); $event.preventDefault" [disabled]="pickerwork.opened"   [matDatepicker]="pickerwork" readonly [max]="today" \r\n                                            [min]="staffworkexperienceForm.controls[\'date_join\'].value == null ? currentDate : staffworkexperienceForm.controls[\'date_join\'].value">\r\n                                            <mat-icon matDatepickerToggleIcon matSuffix *ngIf="cleardate" (dateChange)="dateSelected($event)" (click)="clearDate()">clear</mat-icon>\r\n                                            <mat-datepicker-toggle matSuffix [for]="pickerwork"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #pickerwork></mat-datepicker>\r\n                                            <mat-error\r\n                                                *ngIf="work.workdate.errors?.required || staffworkexperienceForm.submitted">\r\n                                                {{\'staff.seleworktill\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                        <div class="workcheckbox m-l-20 m-b-13">\r\n                                            <mat-checkbox formControlName="curr_work"  [required]="!worktilled" (change)="onCheckboxChange($event)" [disabled]="isCheckboxDisabled"> </mat-checkbox>\r\n                                            <mat-lable class="m-l-5 txt-gry">{{\'staff.currwork\' |translate}} <span class="errors" *ngIf="!worktilled">*</span></mat-lable>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-select required formControlName="employ_country" [errorStateMatcher]="matcher"\r\n                                            panelClass="select_with_search" (click)="searchcount_ry = \'\'"   (selectionChange)="ctrychoose(work.employ_country.value);cityselecttwo(work.employ_country.value)" \r\n                                            *ngIf="(countrymst | filter : searchcount_ry) as countresult">\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="searchcount_ry"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchcount_ry = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchcount_ry !=\'\' && searchcount_ry !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let country of countrymst  | filter : searchcount_ry"\r\n                                                value={{country.opalcountrymst_pk}}>{{ifarbic == true ? (country.ocym_countryname_ar):\r\n                                                (country.ocym_countryname_en)}}</mat-option>\r\n                                                <div *ngIf="countresult.length == 0">{{\'staff.nocounmatc\' | translate}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-select>\r\n                                            \r\n                                            <mat-label>{{\'staff.count\' | translate}}</mat-label>\r\n                                            <mat-error\r\n                                                *ngIf="work.employ_country.errors?.required  || staffworkexperienceForm.submitted">\r\n                                                {{\'staff.selecount\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                        class="read_only">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-select  formControlName="employ_state" [errorStateMatcher]="matcher"\r\n                                            panelClass="select_with_search" (selectionChange)="stateselect(work.employ_state.value)"\r\n                                            *ngIf="(state | filter : selectsearchstate) as countresult"  (click)="selectsearchstate = \'\'" >\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="selectsearchstate"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="selectsearchstate = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="selectsearchstate !=\'\' && selectsearchstate !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option *ngFor="let stat of state  | filter : selectsearchstate"\r\n                                                value={{stat.opalstatemst_pk}}>{{ifarbic == true? (stat.osm_statename_ar):\r\n                                                (stat.osm_statename_en)}}</mat-option>\r\n                                                <div *ngIf="countresult.length == 0">{{\'staff.noresultfound\' | translate}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-select>\r\n                                          \r\n                                            <mat-label *ngIf="!nonoman">{{\'staff.state\' | translate}}</mat-label>\r\n                                            <mat-label *ngIf="nonoman">{{\'staff.gove\' | translate}}</mat-label>\r\n                                            <mat-error\r\n                                                *ngIf="(work.employ_state.errors?.required  || staffworkexperienceForm.submitted) && !nonoman">\r\n                                                {{\'staff.selestate\' | translate}} </mat-error>\r\n                                            <mat-error\r\n                                                *ngIf="(work.employ_state.errors?.required  || staffworkexperienceForm.submitted) && nonoman">\r\n                                                {{\'staff.selegover\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                        <mat-form-field appearance="outline">\r\n                                                <mat-select  formControlName="employ_city" [errorStateMatcher]="matcher"\r\n                                                panelClass="select_with_search" (selectionChange)="stateselect(work.employ_state.value)"\r\n                                                *ngIf="(citymst | filter : selectsearchcity) as countresult " (click)="selectsearchcity = \'\'">\r\n                                                <div class="searchinmultiselect">\r\n                                                    <mat-icon >search</mat-icon>\r\n                                                    <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                        matInput class="searchselect" type="Search"\r\n                                                        placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                        (keydown)="$event.stopPropagation();"\r\n                                                        [(ngModel)]="selectsearchcity"\r\n                                                        [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                    <mat-icon (click)="selectsearchcity = \'\'" class="reseticon" matSuffix\r\n                                                        *ngIf="selectsearchcity !=\'\' && selectsearchcity !=null">clear</mat-icon>\r\n                                                </div>\r\n                                                <div class="option-listing countryselectwithimage">\r\n                                                    <mat-option *ngFor="let city of citymst  | filter : selectsearchcity"\r\n                                                value={{city.opalcitymst_pk}}>{{ifarbic == true ? (city.ocim_cityname_ar):\r\n                                                (city.ocim_cityname_en)}}</mat-option>\r\n                                                    <div *ngIf="countresult.length == 0">{{\'staff.noresultfound\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </mat-select>\r\n                                         \r\n                                            <mat-label *ngIf="!nonoman">{{\'staff.city\' | translate}}</mat-label>\r\n                                            <mat-label *ngIf="nonoman">{{\'staff.wila\' | translate}}</mat-label>\r\n                                            <mat-error\r\n                                                *ngIf="(work.employ_city.errors?.required  || staffworkexperienceForm.submitted ) && !nonoman ">\r\n                                                {{\'staff.selecity\' | translate}} </mat-error>\r\n                                            <mat-error\r\n                                                *ngIf="(work.employ_city.errors?.required  || staffworkexperienceForm.submitted) && nonoman ">\r\n                                                {{\'staff.selewila\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="start center">\r\n                                    <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                        <mat-form-field appearance="outline">\r\n                                            <mat-label>{{\'staff.desi\' | translate}} </mat-label>\r\n                                            <input (keydown.enter)="$event.preventDefault()"\r\n                                                [errorStateMatcher]="matcher" matInput app-restrict-input="english"\r\n                                                required formControlName="designat">\r\n                                            <mat-error\r\n                                                *ngIf="work.designat.errors?.required || staffworkexperienceForm.submitted">\r\n                                                {{\'staff.entedesi\' | translate}} </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                        class="read_only">\r\n                                        <app-filee #moheri [fileMstRef]="workInput" [deleteicon]="deleteicon" [fileuploadcommon]="false" [uploaddocumentname]="\'Upload Document\' | translate"  [requiredfield]="requiredwork" \r\n                                        (filesSelected)="fileeSelectwork($event,workInput)" formControlName="work_files"\r\n                                        ></app-filee>\r\n                                        <mat-hint class="fs-14 txt-gry">Note: You can upload 1 file (jpg, jpeg, png, pdf) of max. size 5.0 MB.</mat-hint>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                                    <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15"\r\n                                        type="button" (click)="canclework()">{{\'staff.canc\' |\r\n                                        translate}}\r\n                                    </button>\r\n                                    <button mat-raised-button color="primary" type="button"  *ngIf="this.staffworkapptype == \'new\'" (click)="savestaffwork()"\r\n                                        class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.add\' | translate}}\r\n                                    </button>\r\n                                    <button mat-raised-button color="primary" type="button" *ngIf="this.staffworkapptype == \'edit\'"  (click)="savestaffwork()"\r\n                                        class="ShowHidefs-15 submit_btn m-l-10">{{\'table.update\' | translate}}\r\n                                    </button>\r\n                                </div>\r\n                              </div>\r\n                              <div class="cardwht m-b-40" *ngIf="!workexpformshow">\r\n                                <div class="paginationwithfilter masterPageTop m-t-30 workedtable" >\r\n                               \r\n                                    <mat-paginator class="masterPage masterPageTop" #paginatorfifth [length]="fifthLength"\r\n                                        [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                        (page)="fifthPaginator($event);"></mat-paginator>\r\n                                    <div fxLayout="row wrap">\r\n                                        <div fxFlex.gt-sm="100" fxFlex="100">\r\n                                            <button  *ngIf="applicationtype != \'view\'"  mat-raised-button color="primary" type="button" (click)="showhideworkexpform(true)"\r\n                                    class="ShowHidefs-15 submit_btn m-r-15">{{\'staff.add\' | translate}}\r\n                                </button>\r\n                                            <button mat-raised-button type="button" color="primary"\r\n                                                (click)="clickfilterEvent()" class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7" aria-hidden="true"></i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                                <div fxLayout="row wrap" >\r\n                                    <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                                        <div class="awaredtable" >\r\n                                            <mat-table #table class="scrolldata" [dataSource]="workExperience" matSort #sortworkgrid="matSort"\r\n                                                matSortDisableClear >\r\n                                                <ng-container matColumnDef="organname">\r\n                                                    <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.empl\' | translate}}</mat-header-cell>\r\n                                                    <mat-cell data-label="organname" fxFlex="250px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{workexperienceData.organname}} </div>\r\n                                                        </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="datejoin">\r\n                                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.datejoin\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="datejoin" fxFlex="263px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{workexperienceData.datejoin||\'-\'}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="worktill">\r\n                                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.worktill\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="worktill" fxFlex="263px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{(workexperienceData.sexp_currentlyworking == 1)? (\'Worktill\' ): (workexperienceData.worktill)}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="ocym_countryname_en">\r\n                                                    <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.count\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="ocym_countryname_en" fxFlex="250px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{(ifarbic == true ? (workexperienceData.ocym_countryname_ar):\r\n                                                            (workexperienceData.ocym_countryname_en))||\'-\'}} </div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="osm_statename_en">\r\n                                                    <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.gove\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="osm_statename_en" fxFlex="250px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound"> {{(ifarbic == true ? (workexperienceData.osm_statename_ar):\r\n                                                            (workexperienceData.osm_statename_en))||\'-\'}} </div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="ocim_cityname_en">\r\n                                                    <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.wila\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="ocim_cityname_en" fxFlex="250px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{(ifarbic == true ? (workexperienceData.ocim_cityname_ar):\r\n                                                            (workexperienceData.ocim_cityname_en))||\'-\'}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="desig">\r\n                                                    <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'staff.jobtitl\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="desig" fxFlex="180px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{workexperienceData.desig}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                \x3c!-- new --\x3e\r\n                                                <ng-container matColumnDef="certificate">\r\n                                                    <mat-header-cell fxFlex="170px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header>{{\'Uploaded Document\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="certificate" fxFlex="170px" *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        \x3c!-- <div *ngIf="!tblplaceholder" fxLayoutAlign="start center">\r\n                                                            <span mat-button class="viewdocument txt-gry3 m-t-5 "><a target="_blank"\r\n                                                              class="txt-gry3" href={{workexperienceData.url}} fxLayoutAlign="start center"><img matTooltip="View" class="document_img p-r-5" src="assets/images/opalimages/pdf_new.svg">View</a></span></div> --\x3e\r\n                                                              <div *ngIf="!tblplaceholder" fxLayoutAlign="start center"><img *ngIf="workexperienceData.sexp_profdocupload"  href={{workexperienceData.url}} class="document_img" src="assets/images/opalimages/{{workexperienceData.mcfd_filetype}}_new.svg">\r\n                                                                <span mat-button class="viewdocument txt-gry3 m-t-5 m-l-5"><a target="_blank"\r\n                                                                  class="txt-gry3"  href={{workexperienceData.url}}>{{workexperienceData.sexp_profdocupload?\'View\':\'-\'}}</a></span></div>\r\n                                                            </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="addedu">\r\n                                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header> {{\'staff.addon\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="addedu" fxFlex="263px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{workexperienceData.addedu}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="lastUpdated">\r\n                                                    <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                        mat-sort-header> {{\'staff.lastupdat\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="lastUpdated" fxFlex="263px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound">{{workexperienceData.lastUpdated?workexperienceData.lastUpdated:\'-\'}}</div>\r\n                                                         </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="action" stickyEnd>\r\n                                                    <mat-header-cell fxFlex="100px" mat-header-cell *matHeaderCellDef>\r\n                                                        {{\'staff.Action\' | translate}}\r\n                                                    </mat-header-cell>\r\n                                                    <mat-cell data-label="action" fxFlex="100px"\r\n                                                        *matCellDef="let workexperienceData">\r\n                                                        <div *ngIf="NorecordFound" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                        <div *ngIf="!NorecordFound"><div class="manageoptions">\r\n                                                            <button class="menubutton" mat-icon-button\r\n                                                                [matMenuTriggerFor]="actionmenu" type="button"\r\n                                                                aria-label="Example icon-button with a menu">\r\n                                                                <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                            </button>\r\n                                                            <mat-menu #actionmenu="matMenu"\r\n                                                                class="master-menu whentootltipadded">\r\n                                                                <button type="button" mat-menu-item *ngIf="this.applicationtype != \'view\'" (click)="editstaffwork(workexperienceData,\'edit\')">\r\n                                                                    <span>{{\'table.edit\' | translate}} </span>\r\n                                                                </button>\r\n                                                                <button type="button" mat-menu-item *ngIf="this.applicationtype != \'view\'"  (click)="deletestaffwork(workexperienceData.staffworkexp_pk)">\r\n                                                                    <span>{{\'table.delete\' | translate}}</span>\r\n                                                                </button>\r\n                                                                <button type="button" mat-menu-item  *ngIf="this.applicationtype == \'view\'" (click)="editstaffwork(workexperienceData,\'view\')">\r\n                                                                    <span>{{\'table.view\' | translate}}</span>\r\n                                                                </button>\r\n                                                            </mat-menu>\r\n                                                        </div></div>\r\n                                                    </mat-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-first">\r\n                                                    <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                            <input matInput [formControl]="oranisation" (keyup)="serachwork($event.target.value,\'oranisation\')" >\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-second">\r\n                                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <div class="drpicker" id="regapp">\r\n                                                                <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                <input id="login_session" [formControl]="date_joined" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                <div class="closeanddateicon">\r\n                                                                    <mat-datepicker-toggle matSuffix >\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-three">\r\n                                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <div class="drpicker" id="regapp">\r\n                                                                <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                <input id="login_session" [formControl]="work_till" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                <div class="closeanddateicon">\r\n                                                                    <mat-datepicker-toggle matSuffix >\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-four">\r\n                                                    <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                            <input matInput [formControl]="count" (keyup)="serachwork($event.target.value,\'count\')" >\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-five">\r\n                                                    <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                            <input matInput [formControl]="gover" (keyup)="serachwork($event.target.value,\'gover\')" >\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-six">\r\n                                                    <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                            <input matInput [formControl]="wilaya" (keyup)="serachwork($event.target.value,\'wilaya\')" >\r\n                                                        </mat-form-field>\r\n                                                        </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-seven">\r\n                                                    <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                        \r\n                                                                <input matInput [formControl]="designation" (keyup)="serachwork($event.target.value,\'designation\')" >\r\n                                                     \r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-document">\r\n                                                    <mat-header-cell fxFlex="170px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        \x3c!-- <mat-form-field class="filter" appearance="outline">\r\n                                                            <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                        \r\n                                                                <input matInput [formControl]="designation" (keyup)="serachwork($event.target.value,\'designation\')" >\r\n                                                     \r\n                                                        </mat-form-field> --\x3e\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-eight">\r\n                                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <div class="drpicker" id="regapp">\r\n                                                                <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                <input id="login_session" [formControl]="add_edOn" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                <div class="closeanddateicon">\r\n                                                                    <mat-datepicker-toggle matSuffix >\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-nine">\r\n                                                    <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n                                                        <mat-form-field class="filter" appearance="outline">\r\n                                                            <div class="drpicker" id="regapp">\r\n                                                                <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                <input id="login_session" [formControl]="date_last" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                <div class="closeanddateicon">\r\n                                                                    <mat-datepicker-toggle matSuffix >\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="row-ten" stickyEnd>\r\n                                                    <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                                        style="text-align:center">\r\n        \r\n                                                        <i class="fa fa-refresh m-l-15 cursorview" (click)="clearFilterework();filtersts=false;"\r\n                                                            aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                                    </mat-header-cell>\r\n                                                </ng-container>\r\n                                                <mat-header-row id="headerrowcells"\r\n                                                    *matHeaderRowDef="workExperienceList;">\r\n                                                </mat-header-row>\r\n                                                <mat-header-row id="filtershow"\r\n                                                    *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\', \'row-seven\', \'row-document\' ,\'row-eight\',\'row-nine\' , \'row-ten\' ]">\r\n                                                </mat-header-row>\r\n                                                <mat-row mat-row\r\n                                                    *matRowDef="let row; columns: workExperienceList;"></mat-row>\r\n                                                    <ng-container matColumnDef="disclaimer">\r\n                                                        <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                                            <div [ngClass]="NorecordFound? \' \' :\'nofound\'" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                                                <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                                    <div fxLayout="row wrap" fxLayoutAlign="center center"  *ngIf="NorecordFound"\r\n                                                                    class="NorecordLoader m-t-10"></div>\r\n                                                                    <img src="assets/images/opalimages/norecord.svg" alt="norecord" *ngIf="!NorecordFound">\r\n                                                                    <p class="m-t-10 txt-gry3 fs-16" *ngIf="!NorecordFound">{{\'common.noreco\' | translate}} \r\n                                                                    </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                        </td>\r\n                                                    </ng-container>\r\n                                                    <ng-container>\r\n                                                      \r\n                                                        <mat-footer-row  [class.stickyclass]="(fifthLength > 0) ? \'none\' : \'block\'" [style.display]="(fifthLength > 0) ? \'none\' : \'block\' " \r\n                                                            *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                                        </mat-footer-row>\r\n                                                    </ng-container>\r\n                                            </mat-table>\r\n                                        </div>\r\n                                        <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                                            <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                                <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                                    class="masterPage masterbottom " showFirstLastButtons\r\n                                                    [pageSize]="paginatorfifth?.pageSize"\r\n                                                    (page)="fifthPaginator($event);"\r\n                                                    [pageIndex]="paginatorfifth?.pageIndex" [length]="fifthLength"\r\n                                                    [pageSizeOptions]="paginatorfifth?.pageSizeOptions">\r\n                                                </mat-paginator>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                             </div>\r\n                            </form> \r\n                              \x3c!-- new work end  --\x3e \r\n                                \x3c!-- old work end  --\x3e \r\n                                \x3c!-- <div class="card m-b-40" >\r\n                                    <div  class="projlstngph w-100 listsector" *ngIf="loaderformwork">\r\n                                        <div class="leftmainspace">\r\n                                            <div class="subcontent">\r\n                                                <div class="descriptitlesector">\r\n                                                    <p class="pagetitle"></p>\r\n                                                    </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-0" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                              <div fxLayout="row wrap" >\r\n                                                <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="48" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                            <div fxLayout="row wrap" >\r\n                                              <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                            </div>\r\n                                            <div fxLayout="row wrap"  fxLayoutAlign="end">\r\n                                                <span fxFlex.gt-sm="10" fxFlex="10" class="pagetitle secondwidth "></span>\r\n                                                <span fxFlex.gt-sm="10" ngClass.xs="m-l-25" ngClass.sm="m-l-25" ngClass.md="m-l-25"\r\n                                                ngClass.lg="m-l-25" ngClass.xl="m-l-25" fxFlex="100" class="pagetitle secondwidth"></span>\r\n                                              </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    <form autocomplete="off" #staffWorkExperienceFormReset="ngForm" [formGroup]="staffworkexperienceForm">\r\n                                      <div *ngIf="!loaderformwork">\r\n                                        <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15" >\r\n                                            <div fxFlex.gt-md="50" fxFlex="100">\r\n                                                <mat-form-field appearance="outline">\r\n                                                    <mat-label>{{\'staff.empl\' | translate}} </mat-label>\r\n                                                    <input (keydown.enter)="$event.preventDefault()"\r\n                                                        [errorStateMatcher]="matcher" matInput app-restrict-input="english"\r\n                                                        required formControlName="oragn_name">\r\n                                                    <mat-error\r\n                                                        *ngIf="work.oragn_name.errors?.required || staffworkexperienceForm.submitted">\r\n                                                        {{\'staff.seleempl\' | translate}} </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                                ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                                <mat-form-field appearance="outline">\r\n                                                    <mat-label>{{\'staff.datejoin\' | translate}} </mat-label>\r\n                                                    <input matInput required formControlName="date_join" [max]="today"\r\n                                                        (click)="pickerdatejoin.open()" [matDatepicker]="pickerdatejoin"\r\n                                                        readonly>\r\n                                                    <mat-datepicker-toggle matSuffix\r\n                                                        [for]="pickerdatejoin"></mat-datepicker-toggle>\r\n                                                    <mat-datepicker #pickerdatejoin></mat-datepicker>\r\n                                                    <mat-error\r\n                                                        *ngIf="work.date_join.errors?.required || staffworkexperienceForm.submitted">\r\n                                                        {{\'staff.seledatejoin\' | translate}} </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15 date_exp">\r\n                                            <div fxFlex.gt-md="50" fxFlex="100">\r\n                                             \r\n                                                <mat-form-field appearance="outline" fxFlex="60">\r\n                                                    <mat-label>{{\'staff.worktill\' | translate}} </mat-label>\r\n                                                    <input matInput  formControlName="workdate" [required]="worktilled" (dateChange)="dateSelected($event)" [(ngModel)]="selectedDate"  [disabled]="notallowed"\r\n                                                    (mousedown)="pickerwork.open(); $event.preventDefault" [disabled]="pickerwork.opened"   [matDatepicker]="pickerwork" readonly [max]="today" \r\n                                                    [min]="staffworkexperienceForm.controls[\'date_join\'].value == null ? currentDate : staffworkexperienceForm.controls[\'date_join\'].value">\r\n                                                    <mat-icon matDatepickerToggleIcon matSuffix *ngIf="cleardate" (dateChange)="dateSelected($event)" (click)="clearDate()">clear</mat-icon>\r\n                                                    <mat-datepicker-toggle matSuffix [for]="pickerwork"></mat-datepicker-toggle>\r\n                                                    <mat-datepicker #pickerwork></mat-datepicker>\r\n                                                    <mat-error\r\n                                                        *ngIf="work.workdate.errors?.required || staffworkexperienceForm.submitted">\r\n                                                        {{\'staff.seleworktill\' | translate}} </mat-error>\r\n                                                </mat-form-field>\r\n                                                <div class="workcheckbox m-l-20 m-b-13">\r\n                                                    <mat-checkbox formControlName="curr_work"  [required]="!worktilled" (change)="onCheckboxChange($event)" [disabled]="isCheckboxDisabled"> </mat-checkbox>\r\n                                                    <mat-lable class="m-l-5 txt-gry">{{\'staff.currwork\' |translate}} <span class="errors" *ngIf="!worktilled">*</span></mat-lable>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                                ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                                <mat-form-field appearance="outline">\r\n                                                    <mat-select required formControlName="employ_country" [errorStateMatcher]="matcher"\r\n                                                    panelClass="select_with_search" (click)="searchcount_ry = \'\'"   (selectionChange)="ctrychoose(work.employ_country.value);cityselecttwo(work.employ_country.value)" \r\n                                                    *ngIf="(countrymst | filter : searchcount_ry) as countresult">\r\n                                                    <div class="searchinmultiselect">\r\n                                                        <mat-icon >search</mat-icon>\r\n                                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                            matInput class="searchselect" type="Search"\r\n                                                            placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                            (keydown)="$event.stopPropagation();"\r\n                                                            [(ngModel)]="searchcount_ry"\r\n                                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                        <mat-icon (click)="searchcount_ry = \'\'" class="reseticon" matSuffix\r\n                                                            *ngIf="searchcount_ry !=\'\' && searchcount_ry !=null">clear</mat-icon>\r\n                                                    </div>\r\n                                                    <div class="option-listing countryselectwithimage">\r\n                                                        <mat-option *ngFor="let country of countrymst  | filter : searchcount_ry"\r\n                                                        value={{country.opalcountrymst_pk}}>{{ifarbic == true ? (country.ocym_countryname_ar):\r\n                                                        (country.ocym_countryname_en)}}</mat-option>\r\n                                                        <div *ngIf="countresult.length == 0">{{\'staff.nocounmatc\' | translate}}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-select>\r\n                                                  \r\n                                                    <mat-label>{{\'staff.count\' | translate}}</mat-label>\r\n                                                    <mat-error\r\n                                                        *ngIf="work.employ_country.errors?.required  || staffworkexperienceForm.submitted">\r\n                                                        {{\'staff.selecount\' | translate}} </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="space-between center">\r\n                                            <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0"\r\n                                                class="read_only">\r\n                                                <mat-form-field appearance="outline">\r\n                                                    <mat-select required formControlName="employ_state" [errorStateMatcher]="matcher"\r\n                                                    panelClass="select_with_search" (selectionChange)="stateselect(work.employ_state.value)"\r\n                                                    *ngIf="(state | filter : selectsearchstate) as countresult"  (click)="selectsearchstate = \'\'" >\r\n                                                    <div class="searchinmultiselect">\r\n                                                        <mat-icon >search</mat-icon>\r\n                                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                            matInput class="searchselect" type="Search"\r\n                                                            placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                            (keydown)="$event.stopPropagation();"\r\n                                                            [(ngModel)]="selectsearchstate"\r\n                                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                        <mat-icon (click)="selectsearchstate = \'\'" class="reseticon" matSuffix\r\n                                                            *ngIf="selectsearchstate !=\'\' && selectsearchstate !=null">clear</mat-icon>\r\n                                                    </div>\r\n                                                    <div class="option-listing countryselectwithimage">\r\n                                                        <mat-option *ngFor="let stat of state  | filter : selectsearchstate"\r\n                                                        value={{stat.opalstatemst_pk}}>{{ifarbic == true? (stat.osm_statename_ar):\r\n                                                        (stat.osm_statename_en)}}</mat-option>\r\n                                                        <div *ngIf="countresult.length == 0">{{\'staff.noresultfound\' | translate}}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-select>\r\n                                                 \r\n                                                    <mat-label *ngIf="!nonoman">{{\'staff.state\' | translate}}</mat-label>\r\n                                                    <mat-label *ngIf="nonoman">{{\'staff.gove\' | translate}}</mat-label>\r\n                                                    <mat-error\r\n                                                        *ngIf="(work.employ_state.errors?.required  || staffworkexperienceForm.submitted) && !nonoman">\r\n                                                        {{\'staff.selestate\' | translate}} </mat-error>\r\n                                                    <mat-error\r\n                                                        *ngIf="(work.employ_state.errors?.required  || staffworkexperienceForm.submitted) && nonoman">\r\n                                                        {{\'staff.selegover\' | translate}} </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div fxFlex.gt-sm="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                                ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100">\r\n                                                <mat-form-field appearance="outline">\r\n                                                        <mat-select required formControlName="employ_city" [errorStateMatcher]="matcher"\r\n                                                        panelClass="select_with_search" (selectionChange)="stateselect(work.employ_state.value)"\r\n                                                        *ngIf="(citymst | filter : selectsearchcity) as countresult " (click)="selectsearchcity = \'\'">\r\n                                                        <div class="searchinmultiselect">\r\n                                                            <mat-icon >search</mat-icon>\r\n                                                            <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                                matInput class="searchselect" type="Search"\r\n                                                                placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                                (keydown)="$event.stopPropagation();"\r\n                                                                [(ngModel)]="selectsearchcity"\r\n                                                                [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                            <mat-icon (click)="selectsearchcity = \'\'" class="reseticon" matSuffix\r\n                                                                *ngIf="selectsearchcity !=\'\' && selectsearchcity !=null">clear</mat-icon>\r\n                                                        </div>\r\n                                                        <div class="option-listing countryselectwithimage">\r\n                                                            <mat-option *ngFor="let city of citymst  | filter : selectsearchcity"\r\n                                                        value={{city.opalcitymst_pk}}>{{ifarbic == true ? (city.ocim_cityname_ar):\r\n                                                        (city.ocim_cityname_en)}}</mat-option>\r\n                                                            <div *ngIf="countresult.length == 0">{{\'staff.noresultfound\' | translate}}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </mat-select>\r\n                                                \r\n                                                    <mat-label *ngIf="!nonoman">{{\'staff.city\' | translate}}</mat-label>\r\n                                                    <mat-label *ngIf="nonoman">{{\'staff.wila\' | translate}}</mat-label>\r\n                                                    <mat-error\r\n                                                        *ngIf="(work.employ_city.errors?.required  || staffworkexperienceForm.submitted ) && !nonoman ">\r\n                                                        {{\'staff.selecity\' | translate}} </mat-error>\r\n                                                    <mat-error\r\n                                                        *ngIf="(work.employ_city.errors?.required  || staffworkexperienceForm.submitted) && nonoman ">\r\n                                                        {{\'staff.selewila\' | translate}} </mat-error>\r\n                                                </mat-form-field>\r\n        \r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxLayout="row wrap" class="p-t-10" fxLayoutAlign="start center">\r\n                                            <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                                <mat-form-field appearance="outline">\r\n                                                    <mat-label>{{\'staff.desi\' | translate}} </mat-label>\r\n                                                    <input (keydown.enter)="$event.preventDefault()"\r\n                                                        [errorStateMatcher]="matcher" matInput app-restrict-input="english"\r\n                                                        required formControlName="designat">\r\n                                                    <mat-error\r\n                                                        *ngIf="work.designat.errors?.required || staffworkexperienceForm.submitted">\r\n                                                        {{\'staff.entedesi\' | translate}} </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                                            <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15"\r\n                                                type="button" (click)="canclework()">{{\'staff.canc\' |\r\n                                                translate}}\r\n                                            </button>\r\n                                            <button mat-raised-button color="primary" type="button"  *ngIf="this.staffworkapptype == \'new\'" (click)="savestaffwork()"\r\n                                                class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.add\' | translate}}\r\n                                            </button>\r\n                                            <button mat-raised-button color="primary" type="button" *ngIf="this.staffworkapptype == \'edit\'"  (click)="savestaffwork()"\r\n                                                class="ShowHidefs-15 submit_btn m-l-10">{{\'table.update\' | translate}}\r\n                                            </button>\r\n                                        </div>\r\n                                      </div>\r\n                                        <div class="paginationwithfilter masterPageTop m-t-30 workedtable"  >\r\n                                            <mat-paginator class="masterPage masterPageTop" #paginatorfifth [length]="fifthLength"\r\n                                                [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                                (page)="fifthPaginator($event);"></mat-paginator>\r\n                                            <div fxLayout="row wrap">\r\n                                                <div fxFlex.gt-sm="100" fxFlex="100">\r\n                                                    <button mat-raised-button type="button" color="primary"\r\n                                                        (click)="clickfilterEvent()" class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7" aria-hidden="true"></i></button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxLayout="row wrap" >\r\n                                            <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                                                <div class="awaredtable" >\r\n                                                    <mat-table #table class="scrolldata" [dataSource]="workExperience" matSort\r\n                                                        matSortDisableClear >\r\n                                                        <ng-container matColumnDef="organname">\r\n                                                            <mat-header-cell fxFlex="250px" mat-header-cell *matHeaderCellDef\r\n                                                                mat-sort-header>{{\'staff.empl\' | translate}}</mat-header-cell>\r\n                                                            <mat-cell data-label="organname" fxFlex="250px"\r\n                                                                *matCellDef="let workexperienceData">\r\n                                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                                <div *ngIf="!tblplaceholder">{{workexperienceData.organname}} </div>\r\n                                                                </mat-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="datejoin">\r\n                                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                                mat-sort-header>{{\'staff.datejoin\' | translate}}\r\n                                                            </mat-header-cell>\r\n                                                            <mat-cell data-label="datejoin" fxFlex="263px"\r\n                                                                *matCellDef="let workexperienceData">\r\n                                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                                <div *ngIf="!tblplaceholder">{{workexperienceData.datejoin}}</div>\r\n                                                                 </mat-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="worktill">\r\n                                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                                mat-sort-header>{{\'staff.worktill\' | translate}}\r\n                                                            </mat-header-cell>\r\n                                                            <mat-cell data-label="worktill" fxFlex="263px"\r\n                                                                *matCellDef="let workexperienceData">\r\n                                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                                <div *ngIf="!tblplaceholder">{{(workexperienceData.sexp_currentlyworking == 1)? (\'Worktill\' ): (workexperienceData.worktill)}}</div>\r\n                                                                 </mat-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="desig">\r\n                                                            <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                                                mat-sort-header>{{\'staff.jobtitl\' | translate}}\r\n                                                            </mat-header-cell>\r\n                                                            <mat-cell data-label="desig" fxFlex="180px"\r\n                                                                *matCellDef="let workexperienceData">\r\n                                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                                <div *ngIf="!tblplaceholder">{{workexperienceData.desig}}</div>\r\n                                                                 </mat-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="addedu">\r\n                                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                                mat-sort-header> {{\'staff.addon\' | translate}}\r\n                                                            </mat-header-cell>\r\n                                                            <mat-cell data-label="addedu" fxFlex="263px"\r\n                                                                *matCellDef="let workexperienceData">\r\n                                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                                <div *ngIf="!tblplaceholder">{{workexperienceData.addedu}}</div>\r\n                                                                 </mat-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="lastUpdated">\r\n                                                            <mat-header-cell fxFlex="263px" mat-header-cell *matHeaderCellDef\r\n                                                                mat-sort-header> {{\'staff.lastupdat\' | translate}}\r\n                                                            </mat-header-cell>\r\n                                                            <mat-cell data-label="lastUpdated" fxFlex="263px"\r\n                                                                *matCellDef="let workexperienceData">\r\n                                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                                <div *ngIf="!tblplaceholder">{{workexperienceData.lastUpdated?workexperienceData.lastUpdated:\'-\'}}</div>\r\n                                                                 </mat-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="action" stickyEnd>\r\n                                                            <mat-header-cell fxFlex="100px" mat-header-cell *matHeaderCellDef>\r\n                                                                {{\'staff.Action\' | translate}}\r\n                                                            </mat-header-cell>\r\n                                                            <mat-cell data-label="action" fxFlex="100px"\r\n                                                                *matCellDef="let workexperienceData">\r\n                                                                <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                                                <div *ngIf="!tblplaceholder"><div class="manageoptions">\r\n                                                                    <button class="menubutton" mat-icon-button\r\n                                                                        [matMenuTriggerFor]="actionmenu" type="button"\r\n                                                                        aria-label="Example icon-button with a menu">\r\n                                                                        <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                                    </button>\r\n                                                                    <mat-menu #actionmenu="matMenu"\r\n                                                                        class="master-menu whentootltipadded">\r\n                                                                        <button type="button" mat-menu-item *ngIf="this.applicationtype != \'view\'" (click)="editstaffwork(workexperienceData,\'edit\')">\r\n                                                                            <span>{{\'table.edit\' | translate}} </span>\r\n                                                                        </button>\r\n                                                                        <button type="button" mat-menu-item *ngIf="this.applicationtype != \'view\'"  (click)="deletestaffwork(workexperienceData.staffworkexp_pk)">\r\n                                                                            <span>{{\'table.delete\' | translate}}</span>\r\n                                                                        </button>\r\n                                                                        <button type="button" mat-menu-item  *ngIf="this.applicationtype == \'view\'" (click)="editstaffwork(workexperienceData,\'view\')">\r\n                                                                            <span>{{\'table.view\' | translate}}</span>\r\n                                                                        </button>\r\n                                                                    </mat-menu>\r\n                                                                </div></div>\r\n                                                            </mat-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="row-first">\r\n                                                            <mat-header-cell fxFlex="250px" class="serachrow" *matHeaderCellDef\r\n                                                                style="text-align:center">\r\n                                                                <mat-form-field class="filter" appearance="outline">\r\n                                                                    <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                                    <input matInput [formControl]="oranisation" (keyup)="serachwork($event.target.value,\'oranisation\')" >\r\n                                                                </mat-form-field>\r\n                                                            </mat-header-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="row-second">\r\n                                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                                style="text-align:center">\r\n                                                                <mat-form-field class="filter" appearance="outline">\r\n                                                                    <div class="drpicker" id="regapp">\r\n                                                                        <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                        <input id="login_session" [formControl]="date_joined" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                        <div class="closeanddateicon">\r\n                                                                            <mat-datepicker-toggle matSuffix >\r\n                                                                            </mat-datepicker-toggle>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-form-field>\r\n                                                            </mat-header-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="row-three">\r\n                                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                                style="text-align:center">\r\n                                                                <mat-form-field class="filter" appearance="outline">\r\n                                                                    <div class="drpicker" id="regapp">\r\n                                                                        <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                        <input id="login_session" [formControl]="work_till" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                        <div class="closeanddateicon">\r\n                                                                            <mat-datepicker-toggle matSuffix >\r\n                                                                            </mat-datepicker-toggle>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-form-field>\r\n                                                            </mat-header-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="row-four">\r\n                                                            <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                                                style="text-align:center">\r\n                                                                <mat-form-field class="filter" appearance="outline">\r\n                                                                    <mat-label>{{\'table.search\' | translate}}</mat-label>\r\n                                                                \r\n                                                                        <input matInput [formControl]="designation" (keyup)="serachwork($event.target.value,\'designation\')" >\r\n                                                             \r\n                                                                </mat-form-field>\r\n                                                            </mat-header-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="row-five">\r\n                                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                                style="text-align:center">\r\n                                                                <mat-form-field class="filter" appearance="outline">\r\n                                                                    <div class="drpicker" id="regapp">\r\n                                                                        <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                        <input id="login_session" [formControl]="add_edOn" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                        <div class="closeanddateicon">\r\n                                                                            <mat-datepicker-toggle matSuffix >\r\n                                                                            </mat-datepicker-toggle>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-form-field>\r\n                                                            </mat-header-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="row-six">\r\n                                                            <mat-header-cell fxFlex="263px" class="serachrow" *matHeaderCellDef\r\n                                                                style="text-align:center">\r\n                                                                <mat-form-field class="filter" appearance="outline">\r\n                                                                    <div class="drpicker" id="regapp">\r\n                                                                        <mat-label>{{\'table.sele\' |translate}}</mat-label>\r\n                                                                        <input id="login_session" [formControl]="date_last" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                                        <div class="closeanddateicon">\r\n                                                                            <mat-datepicker-toggle matSuffix >\r\n                                                                            </mat-datepicker-toggle>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-form-field>\r\n                                                            </mat-header-cell>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="row-seven" stickyEnd>\r\n                                                            <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                                                style="text-align:center">\r\n                \r\n                                                                <i class="fa fa-refresh m-l-15 cursorview" (click)="clearFilterework();filtersts=false;"\r\n                                                                    aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                                            </mat-header-cell>\r\n                                                        </ng-container>\r\n                                                        <mat-header-row id="headerrowcells"\r\n                                                            *matHeaderRowDef="workExperienceList;">\r\n                                                        </mat-header-row>\r\n                                                        <mat-header-row id="filtershow"\r\n                                                            *matHeaderRowDef="[\'row-first\' , \'row-second\'  , \'row-three\' , \'row-four\', \'row-five\' , \'row-six\', \'row-seven\' ]">\r\n                                                        </mat-header-row>\r\n                                                        <mat-row mat-row\r\n                                                            *matRowDef="let row; columns: workExperienceList;"></mat-row>\r\n                                                            <ng-container matColumnDef="disclaimer">\r\n                                                                <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                                                    <div class="leftmainspace">\r\n                                                                        <div class="subcontent">\r\n                                                                            \r\n                                                                          <div fxLayout="row wrap" >\r\n                                                                            <span fxFlex.gt-sm="48" fxFlex="100" class="pagetitle secondwidth "></span>\r\n                                                                              </div>\r\n                                                                          <div class="descriptitlesector">\r\n                                                                            <p class="pagetitle"></p>\r\n                                                                            </div>\r\n                                                                            </div>\r\n                                                                            </div>\r\n                                                                            \r\n                                                                    <div class="nofound" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                                                        <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                                            <img src="assets/images/opalimages/norecord.svg" alt="norecord">\r\n                                                                            <p class="m-t-10 txt-gry3 fs-16">{{\'common.noreco\' | translate}}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                                </td>\r\n                                                            </ng-container>\r\n                                                            <ng-container>\r\n                                                              \r\n                                                                <mat-footer-row  [class.stickyclass]="(fifthLength > 0) ? \'none\' : \'block\'" [style.display]="(fifthLength > 0) ? \'none\' : \'block\' " \r\n                                                                    *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                                                </mat-footer-row>\r\n                                                            </ng-container>\r\n                                                    </mat-table>\r\n                                                </div>\r\n                                                <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                                                    <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                                        <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                                            class="masterPage masterbottom " showFirstLastButtons\r\n                                                            [pageSize]="paginatorfifth?.pageSize"\r\n                                                            (page)="fifthPaginator($event);"\r\n                                                            [pageIndex]="paginatorfifth?.pageIndex" [length]="fifthLength"\r\n                                                            [pageSizeOptions]="paginatorfifth?.pageSizeOptions">\r\n                                                        </mat-paginator>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div> --\x3e\r\n                                  \x3c!-- old work end  --\x3e \r\n                        \r\n                        <p class="fs-18 txt-gry3 subtitleform">{{\'staff.moheappr\' | translate}} <mat-icon matSuffix matTooltip="{{\'staff.moherinote\' | translate}}" class="p-l-10">info_outline</mat-icon></p>\r\n                        <form autocomplete="off" [formGroup]="courseselectForm">\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15">\r\n                                <div fxFlex="100" fxFlex.gt-sm="100"  class="documents">\r\n                                   \r\n                                        <app-filee #moheri [fileMstRef]="drvInputedmoheri" [deleteicon]="deleteicon" [requiredfield]="requiredfieldshow"\r\n                                    (filesSelected)="fileeSelectedmoheri($event,drvInputedmoheri)" formControlName="moheri_upload"\r\n                                    ></app-filee>\r\n                                    <mat-hint class="txt-gry fs-12"> {{\'documents.noteyoucanupload\' | translate}}</mat-hint>\r\n                                    <mat-error\r\n                                    *ngIf="courseselectForm.controls.moheri_upload.invalid && uploadfiles == true">\r\n                                    {{\'Please Upload file\' | translate}} </mat-error>\r\n                                </div>\r\n                            </div> \r\n                        <p class="fs-18 txt-gry3 subtitleform ">{{\'staff.selectednew\' | translate}}</p>\r\n\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-20">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100" class="popoverforsubcate">\r\n                                    \x3c!-- <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="rolefor_cour" multiple (selectionChange)="coureserolecheck($event.value)"\r\n                                            [errorStateMatcher]="matcher" panelClass="select_with_option multiple">\r\n                                            <mat-option *ngFor="let role of rolemst | filter : searchrole" \r\n                                            value={{role.rolemst_pk}}>\r\n                                            {{ifarbic == true ? (role.rm_rolename_ar):\r\n                                            (role.rm_rolename_en)}}</mat-option>\r\n                                          \r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.roleofcourse\' | translate}}</mat-label>\r\n                                        <mat-error\r\n                                            *ngIf="course.rolefor_cour.errors?.required || courseselectForm.submitted">\r\n                                            {{\'staff.seleroleofcourse\' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field> --\x3e\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.roleofcourse\' | translate}}</mat-label>\r\n                                        <mat-select required formControlName="rolefor_cour" panelClass="select_with_search" (selectionChange)="coureserolecheck($event.value)"\r\n                                            [disableOptionCentering]="true" multiple\r\n                                            *ngIf="(rolemst | filter : searchrole) as roleresult">\r\n                                            <mat-select-trigger>\r\n                                                {{courseselectForm.controls[\'rolefor_cour\'].value ? rolemultiple : \'\'}}\r\n                                                <span *ngIf="courseselectForm.controls[\'rolefor_cour\'].value?.length > 1"  [matTooltip]="this.applicationtype == \'view\'?JoinList(roleforcourseListforpop): \'\'" matTooltipClass="custom-tooltip"\r\n                                                    class="example-additional-selection">\r\n                                                    (+{{courseselectForm.controls[\'rolefor_cour\'].value.length - 1}}\r\n                                                    {{courseselectForm.controls[\'rolefor_cour\'].value?.length === 2 ?\r\n                                                    \'other\' : \'others\'}})\r\n                                                </span>\r\n                                               \r\n                                            </mat-select-trigger>\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" \r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} " \r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="searchrole"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchrole = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchrole !=\'\' && searchrole !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                               <mat-option *ngFor="let role of rolemst_course | filter : searchrole" \r\n                                                value={{role.rolemst_pk}}>\r\n                                                {{ifarbic == true ? (role.rm_rolename_ar):\r\n                                                (role.rm_rolename_en)}}</mat-option>\r\n                                            <div *ngIf="roleresult?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                            </div>\r\n                                           \r\n                                        </mat-select>\r\n                                        <mat-error *ngIf="course.rolefor_cour.errors?.required  || courseselectForm.submitted">\r\n                                            {{\'staff.seleroleofcourse\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div fxFlex.gt-md="50" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                    ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100" class="popoverforsubcate">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-label>{{\'staff.coursubcate\' | translate}}</mat-label>\r\n                                        <mat-select required formControlName="select_coursubcate" panelClass="select_with_search"\r\n                                            [disableOptionCentering]="true"  multiple\r\n                                            *ngIf="(staffsubcat | filter : searchGovernorate4) as cubcatresult">\r\n                                            <mat-select-trigger>\r\n                                                {{courseselectForm.controls[\'select_coursubcate\'].value ? subcatemultiple : \'\'}}\r\n                                                <span *ngIf="courseselectForm.controls[\'select_coursubcate\'].value?.length > 1"  [matTooltip]="this.applicationtype == \'view\'?JoinList(subcatmultipleforlist): \'\'" matTooltipClass="custom-tooltip"\r\n                                                    class="example-additional-selection">\r\n                                                    (+{{courseselectForm.controls[\'select_coursubcate\'].value.length - 1}}\r\n                                                    {{courseselectForm.controls[\'select_coursubcate\'].value?.length === 2 ?\r\n                                                    \'other\' : \'others\'}})\r\n                                                </span>\r\n                                                \r\n                                                \r\n                                            </mat-select-trigger>\r\n                                            <div class="searchinmultiselect">\r\n                                                <mat-icon >search</mat-icon>\r\n                                                <input (keydown.enter)="$event.preventDefault()" \r\n                                                    matInput class="searchselect" type="Search"\r\n                                                    placeholder="{{\'supplierreg.sear\' | translate}} " \r\n                                                    (keydown)="$event.stopPropagation();"\r\n                                                    [(ngModel)]="searchGovernorate4"\r\n                                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                <mat-icon (click)="searchGovernorate4 = \'\'" class="reseticon" matSuffix\r\n                                                    *ngIf="searchGovernorate4 !=\'\' && searchGovernorate4 !=null">clear</mat-icon>\r\n                                            </div>\r\n                                            <div class="option-listing countryselectwithimage">\r\n                                                <mat-option\r\n                                            *ngFor="let subcate of staffsubcat  | filter : searchGovernorate4 "\r\n                                            value={{subcate.appcoursetrnstmp_pk}}> {{ ifarbic == true ? (subcate.ccm_catname_ar):\r\n                                                (subcate.ccm_catname_en)}}</mat-option>\r\n                                            <div *ngIf="cubcatresult?.length == 0">{{\'supplierreg.nofoun\' | translate}}</div>\r\n                                            </div>\r\n                                           \r\n                                        </mat-select>\r\n                                        <mat-error *ngIf="course.select_coursubcate.errors?.required  || courseselectForm.submitted">\r\n                                            {{\'staff.selecoursubcate\' | translate}} </mat-error>\r\n                                    </mat-form-field>\r\n                                    \x3c!-- <mat-form-field appearance="outline">\r\n                                        <mat-select required formControlName="select_coursubcate" multiple\r\n                                            [errorStateMatcher]="matcher" panelClass="select_with_option multiple">\r\n                                            <mat-option\r\n                                            *ngFor="let subcate of staffsubcat  | filter : searchGovernorate1 "\r\n                                            value={{subcate.appcoursetrnstmp_pk}}> {{ ifarbic == true ? (subcate.ccm_catname_ar):\r\n                                                (subcate.ccm_catname_en)}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.coursubcate\' | translate}}</mat-label>\r\n                                        <mat-error\r\n                                            *ngIf="course.select_coursubcate.errors?.required || courseselectForm.submitted">\r\n                                            {{\'staff.selecoursubcate\' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field> --\x3e\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                            <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15 m-b-25">\r\n                                <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                    <mat-form-field appearance="outline">\r\n                                        <mat-select required multiple formControlName="selectlanguage"\r\n                                            [errorStateMatcher]="matcher" panelClass="select_with_option multiple">\r\n                                            <mat-option *ngFor="let lang of languages"\r\n                                                value={{lang.referencemst_pk}}>{{ifarbic == true ? (lang.rm_name_ar):\r\n                                                (lang.rm_name_en)}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-label>{{\'staff.lang\' | translate}}</mat-label>\r\n                                        <mat-icon matSuffix matTooltip="{{\'staff.langinfo\' | translate}}">info_outline</mat-icon>\r\n                                        <mat-error\r\n                                            *ngIf="course.selectlanguage.errors?.required || courseselectForm.submitted">\r\n                                            {{\'staff.selelang\' | translate}}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n            <div *ngIf="accessoravilabe">\r\n                        \x3c!-- <p class="fs-18 txt-gry3 subtitleform">{{\'staff.assesavai\' | translate}} <mat-icon\r\n                                matTooltip="{{\'staff.selecinfo\' |translate}}" class="m-l-5">info_outline</mat-icon></p>\r\n                        <div class="carder m-b-40">\r\n                            <form autocomplete="off" [formGroup]="selectslotForm">\r\n                                <div class="rangedate datepickerrangeform" fxLayoutAlign="space-between center">\r\n                                    <div fxLayout="row" fxFlex="100" fxLayoutAlign="flex-start center">\r\n                                        <div fxFlex.gt-sm="62" fxFlex="100" class="m-b-30">\r\n                                            <mat-form-field class="filter daterangetime" appearance="outline">\r\n                                                <mat-label>{{\'staff.assesavai\' |translate}}</mat-label>\r\n                                                <div class="drpicker" id="regapp">\r\n                                                    <input matInput type="text" id="login_session" [formControl]="daterange"\r\n                                                    ngxDaterangepickerMd [showCustomRangeLabel]="true"\r\n                                                    [alwaysShowCalendars]="true" [ranges]="ranges" [locale]="locale"\r\n                                                    (datesUpdated)="dateFltrChange($event)" [linkedCalendars]="true"\r\n                                                    [showClearButton]="true" [maxDate]="selected2"\r\n                                                    [showClearButton]="true" readonly class="form-control" />\r\n                                                        <div class="closeanddateicomax">\r\n                                                            <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\r\n                                                        </div>\r\n                                                </div>\r\n                                                <mat-error\r\n                                                    *ngIf="range.daterange.errors?.required || selectslotForm.submitted">\r\n                                                    {{\'staff.seleassesavail\' | translate}}\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <span fxFlex="20" class="m-l-20 m-b-20 txt-gry3 fs-16">Total: <span\r\n                                                class="txt-gry3 fs-16">{{selectslotForm.controls[\'days\'].value}}</span>\r\n                                            Days</span>\r\n                                    </div>\r\n                                    <div class="calendarbtn m-b-20" fxLayoutAlign="end"> --\x3e\r\n                                        \x3c!-- <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" type="button"\r\n                                            (click)="canclstaff()">{{\'staff.canc\' | translate}}22\r\n                                        </button>\r\n                                        <button mat-raised-button color="primary" type="submit" (click)="staffAdd()"\r\n                                            class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.add\' | translate}}11\r\n                                        </button> --\x3e\r\n                                    \x3c!-- </div>\r\n                                </div>\r\n                                <div class="availabledate m-t-20">\r\n                                    <div class="paginationwithfilter masterPageTop flex-end">\r\n                                        <mat-paginator class="masterPage masterPageTop" #paginator\r\n                                            [length]="sixLength" [pageSize]="5"\r\n                                            [pageSizeOptions]="[5, 10, 25, 100]"\r\n                                            (page)="sixthPaginator($event);"></mat-paginator>\r\n                                        <div fxLayout="row wrap">\r\n                                            <div fxFlex.gt-sm="100" fxFlex="100"> --\x3e\r\n                                                \x3c!-- <button mat-raised-button color="primary" type="button"\r\n                                                    class="ShowHidefs-15 setup_btn m-r-10"\r\n                                                    (click)="scrollTo(\'pagescroll\');opendialogquicksetup()">{{\'staff.quickset\'\r\n                                                    | translate}}\r\n                                                    <mat-icon class="m-l-7"></mat-icon>\r\n                                                </button> --\x3e\r\n                                                \x3c!-- <button mat-raised-button color="primary" type="button"\r\n                                                    class="ShowHidefs-15 submit_btn m-r-10">{{\'staff.save\' | translate}}\r\n                                                </button> --\x3e\r\n                                                \x3c!-- <button mat-raised-button type="button" color="primary"\r\n                                                    (click)="hideEvent()" class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7" aria-hidden="true"></i>\r\n                                                </button> --\x3e\r\n                                            \x3c!-- </div>\r\n                                        </div>\r\n                                    </div> --\x3e\r\n                                    \x3c!-- <div fxLayout="row wrap">\r\n                                        <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                                            <div class="availabletable hidefilter">\r\n                                                <mat-table #mtable class="scrolldata" [dataSource]="batchtrainingdata"\r\n                                                    matSort matSortDisableClear>\r\n                                                    <ng-container matColumnDef="selecteddate">\r\n                                                        <mat-header-cell fxFlex="200px" mat-header-cell\r\n                                                            *matHeaderCellDef>{{\'staff.seledate\' |\r\n                                                            translate}}</mat-header-cell>\r\n                                                        <mat-cell data-label="selecteddate" fxFlex="200px"\r\n                                                            *matCellDef="let Timedata">\r\n                                                            {{Timedata.selecteddate}} </mat-cell>\r\n                                                    </ng-container>\r\n                                                    <ng-container matColumnDef="schedule">\r\n                                                        <mat-header-cell fxFlex="200px" mat-header-cell\r\n                                                            *matHeaderCellDef>{{\'staff.daysched\' |\r\n                                                            translate}}</mat-header-cell>\r\n                                                        <mat-cell data-label="schedule" class="p-r-30" fxFlex="200px"\r\n                                                            *matCellDef="let Timedata;let z = index;">\r\n                                                            <mat-form-field>\r\n                                                                <mat-select #dataSelect formControlName="availablestatus"\r\n                                                                    (selectionChange)="checkData($event.value,z)"\r\n                                                                    [(ngModel)]="optionSelect[z]">\r\n                                                                    <mat-option *ngFor="let day of dayschedule"\r\n                                                [value]="day.referencemst_pk">{{ifarbic == true ? (day.rm_name_ar):\r\n                                                (day.rm_name_en)}}</mat-option>\r\n                                                                </mat-select>\r\n                                                            </mat-form-field>\r\n                                                        </mat-cell>\r\n                                                    </ng-container>\r\n                                                    <ng-container matColumnDef="start">\r\n                                                        <mat-header-cell fxFlex="820px" class="p-l-15" mat-header-cell\r\n                                                            *matHeaderCellDef mat-sort-header>{{\'course.courstarttime\' | translate}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{\'course.courendtime\' | translate}}</mat-header-cell>\r\n                                                     <div >\r\n                                                        <mat-cell id="{{z}}" data-label="{{\'batch.officetype\' | translate}}" fxFlex="820px"\r\n                                                        *matCellDef="let Timedata;let z = index;">\r\n                                                        <div fxLayoutAlign="space-between" class="w-100">\r\n                                                            <div fxLayoutAlign="flex-start center">                                                                \r\n                                                                <div  fxLayoutAlign="flex-start center"\r\n                                                                    class="slottag borderslot">\r\n                                                                    <div *ngIf="Timedata.subarr.length > 0" class="usrfrm">\r\n                                                                        <div *ngFor="let phone of Timedata.subarr; let i = index" fxLayout="row wrap" fxLayoutAlign="center center">\r\n                                                                                <mat-form-field class="w-150 m-l-15">\r\n                                                                                    <input [matTimepicker]="picker_i" \r\n                                                                                        [strict]="false" (timeChange)="updateTime(z,i,1,$event)"\r\n                                                                                        [value]="phone.sstarttimeZone" id="form{{z}}{{i}}" \r\n                                                                                        required>\r\n                                                                                        <mat-timepicker #picker_i></mat-timepicker>\r\n                                                                                    <mat-icon matSuffix\r\n                                                                                        (click)="picker_i.showDialog()">access_time</mat-icon>                                                                                    \r\n                                                                                </mat-form-field>\r\n                                                                                <mat-form-field class="w-150 m-l-15">                                                                                    \r\n                                                                                        <input [matTimepicker]="pickerTo_i" [strict]="false"  \r\n                                                                                            [value]="phone.sendtimeZone" id="to{{z}}{{i}}" (timeChange)="updateTime(z,i,2,$event)" \r\n                                                                                            required >\r\n                                                                                            <mat-timepicker #pickerTo_i></mat-timepicker>\r\n                                                                                        <mat-icon matSuffix\r\n                                                                                            (click)="pickerTo_i.showDialog()">access_time</mat-icon>                                                                                        \r\n                                                                                </mat-form-field>\r\n                                                                                <span class="fs-12 hrstag m-l-15"><span id="difference{{z}}{{i}}">{{formattedTime}}</span> Hr(s)</span>\r\n                                                                            <button class="m-l-15 remove" (click)="removePhone(i, z)"><mat-icon>remove</mat-icon>Remove</button>  \r\n                                                                        </div>\r\n                                                                    </div> \r\n                                                                   <button class="m-l-15 txt-gry addbtn" (click)="addPhone(z)" *ngIf="Timedata.schedule == 64">\r\n                                                                    <mat-icon>add</mat-icon> Add\r\n                                                                </button> \r\n                                                                <span *ngIf="Timedata.schedule == 30"\r\n                                                                class="fs-14 weekededtag liteorange m-l-15">{{\'batchview.week\' | translate}}  </span>\r\n                                                            <span *ngIf="Timedata.schedule == 29"\r\n                                                                class="fs-14 weekededtag liteorange m-l-15">{{\'batchview.notavai\' | translate}}</span>\r\n                                                            <span *ngIf="Timedata.schedule == 31"\r\n                                                                class="fs-14 weekededtag liteorange m-l-15">{{\'batchview.holi\' | translate}}</span>\r\n                                                                </div>                                                                \r\n                                                            </div>\r\n                                                            \r\n                                                            <div fxLayoutAlign="flex-start">\r\n                                                                <button mat-raised-button class="m-r-10 clearbtn ShowHide fs-15" (click)="rowClear(z)"\r\n                                                                    type="button">{{\'course.courclear\' | translate}}\r\n                                                                </button>\r\n                                                            </div>                                                           \r\n                                                        </div>\r\n                                                    </mat-cell>                                                     \r\n                                                </div>\r\n                                                     \r\n                                                    </ng-container>\r\n\r\n                                                    <ng-container matColumnDef="row-first">\r\n                                                        <mat-header-cell fxFlex="200px" class="serachrow" *matHeaderCellDef\r\n                                                            style="text-align:center">\r\n                                                            <mat-form-field class="filter" appearance="outline">\r\n                                                                <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                                <input matInput [formControl]="appl_form">\r\n                                                            </mat-form-field>\r\n                                                        </mat-header-cell>\r\n                                                    </ng-container>\r\n                                                    <ng-container matColumnDef="row-second">\r\n                                                        <mat-header-cell fxFlex="200px" class="serachrow" *matHeaderCellDef\r\n                                                            style="text-align:center">\r\n                                                            <mat-form-field class="filter" appearance="outline">\r\n                                                                <mat-label>{{\'table.search\' |translate}}</mat-label>\r\n                                                                <input matInput [formControl]="course_cat">\r\n                                                            </mat-form-field>\r\n                                                        </mat-header-cell>\r\n                                                    </ng-container>\r\n                                                    <ng-container matColumnDef="row-third">\r\n                                                        <mat-header-cell fxFlex="820px" class="serachrow" *matHeaderCellDef\r\n                                                            style="text-align:center">\r\n                                                        </mat-header-cell>\r\n                                                    </ng-container>\r\n                                                    <mat-header-row id="headerrowcells"\r\n                                                        *matHeaderRowDef="BatchtrainingData;">\r\n                                                    </mat-header-row>\r\n                                                  <mat-header-row id="searchfilters"\r\n                                                        *matHeaderRowDef="[\'row-first\' , \'row-second\' , \'row-third\']">\r\n                                                    </mat-header-row> \r\n                                                    <mat-row mat-row\r\n                                                        *matRowDef="let row; columns: BatchtrainingData;"></mat-row>\r\n                                                </mat-table>\r\n                                            </div>\r\n                                            div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                                                <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                                    <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                                        class="masterPage masterbottom " showFirstLastButtons\r\n                                                        [pageSize]="paginator?.pageSize"\r\n                                                        (page)="sixthPaginator($event);"\r\n                                                        [pageIndex]="paginator?.pageIndex" [length]="paginator?.length"\r\n                                                        [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                                                    </mat-paginator>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> --\x3e\r\n                                \x3c!-- </div>\r\n                            </form>\r\n                        </div> --\x3e\r\n                        <p class="fs-18 txt-gry3 subtitleform">{{\'staff.asseloca\' | translate}} <mat-icon\r\n                                matTooltip="{{\'staff.selectinfolocat\' |translate}}"\r\n                                class="m-l-5">info_outline</mat-icon></p>\r\n                               \r\n                        <form autocomplete="off" [formGroup]="addressForm">\r\n                            <div formArrayName="Address" class="courebox m-t-15" fxLayout="row wrap" fxLayoutAlign="flex-start baseline">\r\n                                <div *ngFor="let referral of AddressFormArr.controls; let i = index"  fxFlex="96">\r\n                                    <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="m-t-15 units"\r\n                                        [formGroupName]="i" >\r\n                                        <div fxFlex.gt-sm="48" fxFlex="98">\r\n                                            <mat-form-field appearance="outline">\r\n                                                <mat-label>{{\'staff.gove\' | translate}} </mat-label>\r\n                                                <mat-select required formControlName="governate" [errorStateMatcher]="matcher"\r\n                                                panelClass="select_with_search" (click)="searchGovernorate5 = \'\'" [disabled]="vievalue"\r\n                                                *ngIf="(statemst | filter : searchGovernorate5) as countresult"\r\n                                                (selectionChange)="sample(i,$event)">\r\n                                                <div class="searchinmultiselect">\r\n                                                    <mat-icon >search</mat-icon>\r\n                                                    <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                        matInput class="searchselect" type="Search"\r\n                                                        placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                        (keydown)="$event.stopPropagation();"\r\n                                                        [(ngModel)]="searchGovernorate5"\r\n                                                        [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                    <mat-icon (click)="searchGovernorate5 = \'\'" class="reseticon" matSuffix\r\n                                                        *ngIf="searchGovernorate5 !=\'\' && searchGovernorate5 !=null">clear</mat-icon>\r\n                                                </div>\r\n                                                <div class="option-listing countryselectwithimage">\r\n                                                    <mat-option *ngFor="let state of statemst  | filter : searchGovernorate5"\r\n                                                    value={{state.opalstatemst_pk}}>{{ifarbic == true? (state.osm_statename_ar):\r\n                                                    (state.osm_statename_en)}}</mat-option>\r\n                                                    <div *ngIf="countresult?.length == 0">{{\'staff.nocounmatc\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </mat-select>\r\n                                                \x3c!-- <mat-select required formControlName="governate"\r\n                                                  panelClass="select_with_option"  (selectionChange)="sample(i,$event)">\r\n                                                    <mat-option *ngFor="let state of statemst  | filter : searchGovernorate"\r\n                                                    value={{state.opalstatemst_pk}}>{{ifarbic == true? (state.osm_statename_ar):\r\n                                                    (state.osm_statename_en)}}</mat-option>\r\n                                                </mat-select> --\x3e\r\n                                                <mat-error\r\n                                                    *ngIf="getReferralsFormArr(i).controls[\'governate\'].hasError(\'required\') || CourseForm.submitted">\r\n                                                    {{\'staff.selegover\' | translate}} </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div fxFlex.gt-md="48" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                                            ngClass.lg="p-l-20" ngClass.xl="p-l-20" fxFlex="98">\r\n                                            <mat-form-field appearance="outline">\r\n                                                <mat-label>{{\'staff.wila\' | translate}} </mat-label>\r\n                                                <mat-select required formControlName="wilayat" [errorStateMatcher]="matcher"\r\n                                                panelClass="select_with_search multiple" (click)="searchGovernoratewilay = \'\'"\r\n                                                *ngIf="(citylist[i] | filter : searchGovernoratewilay) as countresult" [disabled]="vievalue"\r\n                                                multiple>\r\n                                                <div class="searchinmultiselect">\r\n                                                    <mat-icon >search</mat-icon>\r\n                                                    <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb\r\n                                                        matInput class="searchselect" type="Search"\r\n                                                        placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                        (keydown)="$event.stopPropagation();"\r\n                                                        [(ngModel)]="searchGovernoratewilay"\r\n                                                        [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                                    <mat-icon (click)="searchGovernoratewilay = \'\'" class="reseticon" matSuffix\r\n                                                        *ngIf="searchGovernoratewilay !=\'\' && searchGovernoratewilay !=null">clear</mat-icon>\r\n                                                </div>\r\n                                                <div class="option-listing countryselectwithimage">\r\n                                                    <mat-option *ngFor="let city of citylist[i]  | filter : searchGovernoratewilay"\r\n                                                    value={{city.opalcitymst_pk}}>{{ifarbic == true ? (city.ocim_cityname_ar):\r\n                                                    (city.ocim_cityname_en)}}</mat-option>\r\n                                                    <div *ngIf="countresult?.length == 0">{{\'staff.nocounmatc\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                \x3c!-- <mat-select required multiple formControlName="wilayat"\r\n                                                    panelClass="select_with_option" >\r\n                                                    <mat-option *ngFor="let city of citylist[i]  | filter : searchGovernorate"\r\n                                                    value={{city.opalcitymst_pk}}>{{ifarbic == true ? (city.ocim_cityname_ar):\r\n                                                    (city.ocim_cityname_en)}}</mat-option> --\x3e\r\n                                                </mat-select>\r\n                                                <mat-error *ngIf="getReferralsFormArr(i).controls[\'wilayat\'].hasError(\'required\') || CourseForm.submitted">\r\n                                                    {{\'staff.selewilayat\' | translate}} </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div  *ngIf="addressForm.get(\'Address\').controls.length > 1 && addressForm.get(\'Address\').controls.length != i+1" class="icongroup p-l-30" fxFlex="1" fxLayout="row wrap" >\r\n                                            <mat-icon *ngIf="staffapptype != \'view\'" matTooltip="{{\'table.delete\' | translate}}" class="delete m-b-19 fa fa-trash-o" (click)="removeReferral(i)"></mat-icon>\r\n                                        </div>\r\n                                        \x3c!-- <div class="icongroup p-l-20" fxFlex.gt-md="4">\r\n                                            <mat-icon matTooltip="delete" class="delete m-b-19 fa fa-trash-o"\r\n                                                (click)="removeReferral(i)"></mat-icon>\r\n                                        </div> --\x3e\r\n                                    </div>\r\n                                </div>\r\n                                <div  class="icongroup"  fxLayout="row wrap">\r\n                                    <mat-icon *ngIf="staffapptype != \'view\'" matTooltip="{{\'table.click\' | translate}}" class="add p-t-5"  (click)="addReferral()">add</mat-icon>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </form>\r\n            </div>\r\n              \r\n                        <div fxLayout="row" fxLayoutAlign="end" class="cancelandpublish m-t-30">\r\n                            <button mat-raised-button class="m-r-10 cancelbtn ShowHidefs-15" type="button"\r\n                                (click)="canclstaff()">{{\'staff.canc\' | translate}}\r\n                            </button>\r\n                            <button mat-raised-button color="primary" *ngIf="this.staffapptype == \'new\'" type="submit" (click)="staffAdd()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'staff.add\' | translate}}\r\n                            </button>\r\n                            <button mat-raised-button color="primary" *ngIf="this.staffapptype == \'edit\'" type="submit" (click)="staffAdd()"\r\n                                class="ShowHidefs-15 submit_btn m-l-10">{{\'Update\'}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n        <div class="success" fxLayout="row" fxLayoutAlign="center center " *ngIf="!Submitted">\r\n            \x3c!-- <div fxFlex="50" class="centercontent" fxLayout="column" fxLayoutAlign="center center">\r\n                <div class="success_icon">\r\n                    <mat-icon>check</mat-icon>\r\n                </div>\r\n                <div class="succes_msg text-center">\r\n                    <h4 clss="20">{{\'succes.thankyou\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontent\' | translate}}</p>\r\n                    <button mat-raised-button class="viewform">{{\'succes.viewform\' | translate}}</button>\r\n                </div>\r\n            </div> --\x3e\r\n            <div fxFlex="65" class="centercontent" fxLayout="column" fxLayoutAlign="center center">\r\n                <div class="success_icon">\r\n                    <mat-icon>check</mat-icon>\r\n                </div>\r\n                \x3c!-- submit certification --\x3e\r\n                <div class="succes_msg text-center" *ngIf="resubmit_status == \'1\' && this.applicationtype == \'new\'">\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 2">{{\'succes.thankyou\' | translate}}</h4>\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 3">{{\'succes.thankyoucust\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontent\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                    \x3c!-- <p>{{\'succes.forquerplea\' | translate}}</p> --\x3e\r\n                </div>\r\n                 \x3c!--Re Submit Certification --\x3e\r\n                <div class="succes_msg text-center" *ngIf="resubmit_status == \'2\' && this.applicationtype == \'new\'">\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 2">{{\'succes.thankyoure\' | translate}}</h4>\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 3">{{\'succes.thankyourecust\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontentre\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                    \x3c!-- <p>{{\'succes.forquerplea\' | translate}}</p> --\x3e\r\n                </div>\r\n                 \x3c!--Applicant Type: Renewal submit certification --\x3e\r\n                 <div class="succes_msg text-center" *ngIf="resubmit_status == \'1\' && this.applicationtype == \'renew\'">\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 2">{{\'succes.thankyouone\' | translate}}</h4>\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 3">{{\'succes.thankyouonecust\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontent\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                </div>\r\n                   \x3c!--Applicant Type: Renewal Re submit certification --\x3e\r\n                   <div class="succes_msg text-center" *ngIf="resubmit_status == \'2\' && this.applicationtype == \'renew\'">\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 2">{{\'succes.thankyoutwo\' | translate}}</h4>\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 3">{{\'succes.thankyoutwocust\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontentre\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                </div>\r\n                \x3c!-- Applicant Type: Update (No new staff added OR New staff role/language/sub-categories added) Submit certification--\x3e\r\n                <div class="succes_msg text-center" *ngIf="resubmit_status == \'1\' && this.applicationtype == \'update\'">\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 2">{{\'succes.thankyouthree\' | translate}}</h4>\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 3">{{\'succes.thankyouthreecust\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontentre\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                </div>\r\n                  \x3c!-- Applicant Type: Update (No new staff added OR New staff role/language/sub-categories added) Re Submit certification--\x3e\r\n                  <div class="succes_msg text-center" *ngIf="resubmit_status == \'1\' && this.applicationtype == \'update\'">\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 2">{{\'succes.thankyoufour\' | translate}}</h4>\r\n                    <h4 clss="20" *ngIf="this.standardorcustomized == 3">{{\'succes.thankyoufourcust\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontentre\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                </div>\r\n                \x3c!-- Applicant Type: Update (Added new staff OR added new staff role/language/sub-categories) Submit  certification--\x3e\r\n                \x3c!-- <div class="succes_msg text-center" *ngIf="resubmit_status == \'2\'">\r\n                    <h4 clss="20">{{\'succes.thankyoufive\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontentre\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                </div> --\x3e\r\n                  \x3c!-- Applicant Type: Update (Added new staff OR added new staff role/language/sub-categories) RE-Submit  certification--\x3e\r\n                  \x3c!-- <div class="succes_msg text-center" *ngIf="resubmit_status == \'4\'">\r\n                    <h4 clss="20">{{\'succes.thankyousix\' | translate}}</h4>\r\n                    <p>{{\'succes.thankyoucontentre\' | translate}}</p>\r\n                    <p>{{\'succes.findthecert\' | translate}}</p>\r\n                    <p class="txt-bld m-t-15">{{\'succes.applrefer\' | translate}}:\r\n                        <span>{{compdtls?.appdt_appreferno}}</span>\r\n                    </p>\r\n                    <button mat-raised-button class="viewform txt-bld" (click)="redirect()">{{\'succes.viewform\' |\r\n                        translate}}</button>\r\n                    <p>{{\'succes.pleamakenote\' | translate}}</p>\r\n                </div> --\x3e\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template [ngSwitchCase]="\'payment\'">\r\n        <app-opalpayment [payment]="payment" [record]="record" [paymentbreadcrumb]="paymentbreadcrumb"></app-opalpayment>\r\n    </ng-template>\r\n  \r\n<ng-template [ngSwitchCase]="\'showassessor\'">\r\n<app-assessor [accessordata]="accessordata" [applicationtype]="applicationtype" (cancle)="documentpre()" (subdate)="doneDate()"></app-assessor> \r\n</ng-template>\r\n</div>\r\n<app-responseloader *ngIf="disableSubmitButton"></app-responseloader>'},jzcy:function(e,t,a){"use strict";a.r(t),t.default="#assesorDate .Available {\n  color: #00a551 !important;\n}\n#assesorDate .Available.Not {\n  color: #ed1c27 !important;\n}\n#assesorDate .Weekend {\n  color: #f4811f !important;\n}\n#assesorDate .Holiday {\n  color: #f4811f !important;\n}\n#assesorDate .Booked {\n  color: #0c4b9a !important;\n}\n#assesorDate .mat-sort-header-arrow {\n  color: #ED1C27;\n}\n#assesorDate .moremenucolor {\n  color: #848484;\n}\n#assesorDate .knowledgegrid {\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  box-shadow: 0px 0px 8px #0000001a;\n  border: 1px solid #D7DCE3;\n  border-radius: 4px;\n  opacity: 1;\n}\n#assesorDate .knowledgegrid .headcolor {\n  color: #0C4B9A;\n}\n#assesorDate .knowledgegrid .txt-gry {\n  color: #848484;\n}\n#assesorDate .knowledgegrid .txt-gry3 {\n  color: #262626 !important;\n  font-weight: 500;\n}\n#assesorDate .knowledgegrid .bold {\n  font-weight: 600;\n}\n#assesorDate .knowledgegrid .details {\n  border-bottom: 1px solid #D7DCE3;\n}\n#assesorDate .knowledgegrid .details .head {\n  justify-content: space-between;\n  align-items: center;\n  height: 40px;\n}\n#assesorDate .knowledgegrid .details .head .grade {\n  align-items: center;\n  color: #895B37;\n}\n#assesorDate .knowledgegrid .details .head .gold {\n  align-items: center;\n  color: #BA9666;\n}\n#assesorDate .knowledgegrid .details .head .silver {\n  align-items: center;\n  color: #B9BABC;\n}\n#assesorDate .knowledgegrid .details .application-detais {\n  border: 1px solid #D7DCE3;\n  padding: 5px;\n  font-size: 16px;\n  margin-top: 10px !important;\n}\n#assesorDate .availablecard {\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  box-shadow: 0px 0px 8px #0000001a;\n  border: 1px solid #D7DCE3;\n  border-radius: 4px;\n  opacity: 1;\n}\n#assesorDate .availablecard form {\n  background-color: #f8f8f8;\n}\n#assesorDate .availablecard form .mat-icon {\n  color: #848484;\n  font-size: 22px;\n  cursor: pointer;\n  margin-left: 4px;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #d9d9d9;\n  background-color: #fff;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border-radius: 3px 0 0 3px;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border-radius: 0 3px 3px 0;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: #6ba5ec;\n  background-color: #f8f8f8;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #0c4b9a;\n  background-color: #f8f8f8;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline.mat-focused.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  color: #0c4b9a;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  background-color: #f8f8f8;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #dc4c64;\n  background-color: #f8f8f8;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  transform: translateY(-0.9rem) scale(0.75);\n  color: #848484;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#assesorDate .availablecard .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap {\n  width: 0px !important;\n}\n#assesorDate .availablecard .mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #dc4c64 !important;\n}\n#assesorDate .mat-raised-button {\n  box-shadow: none;\n  border-radius: 2px;\n  font-size: 15px;\n  height: 45px;\n  min-width: 110px;\n}\n#assesorDate .cancelbtn {\n  color: #262626;\n  background-color: #fff;\n  border: 1px solid #e8e8e8;\n}\n#assesorDate .submitbtn {\n  color: #fff;\n  background-color: #ED1C27;\n}\n#assesorDate .scrolldata {\n  position: relative;\n  z-index: 1;\n  display: block;\n  overflow-x: auto;\n  background-color: #fff;\n  scroll-behavior: smooth;\n}\n#assesorDate .scrolldata::-webkit-scrollbar {\n  width: 6px;\n  height: 5px;\n}\n#assesorDate .scrolldata::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n#assesorDate .scrolldata::-webkit-scrollbar-thumb {\n  background: #ccc;\n  border-radius: 2px;\n}\n#assesorDate .scrolldata::-webkit-scrollbar-thumb:hover {\n  background: #ccc;\n}\n#assesorDate .awaredtable {\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #fff;\n  margin: 10px 0px;\n}\n#assesorDate .awaredtable .manageoptions {\n  padding-right: 15px;\n}\n#assesorDate .awaredtable .mat-row {\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n#assesorDate .awaredtable .mat-row:hover {\n  background-color: #f5f5f5 !important;\n}\n#assesorDate .awaredtable .mat-cell {\n  color: #262626;\n}\n#assesorDate .awaredtable .mat-header-cell {\n  color: #626366 !important;\n  background-color: #eaedf2;\n  font-size: 15px;\n}\n#assesorDate .paginationwithfilter {\n  display: flex !important;\n  justify-content: space-between !important;\n  align-items: center !important;\n}\n#assesorDate .masterPageTop {\n  display: flex;\n}\n#assesorDate .masterPageTop .mat-paginator-range-actions button {\n  display: none;\n}\n#assesorDate .mat-paginator-container .mat-paginator-page-size-label {\n  color: #999;\n  font-size: 15px;\n}\n#assesorDate .mat-paginator-container .mat-select-value {\n  color: #626366;\n  font-size: 15px;\n}\n#assesorDate .mat-paginator-container .mat-paginator-range-label {\n  color: #999;\n  font-size: 15px;\n  margin: 0px 10px !important;\n}\n#assesorDate .footerpaginator .mat-paginator-outer-container .mat-paginator-container {\n  padding: 0px !important;\n}\n@media (max-width: 768px) {\n  #assesorDate .footerpaginator .mat-paginator-outer-container .mat-paginator-container {\n    display: block !important;\n  }\n}\n#assesorDate .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n  width: calc(100% - 186px);\n  color: #0c4b9a;\n}\n#assesorDate .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions .mat-paginator-range-label {\n  width: calc(100% - 186px);\n}\n@media (max-width: 768px) {\n  #assesorDate .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n    width: auto !important;\n  }\n}\n#assesorDate #regapp .closeanddateicomax {\n  top: 11px !important;\n}\n#assesorDate .date_exp .mat-form-field-appearance-outline .mat-form-field-suffix {\n  display: flex;\n  align-items: center;\n}"},nitp:function(e,t,a){"use strict";a.r(t),a.d(t,"createTranslateLoader",(function(){return ke})),a.d(t,"StandardcoursesModule",(function(){return Ce}));var n=a("mrSG"),r=a("8Y7J"),s=a("SVse"),l=a("iInd"),i=a("P+IX"),o=a("s7LF"),c=a("TSSN"),d=a("fWzN"),m=a("z4EA"),p=a("UhP/"),f=a("+Zhm"),u=a("To7c"),h=a("y1+5"),g=a("5QHs"),b=a("Ku6F"),x=a("M9ds"),v=a("LUZP"),w=a("OaSA"),y=a("EkiR"),_=a("GUC0"),k=a.n(_),C=a("wd/R"),F=a.n(C),D=a("iELJ"),I=a("AQhQ"),S=a("KNwP"),L=a("BmmT"),z=a("lst6"),A=a("Eyz8"),q=a("GS7A"),O=a("EApP"),T=a("AytR");const j=[{position:1,coursetitle:"Workshop",courseduration:"1 year",courselevel:"Level 1",coursecat:"Fire and safety",coursetest:"Fire and safety",status:"APPROVED",add:"10-1-2023",lastUpdated:-2004}];let H=class{constructor(e,t,a,n,s,l,i,c,d,m,u,h,g,x,y,_){this.formBuilder=e,this.el=t,this.translate=a,this.remoteService=n,this.profileService=s,this.cookieService=l,this.appservice=i,this.regService=c,this.dialog=d,this.security=m,this.localstorage=u,this.myRoute=h,this.secuirty=g,this.batchService=x,this.toastr=y,this.routeid=_,this.staffsubcat=[],this.showbranch=!1,this.uploadlength=[],this.saveproceed=!1,this.coursesavebtn=!1,this.docsavebtn=!1,this.loaderformeducation=!1,this.loaderformwork=!1,this.unitlength=0,this.selectedOption1=!0,this.selectedOption2=!1,this.userpermission=[],this.accessoravilabe=!1,this.educationformshow=!1,this.workexpformshow=!1,this.samecentrecourse=!1,this.rolesubcategory=[],this.coursesubcategory=[],this.vievalue=!1,this.NorecordFound=!1,this.applicationstatus=0,this.intertabmanditoryornot=!1,this.alltabsarefilled=!0,this.tab3filled=!1,this.first_form_disbale=!1,this.displayedColumns=["irm_intlrecogname_en","last_aud","url","status","created_on","updated_on","action"],this.BranchListData=["applictionno","appiim_officetype","appiim_branchname_en","pm_projectname_en","coursename_en","courscat_en","reqfor_en","delto_en","dateofexpiry","applicationstatus","certification","addedon","lastUpdated","action"],this.courseListData=["coursetitle","courseduration","courselevel","coursecat","coursetest","status","add","lastUpdated","action"],this.staffListData=["sir_idnumber","sir_name_en","age","rolename_en","ccm_catname_en","status","competcard","addedon","updatedon","action"],this.educationList=["institute","degree","edulvl_en","yearpass","grade","url","addedu","lastUpdated","action"],this.workExperienceList=["organname","datejoin","worktill","ocym_countryname_en","osm_statename_en","ocim_cityname_en","desig","certificate","addedu","lastUpdated","action"],this.courseData=new w.b(j),this.BatchtrainingData=["selecteddate","schedule","start"],this.standardTemplate="course",this.apptype="new",this.appdoctype="new",this.staffapptype="new",this.staffeduapptype="new",this.staffworkapptype="new",this.interapptype="new",this.staffotherdetails=!1,this.saveandproceed=!0,this.matcher=new p.d,this.filteredSector=new f.ReplaySubject(1),this.sectorFilter=new o.f,this.filteredBussrc=new f.ReplaySubject(1),this.bussrcFilter=new o.f,this.hidden=!1,this.ShowHide=!0,this.add_btn=!0,this.operatcont=!1,this.international=!1,this.courses=!1,this.staffform=!1,this.Submitted=!0,this.renewal=!0,this.decline=!0,this.maximumdate=F()(),this.secondaryLength=0,this.thirdLength=0,this.filtername="Hide Filter",this.countryselect="1",this.hidefilder=!0,this.length="",this.second="",this.third="",this.four="",this.appstatus="",this.app_type="",this.prodpk="",this.apptemppk="",this.editOption=!0,this.updated=!0,this.isValid=!0,this.isValided=!0,this.valided=!0,this.validture=!0,this.others=!1,this.perpage=b.a.bgiConfigData.configuration.enterpriseAdminPerpage,this.bgiConfigJson=b.a.bgiConfigData.configuration,this.tog="",this.finalpermissionarray=[],this.page=10,this.page1=10,this.page2=10,this.page3=10,this.page4=10,this.page5=10,this.ageinput=!1,this.paginationSet=b.a.bgiConfigData.configuration.enterpriseAdminPaginatonSet,this.sortstaffgrid=new v.a,this.sortworkgrid=new v.a,this.newstaff=!0,this.expandedElement=!1,this.spinnerButtonOption={active:!1,text:"Verified",spinnerSize:15,raised:!1,stroked:!1,spinnerColor:"warn",fullWidth:!0,disabled:!1,mode:"indeterminate",type:"button"},this.mattab=0,this.standorcustom="standard",this.genderShow=!1,this.courselist=[],this.subcategory=[],this.interreg=[],this.countrylist=[],this.rolemst=[],this.rolemst_course=[],this.contacttypemst=[],this.countrymst=[],this.statemst=[],this.educationlvl=[],this.languages=[],this.dayschedule=[],this.state=[],this.citymst=[],this.citylist=[[]],this.unit=[],this.firstgrid=[],this.branchlist=[],this.reqformst=[],this.deliverto=[],this.staffs=[],this.applyinternatdata=[],this.interdata=[],this.docmst=[],this.batchtraningdata_data=[],this.contentinputloader=!1,this.mcpPk="",this.oman=!0,this.nonoman=!0,this.noteHideShow=!1,this.maindata=new r.y,this.tblplaceholder=!1,this.gendershow=!0,this.ageShow=!0,this.deleteicon=!0,this.hiddenbtn=!1,this.loaderform=!1,this.fileerror=!0,this.availablepk=64,this.avaliabledate=!0,this.weekend=!0,this.holiday=!0,this.finalsubmitbtn=!0,this.nodocumentopload=!1,this.dateFilterSt="",this.dateFilterEd="",this.daterange=new o.f("",o.x.required),this.optionSelect=[],this.searchGovernorate="",this.searchCourseTitlelist="",this.searchDeliverTo="",this.searchGovernorate1="",this.onDataSent=new r.y,this.resubmit_status=1,this.requiredfieldshow=!0,this.requiredwork=!1,this.uploadedufiles=!1,this.isopen={},this.isFilterCleared=!0,this.spinnerButtonOptionsmem={active:!1,text:"Verify",spinnerSize:15,raised:!1,stroked:!1,spinnerColor:"warn",fullWidth:!0,disabled:!1,mode:"indeterminate",type:"button"},this.spinnerButtonOptionscr={active:!1,text:"Verify",spinnerSize:15,raised:!1,stroked:!1,spinnerColor:"warn",fullWidth:!0,disabled:!1,mode:"indeterminate",type:"button"},this.locale={format:"DD-MM-YYYY"},this.ranges={Today:[F()(),F()()],Yesterday:[F()().subtract(1,"days"),F()().subtract(1,"days")],"Last 7 Days":[F()().subtract(6,"days"),F()()],"Last 30 Days":[F()().subtract(29,"days"),F()()],"This Month":[F()().startOf("month"),F()().endOf("month")],"Last Month":[F()().subtract(1,"month").startOf("month"),F()().subtract(1,"month").endOf("month")]},this.today=new Date,this.maxDate=new Date,this.startDate=new Date("2023-02-23"),this.endDate=new Date("2023-02-28"),this.days2=["Sunday","Wednesday"],this.startTime="10:30",this.endTime="11:30",this.ifarbic=!1,this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr",this.Awarding=new o.f(""),this.appl_form=new o.f(""),this.officetype=new o.f(""),this.bran_name=new o.f(""),this.coures_type=new o.f(""),this.course_titles=new o.f(""),this.course_cat=new o.f(""),this.requested=new o.f(""),this.courdeliver=new o.f(""),this.appl_status=new o.f(""),this.cert=new o.f(""),this.date_expiry=new o.f(""),this.addedon_branch=new o.f(""),this.lastUpdated_branch=new o.f(""),this.Statusone=new o.f(""),this.LastAudited=new o.f(""),this.LastUpdated=new o.f(""),this.Status=new o.f(""),this.course_title=new o.f(""),this.course_dura=new o.f(""),this.course_level=new o.f(""),this.course_cate=new o.f(""),this.course_test=new o.f(""),this.StatusCour=new o.f(""),this.adddoncour=new o.f(""),this.LastUpdatedcour=new o.f(""),this.civil_numb=new o.f(""),this.staff_name=new o.f(""),this.age=new o.f(""),this.role_course=new o.f(""),this.cours_sub_cate=new o.f(""),this.compcard=new o.f(""),this.institute=new o.f(""),this.degree=new o.f(""),this.year_join=new o.f(""),this.year_pass=new o.f(""),this.yearpass=new o.f(""),this.grade=new o.f(""),this.add_On=new o.f(""),this.Last_Date=new o.f(""),this.Addedon=new o.f(""),this.oranisation=new o.f(""),this.date_joined=new o.f(""),this.work_till=new o.f(""),this.count=new o.f(""),this.gover=new o.f(""),this.wilaya=new o.f(""),this.designation=new o.f(""),this.add_edOn=new o.f(""),this.date_last=new o.f(""),this.range_date=new o.f(""),this.dateselect=!0,this.formattedTime="00:00",this.isCheckboxDisabled=!1,this.cleardate=!1,this.worktilled=!0,this.notallowed=!1}i18n(e){return this.translate.instant(e)}transFun(){if(this.translate.setDefaultLang(this.cookieService.get("languageCode")),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){const e=this.languagelist.find(e=>e.id===this.cookieService.get("languageCookieId"));this.translate.setDefaultLang(e.languagecode),this.dir=e.dir}else{const e=this.languagelist.find(e=>"1"==e.id);this.translate.setDefaultLang(e.languagecode),this.dir=e.dir}}ngOnInit(){if(this.userForm=this.formBuilder.group({sstarttime:[""],sendtime:[""]}),this.optionSelect=[null],this.userpermission=this.localstorage.getInLocal("uerpermission"),this.checkQueryParams(),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){const e=this.languagelist.find(e=>e.id===this.cookieService.get("languageCookieId"));this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,"en"==e.languagecode?this.filtername="Hide Filter":this.filtername="\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0635\u0641\u064a\u0629"}else{const e=this.languagelist.find(e=>"1"==e.id);this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,this.filtername="Hide Filter"}this.cookieService.get("languageCode")&&"ar"==this.cookieService.get("languageCode")?this.ifarbic=!0:this.ifarbic=!1,this.remoteService.getLanguageCookie().subscribe(e=>{if(this.translate.setDefaultLang(this.cookieService.get("languageCode")),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){const e=this.languagelist.find(e=>e.id===this.cookieService.get("languageCookieId"));this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,"en"==e.languagecode?this.filtername="Hide Filter":this.filtername="\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0635\u0641\u064a\u0629"}else{const e=this.languagelist.find(e=>"1"==e.id);this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,this.filtername="Hide Filter"}this.cookieService.get("languageCode")&&"ar"==this.cookieService.get("languageCode")?this.ifarbic=!0:this.ifarbic=!1,this.drvInputed={fileMstPk:2,selectedFilesPk:[]},this.drvInputed1={fileMstPk:4,selectedFilesPk:[]},this.drvInputedmoheri={fileMstPk:2,selectedFilesPk:[]},this.educationInput={fileMstPk:2,selectedFilesPk:[]},this.workInput={fileMstPk:2,selectedFilesPk:[]}}),this.regpk=this.localstorage.getInLocal("registerPk"),this.Standardcourese(),this.getGoverenoratelist(),this.getconfigurations(),this.getMoherigradinglist(),this.getfirstgrid(this.page,0,null),this.batchtrainingdata=new w.b(this.batchtraningdata_data),this.CourseForm.controls.cour_subcate.valueChanges.subscribe(e=>{if(this.subcatecoryListforpopup=[],e){let t=this.subcategory.findIndex(t=>t.subpk==e[0]);-1!==t&&(this.businessUnitDataTemp=this.subcategory[t].subcategory_en),e.length>1?e.forEach(e=>{let t=this.subcategory.findIndex(t=>t.subpk==e);0!==t&&this.subcatecoryListforpopup.push(this.subcategory[t].subcategory_en)}):this.subcatecoryListforpopup=[],console.log(this.subcatecoryListforpopup)}else this.businessUnitDataTemp="",this.subcatecoryListforpopup=[]}),this.staffForm.controls.role.valueChanges.subscribe(e=>{if(this.mainRoleListforPopup=[],e){let t=this.rolemst.findIndex(t=>t.rolemst_pk==e[0]);-1!==t&&(this.mainroleUnitDataTemp=this.rolemst[t].rm_rolename_en,e.length>1?e.forEach(e=>{let t=this.rolemst.findIndex(t=>t.rolemst_pk==e);0!==t&&this.mainRoleListforPopup.push(this.rolemst[t].rm_rolename_en)}):this.mainRoleListforPopup=[])}else this.mainroleUnitDataTemp="",this.mainRoleListforPopup=[]}),this.courseselectForm.controls.rolefor_cour.valueChanges.subscribe(e=>{if(e){let t=this.rolemst.findIndex(t=>t.rolemst_pk==e[0]);-1!==t&&(this.rolemultiple=this.rolemst[t].rm_rolename_en,e.length>1?e.forEach(e=>{let t=this.rolemst.findIndex(t=>t.rolemst_pk==e);0!==t&&this.roleforcourseListforpop.push(this.rolemst[t].rm_rolename_en)}):this.roleforcourseListforpop=[])}else this.rolemultiple="",this.roleforcourseListforpop=[]}),this.courseselectForm.controls.select_coursubcate.valueChanges.subscribe(e=>{if(e){let t=this.staffsubcat.findIndex(t=>t.appcoursetrnstmp_pk==e[0]);-1!==t&&(this.subcatemultiple=this.staffsubcat[t].ccm_catname_en,e.length>1?e.forEach(e=>{let t=this.staffsubcat.findIndex(t=>t.appcoursetrnstmp_pk==e);0!==t&&this.subcatmultipleforlist.push(this.staffsubcat[t].ccm_catname_en)}):this.subcatmultipleforlist=[])}else this.subcatemultiple="",this.subcatmultipleforlist=[]}),this.getcountrymst(),this.maxDate.setFullYear((new Date).getFullYear()-18),this.staffForm.controls.date_birth.valueChanges.subscribe(e=>{let t=F()(),a=t.diff(e,"years");t.add(-a,"years");let n=t.diff(e,"months");t.add(-n,"months");t.diff(e,"days");this.staffForm.controls.age.setValue(a),this.ageShow=!1}),this.staffForm.controls.gend_er.valueChanges.subscribe(e=>{1==this.staffForm.controls.gend_er.value?(this.genderselect="1",this.gendershow=!1,this.staffForm.controls.gender_address.setValue(this.i18n("staff.mr"))):2==this.staffForm.controls.gend_er.value?(this.genderselect="2",this.gendershow=!1,this.staffForm.controls.gender_address.setValue(this.i18n("staff.ms"))):this.genderselect=" "}),this.onchangecount()}ngAfterViewInit(){this.routeid.queryParams.subscribe(e=>{var t=e.tye,a=e.k;setTimeout(()=>{"s"==t?(this.coures_type.setValue(["2"]),this.applyFilter(a,t)):"c"==t&&(this.coures_type.setValue(["3"]),this.applyFilter(a,t))},3e3)}),this.checkQueryParams()}calculateAge(e){const t=new Date(e.value),a=new Date,n=Math.abs(a.getTime()-t.getTime());Math.floor(n/31536e6)}getfirstgrid(e,t,a){this.tblplaceholder=!0,this.appservice.getfirstgrid(e,t,a).subscribe(e=>{this.tblplaceholder=!1,200==e.status&&(this.resultsLength=e.data.firstgrid.totalcount,this.TrainingBranchData=new w.b(e.data.firstgrid.applydata),this.firstgrid=e.data.firstgrid.applydata,this.reqformst=e.data.reqfor,this.TrainingBranchData.sort=this.sort)})}getcoursedata(){this.appservice.getcoursedata().subscribe(e=>{this.courselist=e.data.courselist,this.reqformst=e.data.requestformst,this.deliverto=e.data.deliverto})}formParentArrayFormation(e,t,a){if("new"==this.appdoctype)this.documentForm.addControl("remark_"+e,new o.f),this.documentForm.addControl("doc_"+e,new o.f),this.documentForm.addControl("file_"+e,new o.f("",o.x.required)),this.documentForm.addControl("redio_"+e,new o.f("1",[])),this.documentForm.addControl("referpk_"+e,new o.f(a.documentdtlsmst_pk,[]));else{this.documentForm.addControl("remark_"+e,new o.f(a.appdst_remarks,[])),this.documentForm.addControl("doc_"+e,new o.f(a.appdocsubmissiontmp_pk,[])),this.documentForm.addControl("file_"+e,new o.f(a.appdst_memcompfiledtls_fk,[])),a.appdst_submissionstatus?this.documentForm.addControl("redio_"+e,new o.f(a.appdst_submissionstatus,null)):this.documentForm.addControl("redio_"+e,new o.f("1",null)),this.documentForm.addControl("referpk_"+e,new o.f(a.documentdtlsmst_pk,[]));let t=this.docmst.findIndex(e=>e.documentdtlsmst_pk==a.documentdtlsmst_pk);this.docmst[t].ddm_status=a.appdst_submissionstatus,this.drvInputed1.selectedFilesPk=[a.appdst_memcompfiledtls_fk];var n="remark_"+e,r="file_"+e;1==a.appdst_submissionstatus?($("#doc_"+e).show(),$("#re_"+e).hide(),this.documentForm.controls[r].setValidators(o.x.required),this.documentForm.controls[n].setValidators(null)):2==a.appdst_submissionstatus?($("#doc_"+e).hide(),$("#re_"+e).show(),this.documentForm.controls[r].setValidators(null),this.documentForm.controls[n].setValidators(o.x.required)):($("#doc_"+e).show(),$("#re_"+e).hide(),this.documentForm.controls[r].setValidators(o.x.required),this.documentForm.controls[n].setValidators(null)),this.isValid=a.appdst_submissionstatus}}onCommentChange(e,t){this.uploadlength[t]=e.length}nextCourse(){console.log(this.documentForm),this.documentForm.valid&&(this.disableSubmitButton=!0,this.appservice.savedocuments(this.documentForm.value,this.referencepk,this.appdoctype).subscribe(e=>{200==e.status&&(this.tab3filled=!0,this.checkalltabsarefilled(),this.disableSubmitButton=!1,this.docmst=[],this.documentForm=new o.h({}),this.documentForm.addControl("total_mst",new o.f("",[])),this.appdoctype="edit",this.appservice.getdocumentdata(this.referencepk,this.standardorcustomized,"","").subscribe(e=>{this.docmst=e.data.docmst,this.mark.total_mst.setValue(e.data.total)})),this.mattab=3})),this.scrollTo("pagescroll")}docradiobtn(e,t,a){let n=this.docmst.findIndex(e=>e.documentdtlsmst_pk==a);this.docmst[n].ddm_status=Number(e),this.docmst[n].appdst_submissionstatus=Number(e);var r="remark_"+t,s="file_"+t;1==e?($("#doc_"+t).show(),$("#re_"+t).hide(),this.documentForm.controls[r].reset(),this.documentForm.controls[s].setValidators(o.x.required),this.documentForm.controls[r].clearValidators()):(this.documentForm.controls[s].clearValidators(),this.documentForm.controls[r].setValidators(o.x.required),$("#doc_"+t).hide(),$("#re_"+t).show()),this.documentForm.controls[r].updateValueAndValidity(),this.documentForm.controls[s].updateValueAndValidity(),this.isValid=e}getdocmstdata(e,t){this.appservice.getdocmstdata(this.standorcustom,e,t).subscribe(e=>{this.docmst=e.data.docmst,this.mark.total_mst.setValue(e.data.total)})}getroleforcourse(e,t,a,n){this.appservice.getroleforcourse(e,t,a,n).subscribe(e=>{this.rolemst_course=e.data.roleforcourse})}getcustomcourse(){this.appservice.getcustomcourse().subscribe(e=>{this.courselist=e.data.courselist,this.reqformst=e.data.requestformst,this.deliverto=e.data.deliverto})}getstaffsinfo(e){this.appservice.getstaffsinfo(e).subscribe(e=>{this.staffs=e.data.staffinfo})}branchchoose(e){this.branchlist.forEach(t=>{t.appinstinfomain_pk==e&&1==t.appdm_issuspended&&(k()({title:this.i18n("A Course cannot be created for this Centre as the Centre Certification has been Suspended."),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.CourseForm.controls.bran_ch.reset())}),this.appinstinfomain_pk=e}selectedcourse(e){this.courselist.forEach(t=>{t.pk==e&&("standard"==this.standorcustom?(this.appservice.chechalredyapply(t.pk,t.scm_requestfor,this.appinstinfomain_pk).subscribe(e=>{"yes"==e.data.exists?(k()({title:this.i18n("This course already applied choose another course"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.cour.course_titleen.reset(),this.cour.cour_cate.reset(),this.cour.cour_level.reset()):(this.reqformst=e.data.requestformst,this.cour.cour_cate.setValue(t.ccm_catname_en),this.cour.cour_level.setValue(t.level)),this.cour.cour_subcate.reset()}),16==t.scm_assessmentin&&(this.samecentrecourse=!0),1==t.scm_isintlreorgreq?this.intertabmanditoryornot=!0:this.intertabmanditoryornot=!1):(this.cour.cour_cate.setValue(t.ccm_catname_en),this.cour.cour_level.setValue(t.level)),t.scm_coursecategorymst_fk&&this.appservice.getseccategory(t.pk,2).subscribe(e=>{this.subcategory=e.data.subcategory}),t.appocm_coursesubcategorymst_fk&&this.appservice.getseccategory(t.appocm_coursesubcategorymst_fk,3).subscribe(e=>{this.subcategory=e.data.subcategory}),"custom"==this.standorcustom&&(this.unitpk=t.pk,this.appservice.getunit(t.pk,10,0).subscribe(e=>{this.unit=e.data.unit,this.unitlength=this.unit.length})))}),this.cour.cour_cate.disable(),this.cour.cour_level.disable()}selectedreqfor(e){this.getdocmstdata(this.cour.course_titleen.value,e)}delivertochange(e){this.others="others"==e}checkQueryParams(){this.routeid.queryParams.subscribe(e=>{this.appstatus=this.security.decrypt(e.s),this.app_type=this.security.decrypt(e.t),this.prodpk=this.security.decrypt(e.p),this.apptemppk=this.security.decrypt(e.at),console.log("data for query",this.appstatus,this.app_type,this.prodpk,this.apptemppk),5==this.appstatus||6==this.appstatus||7==this.appstatus||8==this.appstatus||9==this.appstatus||18==this.appstatus?(this.disableSubmitButton=!0,this.appservice.getpaymentinfo(this.apptemppk,1).subscribe(e=>{200==e.status&&setTimeout(()=>{this.payment=e.data.payment,this.record=e.data.record,this.standardTemplate="payment",this.disableSubmitButton=!1},1e3)})):(this.getfirstgrid(this.page,0,null),this.standardTemplate="course")})}getstaffedu(e,t,a,n){this.tblplaceholder=!0,this.appservice.getstaffedu(e,t,a,n).subscribe(e=>{this.tblplaceholder=!1,200==e.status&&(this.education=new w.b(e.data.education),this.fourthLength=e.data.totalcount,this.education.sort=this.sort)})}getstaffwork(e,t,a,n){this.NorecordFound=!0,this.appservice.getstaffwork(e,t,a,n).subscribe(e=>{200==e.status&&(this.NorecordFound=!1,this.workExperience=new w.b(e.data.workexp),this.fifthLength=e.data.totalcount,this.workExperience.sort=this.sortworkgrid)})}selectcivilid(e){this.staffs.forEach(t=>{t.staffinforepo_pk==e&&(this.disableSubmitButton=!0,this.appservice.getstaffavialabe(t.staffinforepo_pk,this.referencepk).subscribe(e=>{200==e.status&&(this.disableSubmitButton=!1,"yes"==e.data.alreadymapped?(k()({title:this.i18n("institute.first"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.staf.civil_num.reset()):(this.staffreferencepk=t.staffinforepo_pk,this.staf.staffeng.setValue(t.sir_name_en),this.staf.staffarab.setValue(t.sir_name_ar),this.staf.email_id.setValue(t.sir_emailid),this.staf.date_birth.setValue(t.sir_dob),this.staf.gend_er.setValue(t.sir_gender),this.staf.national.setValue(t.sir_nationality),this.staf.house.setValue(t.sir_addrline1),this.staf.houseadd.setValue(t.sir_addrline2),this.staf.state.setValue(t.sir_opalstatemst_fk),this.appservice.getcitymst(t.sir_opalstatemst_fk).subscribe(e=>{200==e.status&&(this.citymst=e.data.citymst,this.staf.city.setValue(t.sir_opalcitymst_fk))}),this.edu.staffrepopk.setValue(t.staffinforepo_pk),this.work.staffrepopk.setValue(t.staffinforepo_pk),this.staf.role.setValue(t.appsim_mainrolearr),this.staf.job_title.setValue(t.appsim_jobtitle),this.staf.cont_type.setValue(t.appsim_contracttype),this.getstaffedu(this.page,0,null,t.staffinforepo_pk),this.getstaffwork(this.page,0,null,t.staffinforepo_pk),this.staffotherdetails=!0,this.saveandproceed=!1,this.drvInputedmoheri.selectedFilesPk=[t.sir_moheridoc],this.courseselectForm.controls.moheri_upload.setValue(t.sir_moheridoc)))}))})}checkcivilnum(e,t){this.appservice.checkcivilnum(e,this.appinstinfomain_pk,this.referencepk).subscribe(e=>{"alreadyadded"==e.data.alreadymapped&&(k()({title:this.i18n("institute.first"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.staffForm.reset(),this.staffForm.controls.count_ry.setValue("31"),this.ageShow=!0),"list"==e.data.alreadymapped&&(k()({title:this.i18n("institute.fourth"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.staffForm.reset(),this.staffForm.controls.count_ry.setValue("31"),this.ageShow=!0),"samebranch"==e.data.alreadymapped&&(k()({title:this.i18n("institute.second"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.staffForm.reset(),this.staffForm.controls.count_ry.setValue("31"),this.ageShow=!0),"diffbranch"==e.data.alreadymapped&&(k()({title:this.i18n("institute.third"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.staffForm.reset(),this.staffForm.controls.count_ry.setValue("31"),this.ageShow=!0),"yes"==e.data.dataavailable&&(this.stateselect(e.data.isstaffavi.sir_opalstatemst_fk),this.staffForm.patchValue({civil_num:e.data.isstaffavi.sir_idnumber,staffeng:e.data.isstaffavi.sir_name_en,staffarab:e.data.isstaffavi.sir_name_ar,email_id:e.data.isstaffavi.sir_emailid,date_birth:e.data.isstaffavi.sir_dob,gend_er:e.data.isstaffavi.sir_gender,national:e.data.isstaffavi.sir_nationality,house:e.data.isstaffavi.sir_addrline1,houseadd:e.data.isstaffavi.sir_addrline2,state:e.data.isstaffavi.sir_opalstatemst_fk,city:e.data.isstaffavi.sir_opalcitymst_fk,job_title:e.data.isstaffavi.appsit_jobtitle,cont_type:e.data.isstaffavi.appsit_contracttype}),this.edu.staffrepopk.setValue(e.data.isstaffavi.staffinforepo_pk),this.work.staffrepopk.setValue(e.data.isstaffavi.staffinforepo_pk),this.staffreferencepk=e.data.isstaffavi.staffinforepo_pk,this.getstaffwork(this.page,0,null,this.staffreferencepk),this.getstaffedu(this.page,0,null,this.staffreferencepk),this.saveandproceed=!1,this.staffotherdetails=!0)})}sample(e,t){this.appservice.getcitymst(t.value).subscribe(t=>{200==t.status&&(this.citylist[e]=t.data.citymst)})}sample1(e,t){this.appservice.getcitymst(t).subscribe(t=>{200==t.status&&(this.citylist[e]=t.data.citymst)})}getcountrymst(){this.appservice.getcountrymst().subscribe(e=>{200==e.status&&(this.countrymst=e.data.country)})}getintnatrecogmst(){this.appservice.getintnatrecogmst(this.standardorcustomized).subscribe(e=>{this.interreg=e.data.recogmst,this.countrylist=e.data.countrymst,this.rolemst=e.data.rolemst,this.rolemst_course=e.data.rolemst,this.contacttypemst=e.data.contacttypemst,this.statemst=e.data.statemst,this.educationlvl=e.data.educationlvl,this.languages=e.data.languages,this.dayschedule=e.data.dayscheule,this.scrollTo("pagescroll")})}savestaff(){if(this.staffForm.valid){let e=this.staffForm.value;e.date_birth=F()(e.date_birth).format("YYYY-MM-DD").toString(),this.loaderform=!0,this.appservice.savestaff(e).subscribe(e=>{this.loaderform=!1,this.saveproceed=!0,this.staffreferencepk=e.data.staffrepopk,this.edu.staffrepopk.setValue(this.staffreferencepk),this.work.staffrepopk.setValue(this.staffreferencepk),this.saveandproceed=!1,this.staffotherdetails=!0,this.scrollTo("editformeducation")})}else this.focusInvalidInput(this.staffForm)}savestaffedu(){if(this.educationForm.valid){this.loaderformeducation=!0;let e=this.educationForm.value;e.GradeDate=F()(e.GradeDate).format("YYYY-MM-DD").toString(),this.appservice.savestaffedu(e,this.staffeduapptype).subscribe(e=>{200==e.status&&(this.loaderformeducation=!1,this.educationformshow=!1,this.scrollTo("tableedu"),this.edu.staffrepopk.setValue(this.staffreferencepk),this.staffeduapptype="new",this.getstaffedu(this.page,0,null,this.staffreferencepk),this.educationForm.controls.institute_name.reset(),this.educationForm.controls.degree_cert.reset(),this.educationForm.controls.gpa_grade.reset(),this.educationForm.controls.GradeDate.reset(),this.educationForm.controls.edut_level.reset(),this.educationInput.selectedFilesPk=[]),setTimeout(()=>{this.loaderform=!1},2e3)})}else this.focusInvalidInput(this.educationForm),this.uploadedufiles=!0}savestaffwork(){if(console.log(this.staffworkexperienceForm),this.staffworkexperienceForm.valid){this.loaderformwork=!0;let e=this.staffworkexperienceForm.value;e.date_join=F()(e.date_join).format("YYYY-MM-DD").toString(),e.workdate=F()(e.workdate).format("YYYY-MM-DD").toString(),this.appservice.savestaffwork(e,this.staffworkapptype).subscribe(e=>{200==e.status&&(this.loaderformwork=!1,this.workexpformshow=!1,this.scrollTo("workedtable"),this.staffworkexperienceForm.reset(),this.work.staffrepopk.setValue(this.staffreferencepk),this.staffworkapptype="new",this.getstaffwork(this.page,0,null,this.staffreferencepk),this.staffWorkExperienceFormReset.reset(),this.worktilldate=null,this.clearDate(),this.onCheckboxChange1(!0),this.onCheckboxChange1(!1),this.staffworkexperienceForm.controls.workdate.setValidators(null),this.staffworkexperienceForm.controls.curr_work.setValidators(null),this.staffworkexperienceForm.get("workdate").updateValueAndValidity(),this.staffworkexperienceForm.get("curr_work").updateValueAndValidity(),this.work.staffrepopk.setValue(this.staffreferencepk),this.workInput.selectedFilesPk=[])})}else this.focusInvalidInput(this.staffworkexperienceForm)}getstaffinfo(e){this.appservice.getstaffdetails(e).subscribe(e=>{this.subcategory=e.data.subcategory})}checkfile(e,t){5==t&&(this.awar.document_upload.setValue(e[0].filePk),this.awar.document_upload.updateValueAndValidity())}showhideeducationform(e){this.educationformshow=e}showhideworkexpform(e){this.workexpformshow=e}getconfigurations(){this.regService.getConfiguration().subscribe(e=>{this.configurationlist=e.data,this.crnumverify="A"==this.configurationlist["CR Integration"],this.memshpverify="A"==this.configurationlist["OPAL Membership Integration"]})}onselect(){1==this.staffForm.controls.gend_er.value?(this.genderselect="1",this.genderShow=!0):2==this.staffForm.controls.gend_er.value?(this.genderselect="2",this.genderShow=!0):this.genderselect=" "}fileData(){this.companyLogoFilee={fileName:"Company Logo",fileNote:"",fileFormat:"jpg, jpeg",fileSize:"1 MB",fileMaxCount:1,fileData:"",selectedFiles:[]}}ChangeValue(e){this.isValided=e}Changevalue(e){this.valided=e}changevalue(e){this.validture=e}radioButtonGroupChange(e){1==e.value&&(this.newstaff=!0,this.staffForm.reset(),this.staffForm.controls.count_ry.setValue("31"),this.gendershow=!0,this.ageShow=!0,this.saveandproceed=!1,this.staffotherdetails=!1,this.workExperience=[],this.education=[],this.fourthLength=0,this.fifthLength=0,this.batchtraningdata_data=[],this.selectedOption1=!0,this.selectedOption2=!1),2==e.value&&(this.workExperience=[],this.education=[],this.fourthLength=0,this.fifthLength=0,this.batchtraningdata_data=[],this.newstaff=!1,this.selectedOption1=!1,this.selectedOption2=!0,this.saveandproceed=!0,this.staffotherdetails=!1,this.gendershow=!0,this.staffForm.reset(),this.courseselectForm.reset(),this.courseselectForm.controls.moheri_upload.setValue(null),this.drvInputedmoheri.selectedFilesPk=[],this.staffForm.controls.count_ry.setValue("31"),this.ageShow=!0)}Standardcourese(){this.instituteform=this.formBuilder.group({offtype:["",o.x.required],exp_a:["",o.x.required],oma_n:["",o.x.required],tot_oman:[""],oman_percen:[""],site_search:[""],site_main:[""],molpercent:["",o.x.required],no_techstaff:["",o.x.required],curr_learn:["",o.x.required],ratio_tech:["",o.x.required],trainprovmax:["",o.x.required]}),this.CourseForm=this.formBuilder.group({office_type:["",o.x.required],bran_ch:["",o.x.required],course_titleen:["",o.x.required],cour_cate:[""],cour_subcate:["",o.x.required],cour_level:[""],request_for:["",o.x.required],course_delivered:["",null],course_delivered_new:["",null],referencepk:[null,null],standorcustom:[null,null],institute:[null,null],appcoursedtlstmp_pk:[null,null]}),this.documentForm=this.formBuilder.group({files:["",null],total_mst:[null,null]}),this.staffForm=this.formBuilder.group({civil_num:["",o.x.required],staffeng:["",o.x.required],staffarab:["",o.x.required],email_id:["",[o.x.required,o.x.pattern("^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$")]],age:[""],date_birth:["",o.x.required],gend_er:[""],gender_address:[""],national:["",o.x.required],role:["",o.x.required],job_title:["",o.x.required],cont_type:["",o.x.required],house:[""],houseadd:[""],count_ry:[""],state:["",o.x.required],city:["",o.x.required]}),this.educationForm=this.formBuilder.group({institute_name:["",o.x.required],degree_cert:["",o.x.required],gpa_grade:["",o.x.required],GradeDate:["",o.x.required],edut_level:["",o.x.required],education_files:["",o.x.required],staffrepopk:[null,null],staffacademics_pk:[null,null]}),this.staffworkexperienceForm=this.formBuilder.group({oragn_name:["",o.x.required],workdate:[""],designat:["",o.x.required],date_join:["",null],curr_work:[""],employ_country:["",o.x.required],employ_state:["",null],employ_city:["",null],work_files:["",null],staffrepopk:[null,null],staffworkexp_pk:[null,null]}),this.courseselectForm=this.formBuilder.group({moheri_upload:["",o.x.required],rolefor_cour:["",o.x.required],select_coursubcate:["",o.x.required],selectlanguage:["",o.x.required]}),this.addressForm=this.formBuilder.group({Address:this.formBuilder.array([this.createCountry()])}),this.awaredForm=this.formBuilder.group({award_organ:["",o.x.required],last_audit:["",o.x.required],document_upload:["",o.x.required],referencepk:[null,null],appintrecogtmp_pk:[null,null]}),this.selectslotForm=this.formBuilder.group({daterange:["",o.x.required],availablestatus:[""],starttime:["",o.x.required],enDtime:["",o.x.required],days:[0],sstartdata:[""],senddata:[""]})}get inst(){return this.instituteform.controls}get awar(){return this.awaredForm.controls}get cour(){return this.CourseForm.controls}get mark(){return this.documentForm.controls}get staf(){return this.staffForm.controls}get edu(){return this.educationForm.controls}get work(){return this.staffworkexperienceForm.controls}get course(){return this.courseselectForm.controls}get add(){return this.addressForm.controls}get range(){return this.selectslotForm.controls}focusInvalidInput(e){for(const t of Object.keys(e.controls))if(e.controls[t].invalid){const e=this.el.nativeElement.querySelector('[formcontrolname="'+t+'"]');e&&e.focus();break}}getMoherigradinglist(){this.regService.getMoherigradinglist().subscribe(e=>{this.moherigradinglist=e.data})}getGoverenoratelist(){this.profileService.getstatebyid(1).subscribe(e=>{this.governoratelist=e.data})}getwilayatbyid(e,t){this.profileService.getcity(e,t).subscribe(e=>this.wilayatlist=e.data)}syncPrimaryunitcde(e){this.paginator.pageIndex=e.pageIndex,this.paginator.pageSize=e.pageSize,this.page=e.pageSize,this.appservice.getunit(this.unitpk,this.paginator.pageSize,this.paginator.pageIndex).subscribe(e=>{this.unit=e.data.unit,this.unitlength=e.data.total})}syncPrimaryPaginator(e){this.paginator.pageIndex=e.pageIndex,this.paginator.pageSize=e.pageSize,this.page=e.pageSize,this.getfirstgrid(this.paginator.pageSize,this.paginator.pageIndex,null)}secondaryPaginator(e){this.paginator1.pageIndex=e.pageIndex,this.paginator1.pageSize=e.pageSize,this.page1=e.pageSize,this.getinternatinallist(this.paginator1.pageSize,this.paginator1.pageIndex,null)}thirdPaginator(e){this.paginator2.pageIndex=e.pageIndex,this.paginator2.pageSize=e.pageSize,this.page2=e.pageSize,this.getstaffgridlist(this.paginator2.pageSize,this.paginator2.pageIndex,null)}fourthPaginator(e){console.log(e),this.paginator3.pageIndex=e.pageIndex,this.paginator3.pageSize=e.pageSize,this.page3=e.pageSize,this.getstaffedu(this.paginator3.pageSize,this.paginator3.pageIndex,null,this.staffreferencepk)}fifthPaginator(e){this.paginator4.pageIndex=e.pageIndex,this.paginator4.pageSize=e.pageSize,this.page4=e.pageSize,this.getstaffwork(this.paginator4.pageSize,this.paginator4.pageIndex,null,this.staffreferencepk)}sixthPaginator(e){this.paginator5.pageIndex=e.pageIndex,this.paginator5.pageSize=e.pageSize,this.page5=e.pageSize}clickEvent(){if(this.hidefilder=!this.hidefilder,this.hidefilder){this.filtername=this.i18n("table.hide");document.getElementById("searchrow").style.display="flex"}else{this.filtername=this.i18n("table.show");document.getElementById("searchrow").style.display="none"}}clickfilterEvent(){if(this.hidefilder=!this.hidefilder,this.hidefilder){this.filtername=this.i18n("table.hide");document.getElementById("filtershow").style.display="flex"}else{this.filtername=this.i18n("table.show");document.getElementById("filtershow").style.display="none"}}hideEvent(){if(this.hidefilder=!this.hidefilder,this.hidefilder){this.filtername=this.i18n("table.hide");document.getElementById("searchfilters").style.display="flex"}else{this.filtername=this.i18n("table.show");document.getElementById("searchfilters").style.display="none"}}getAge(e){let t=F()(),a=t.diff(e,"years");t.add(-a,"years");let n=t.diff(e,"months");t.add(-n,"months");t.diff(e,"days");this.staffForm.controls.age.setValue(a),a>=5&&(this.ageinput=!0)}offictypechange(e){if(1==e){this.CourseForm.controls.bran_ch.disable(),this.showbranch=!1,this.CourseForm.controls.bran_ch.reset();this.security.encrypt(this.regpk);this.disableSubmitButton=!0,this.appservice.getBranchlistbyregpk(this.regpk,e).subscribe(e=>{this.disableSubmitButton=!1,this.cour.institute.setValue(e.data.data[0].appinstinfomain_pk),this.getstaffsinfo(e.data.data[0].appinstinfomain_pk),this.appinstinfomain_pk=e.data.data[0].appinstinfomain_pk,1==e.data.data[0].appdm_issuspended&&(k()({title:this.i18n("A Course cannot be created for this Centre as the Centre Certification has been Suspended."),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.CourseForm.controls.office_type.reset()),"standard"==this.standorcustom?this.getcoursedata():"custom"==this.standorcustom&&this.getcustomcourse()})}else{this.showbranch=!0;this.security.encrypt(this.regpk);this.appservice.getBranchlistbyregpk(this.regpk,e).subscribe(e=>{1==e.data.status&&(this.cour.institute.setValue(e.data.data[0].appinstinfomain_pk),this.CourseForm.controls.bran_ch.enable(),this.branchlist=e.data.data,this.getstaffsinfo(e.data.data[0].appinstinfomain_pk),this.appinstinfomain_pk=e.data.data[0].appinstinfomain_pk,"standard"==this.standorcustom?this.getcoursedata():"custom"==this.standorcustom&&this.getcustomcourse())})}}prev(){this.CourseForm.touched?"edit"==this.applicationtype?k()({title:this.i18n("maincenter.doyouwantcourse"),text:this.i18n("maincenter.doyouwantnote"),icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.standardTemplate="course",this.getfirstgrid(this.page,0,null),setTimeout(()=>{this.disableSubmitButton=!1},2e3)),this.scrollTo("pagescroll")}):k()({title:this.i18n("maincenter.doyouwantcourseadd"),text:this.i18n("maincenter.doyouwantnote"),icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.standardTemplate="course",this.getfirstgrid(this.page,0,null),setTimeout(()=>{this.disableSubmitButton=!1},2e3)),this.scrollTo("pagescroll")}):k()({title:this.i18n("uploadfile.doyouwantback"),text:"",icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.standardTemplate="course",this.getfirstgrid(this.page,0,null),setTimeout(()=>{this.disableSubmitButton=!1},2e3)),this.scrollTo("pagescroll")})}ApplyCertificate(e){this.mattab=0,this.disableSubmitButton=!0,this.CourseForm.reset(),this.awaredForm.reset(),this.documentForm.reset(),this.staffForm.reset(),this.educationForm.reset(),this.staffworkexperienceForm.reset(),this.courseselectForm.reset(),this.applicationtype="new",this.appdoctype="new",this.cour.office_type.enable(),this.cour.course_titleen.enable(),this.cour.request_for.enable(),this.cour.course_delivered.enable(),this.cour.bran_ch.enable(),this.cour.cour_level.disable(),this.cour.cour_cate.disable(),this.cour.cour_subcate.enable(),this.first_form_disbale=!1,this.secondaryLength=0,this.thirdLength=0,this.docmst=[],this.dataSource=[],this.StaffList=[],this.unit=[],this.resubmit_status=1,this.onchangecount(),this.standorcustom=2==e?"standard":"custom",this.standardTemplate="standardFroms",this.appservice.applycertificate(e).subscribe(e=>{200==e.status&&(this.referencepk=e.data.applicationrefpk,this.cour.referencepk.setValue(this.referencepk),this.cour.standorcustom.setValue(this.standorcustom),this.awar.referencepk.setValue(this.referencepk),this.awaredForm.controls.referencepk.setValue(this.referencepk))}),this.standardorcustomized=e,this.getintnatrecogmst(),this.getinternatinallist(this.page,0,null),setTimeout(()=>{this.disableSubmitButton=!1},2e3),this.scrollTo("pagescroll")}getstaffsubcategory(){this.appservice.getstaffsubcategory(this.appcoursedtlstmppk).subscribe(e=>{this.staffsubcat=e.data.staffsubcat})}getinternatinallist(e,t,a){this.tblplaceholder=!0,this.appservice.getinternational(e,t,a,this.referencepk).subscribe(e=>{this.tblplaceholder=!1,200==e.status&&(this.applyinternatdata=e.data,this.secondaryLength=e.data.totalcount,this.dataSource=new w.b(this.applyinternatdata.applydata),this.interdata=this.applyinternatdata.applydata,this.dataSource.sort=this.sort,this.checkalltabsarefilled())}),setTimeout(()=>{this.tblplaceholder=!1},2e3)}getstaffgridlist(e,t,a){this.tblplaceholder=!0,this.appservice.getstaffgridlist(e,t,a,this.referencepk).subscribe(e=>{this.tblplaceholder=!1,200==e.status&&(this.thirdLength=e.data.totalcount,this.StaffList=new w.b(e.data.staffgrid),this.StaffList.sort=this.sortstaffgrid,this.checkstaffconfiguration())})}addinstite(){this.mattab=1,this.scrollTo("pagescroll")}addEvent(e,t){this.awaredForm.controls[e].setValue(F()(t.value).format("YYYY-MM-DD").toString())}addData(){this.awaredForm.valid?(this.disableSubmitButton=!0,this.appservice.saveinternational(this.awaredForm.value,this.interapptype,this.applicationtype).subscribe(e=>{200==e.status&&(this.checkalltabsarefilled(),this.disableSubmitButton=!1,"edit"==this.interapptype?this.toastr.success(this.i18n("maincenter.interecoupdat"),""):this.toastr.success(this.i18n("maincenter.interecoadde"),""),this.getinternatinallist(this.page,0,null))}),this.awaredForm.controls.award_organ.reset(),this.awaredForm.controls.last_audit.reset(),this.awaredForm.controls.document_upload.reset(),this.ShowHide=!0,this.international=!1,this.mattab=1,this.scrollTo("pagescroll")):(this.fileerror=!1,this.focusInvalidInput(this.awaredForm)),this.cour.referencepk.setValue(this.referencepk),this.awar.referencepk.setValue(this.referencepk)}awardorganchoose(e){this.drvInputed.selectedFilesPk=[],this.Intrecog.triggerChange(),this.awaredForm.controls.last_audit.reset(),this.awaredForm.controls.document_upload.reset(),this.appservice.getinterawardorgandata(e).subscribe(e=>{var t;if(200==e.status){console.log(typeof e.data.data.appintim_Doc);var a=null===(t=e.data.data)||void 0===t?void 0:t.appintim_Doc;"yes"==e.data.status&&(this.drvInputed.selectedFilesPk=[a],console.log(this.drvInputed.selectedFilesPk),setTimeout(()=>{var t,a;this.Intrecog.triggerChange(),this.awaredForm.patchValue({last_audit:null===(t=e.data.data)||void 0===t?void 0:t.appintim_LastAuditDate,document_upload:null===(a=e.data.data)||void 0===a?void 0:a.appintim_Doc})},1e3))}})}awardcancel(){this.awaredForm.touched?this.awaredForm.get("appintrecogtmp_pk").value?k()({title:this.i18n("maincenter.doyouwantupdate"),text:this.i18n("maincenter.doyouwantnote"),icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.disableSubmitButton=!0,this.ShowHide=!0,this.international=!1,this.mattab=1,setTimeout(()=>{this.disableSubmitButton=!1},2e3),this.scrollTo("pagescroll"))}):k()({title:this.i18n("maincenter.doyouwantadd"),text:this.i18n("maincenter.doyouwantnote"),icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.ShowHide=!0,this.international=!1,this.mattab=1,setTimeout(()=>{this.disableSubmitButton=!1},2e3),this.scrollTo("pagescroll"))}):(this.disableSubmitButton=!0,this.ShowHide=!0,this.international=!1,this.mattab=1,setTimeout(()=>{this.disableSubmitButton=!1},2e3),this.scrollTo("pagescroll"))}sHowhide(){this.drvInputed.selectedFilesPk=[],this.ShowHide=!1,this.international=!0,this.add_btn=!0,this.interapptype="new",this.awaredForm.enable(),this.awaredForm.controls.award_organ.reset(),this.awaredForm.controls.document_upload.reset(),this.awaredForm.controls.last_audit.reset(),this.scrollTo("pagescroll")}interedit(e,t){this.disableSubmitButton=!0,this.interapptype=t,this.deleteicon=!0,console.log(typeof e.appintit_doc),this.scrollTo("pagescroll"),"view"==t&&(this.deleteicon=!1,this.hiddenbtn=!1,this.awaredForm.disable()),"edit"==t&&this.awaredForm.enable(),this.intercomment=e.appintit_appdeccomment,this.interaddedon=e.appintit_appdecon,this.interaddedby=e.oum_firstname,this.interstatus=e.status,this.ShowHide=!1,this.international=!0,this.add_btn=!1,this.drvInputed.selectedFilesPk=[e.appintit_doc],console.log(this.drvInputed.selectedFilesPk),this.awaredForm.patchValue({award_organ:e.appintit_intnatrecogmst_fk,last_audit:e.last_aud1,appintrecogtmp_pk:e.appintrecogtmp_pk,document_upload:e.appintit_doc}),setTimeout(()=>{this.disableSubmitButton=!1},2e3),this.scrollTo("pagescroll")}interdelete(e,t){k()({title:this.i18n("maincenter.doyouwantgrid"),text:"",icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(t=>{t&&this.appservice.interdelete(e).subscribe(e=>{200==e.status&&(this.getinternatinallist(this.page,0,null),this.toastr.success(this.i18n("maincenter.interreco"),""),this.scrollTo("pagescroll"))})})}editapplicationdata(e,t,a,n,r){this.applicationstatus=n,this.applicationtype=a,this.appdt_apptype=r,this.standardorcustomized=t,this.mattab=0,this.disableSubmitButton=!0,this.requiredfieldshow=!0,this.resubmit_status=3==n?2:1,"view"==this.applicationtype&&(this.coursesavebtn=!0,this.docsavebtn=!0,this.cour.office_type.disable(),this.cour.course_titleen.disable(),this.first_form_disbale=!0,this.cour.course_delivered.disable(),this.cour.bran_ch.disable(),this.cour.cour_level.disable(),this.cour.cour_cate.disable(),this.cour.cour_subcate.disable(),this.deleteicon=!1,this.requiredfieldshow=!1),"update"!=this.applicationtype&&"edit"!=this.applicationtype&&"renew"!=this.applicationtype||(this.cour.office_type.disable(),this.cour.course_titleen.disable(),this.first_form_disbale=!0,this.cour.course_delivered.disable(),this.cour.bran_ch.disable(),this.cour.cour_level.disable(),this.cour.cour_cate.disable(),"edit"!=this.applicationtype&&"renew"!=this.applicationtype||this.cour.request_for.enable(),17==n&&"update"==this.applicationtype||"update"==this.applicationtype&&3==r?(this.nodocumentopload=!0,this.deleteicon=!1):(this.nodocumentopload=!1,this.deleteicon=!0),this.coursesavebtn=!1),2==t?this.getcoursedata():3==t&&this.getcustomcourse(),this.apptype="edit",this.appdoctype="edit",this.cour.cour_cate.enable(),this.cour.cour_level.enable(),this.appservice.getalldata(e,t).subscribe(a=>{if(this.referencepk=e,this.getsubcategoryarray(),this.coursecommandsts=a.data.course[0].appcdt_status,this.coursecommand=a.data.course[0].appcdt_appdeccomment,this.courseappon=a.data.course[0].appcdtappdecon,this.courseappby=a.data.course[0].oum_firstname,this.maincomment=a.data.course[0].appdt_appdeccomment,this.mainapprovdecon=a.data.course[0].appdtappdecon,this.getinternatinallist(this.page,0,null),this.getstaffgridlist(this.page,0,null),this.getintnatrecogmst(),this.awaredForm.controls.referencepk.setValue(e),200==a.status){if(this.standardTemplate="standardFroms",2==t){var n=a.data.course[0].appcdt_standardcoursemst_fk;16==a.data.course[0].scm_assessmentin&&(this.samecentrecourse=!0),1==a.data.course[0].scm_isintlreorgreq?this.intertabmanditoryornot=!0:this.intertabmanditoryornot=!1,this.appservice.getseccategory(a.data.course[0].appcdt_standardcoursemst_fk,t).subscribe(e=>{this.subcategory=e.data.subcategory})}else{n=a.data.course[0].appcdt_appoffercoursemain_fk;this.appservice.getseccategory(a.data.course[0].appocm_coursesubcategorymst_fk,t).subscribe(e=>{this.standorcustom="custom",this.subcategory=e.data.subcategory}),this.unitpk=a.data.course[0].appoffercoursemain_pk,this.appservice.getunit(a.data.course[0].appoffercoursemain_pk,10,0).subscribe(e=>{this.unit=e.data.unit,this.unitlength=e.data.total})}var r=a.data.course[0].appcdt_requestfor;this.appservice.getdocumentdata(this.referencepk,this.standardorcustomized,n,r).subscribe(e=>{this.docmst=e.data.docmst,this.mark.total_mst.setValue(e.data.total)}),this.getroleforcourse(this.referencepk,this.standardorcustomized,n,r),1==a.data.course[0].appiim_officetype?this.CourseForm.controls.bran_ch.disable():(this.offictypechange(2),"update"==this.applicationtype&&this.cour.bran_ch.disable()),this.getstaffsinfo(a.data.course[0].appcdt_appinstinfomain_fk),this.appinstinfomain_pk=a.data.course[0].appcdt_appinstinfomain_fk,setTimeout(()=>{this.CourseForm.patchValue({referencepk:e,office_type:Number(a.data.course[0].appiim_officetype),course_titleen:n,cour_level:"ltr"==this.dir?a.data.course[0].rm_name_en:a.data.course[0].rm_name_ar,cour_cate:"ltr"==this.dir?a.data.course[0].ccm_catname_en:a.data.course[0].ccm_catname_ar,request_for:a.data.course[0].appcdt_requestfor,cour_subcate:a.data.category,course_delivered:a.data.course[0].appcdt_deliverto,appcoursedtlstmp_pk:a.data.course[0].appcoursedtlstmp_pk,bran_ch:a.data.course[0].appcdt_appinstinfomain_fk}),this.disableSubmitButton=!1,"update"==this.applicationtype||"renew"==this.applicationtype?this.alltabsarefilled=!1:(this.tab3filled=!0,this.checkalltabsarefilled())},4e3),this.appcoursedtlstmppk=a.data.course[0].appcoursedtlstmp_pk,this.getstaffsubcategory()}}),this.scrollTo("pagescroll")}applyFilter(e,t){var a={serchkey:e,name:t};this.getfirstgrid(this.page,0,a)}applyFilterforinter(e,t){var a={serchkey:e,name:t};this.getinternatinallist(this.page,0,a)}applyFilterforstaff(e,t){var a={serchkey:e,name:t};this.getstaffgridlist(this.page,0,a)}seracheducation(e,t){var a={serchkey:e,name:t};this.getstaffedu(this.page,0,a,this.staffreferencepk)}serachwork(e,t){var a={serchkey:e,name:t};this.getstaffwork(this.page,0,a,this.staffreferencepk)}changeingmdtls(){}splitRoleFunction(e){return this.rolesubcategory=e.split(","),this.rolecategory_remove=e.split(","),this.rolecategory_remove.shift(),this.rolesubcategory[0]}splitCourseFunction(e){return this.coursesubcategory=e.split(","),this.category_remove=e.split(","),this.category_remove.shift(),this.coursesubcategory[0]}editstaffgrid(e,t){if(this.AddressFormArr.length>1){this.AddressFormArr.clear(),this.addReferral()}this.staffform=!0,this.ShowHide=!1,this.staffapptype=t,this.staffotherdetails=!0,this.newstaff=!1,this.staffcommand=e.appsit_appdeccomment,this.staffappon=e.appsit_appdecby,this.staffappby=e.oum_firstname,this.staffstatus=e.appsit_status,this.appostaffinfotmp_pk=e.appostaffinfotmp_pk,this.staffreferencepk=e.staffinforepo_pk,this.stateselect(e.sir_opalstatemst_fk),this.getstaffedu(this.page,0,null,e.staffinforepo_pk),this.getstaffwork(this.page,0,null,e.staffinforepo_pk),this.edu.staffrepopk.setValue(e.staffinforepo_pk),this.work.staffrepopk.setValue(e.staffinforepo_pk),this.saveandproceed=!1,null!=e.sir_dob&&"0000-00-00"!=e.sir_dob&&this.staffForm.controls.date_birth.setValue(e.sir_dob),this.staffForm.patchValue({civil_num:e.sir_idnumber,staffeng:e.sir_name_en,staffarab:e.sir_name_ar,email_id:e.sir_emailid,gend_er:e.sir_gender,national:e.sir_nationality,job_title:e.appsit_jobtitle,cont_type:e.appsit_contracttype,house:e.sir_addrline1,houseadd:e.sir_addrline2,state:e.sir_opalstatemst_fk,city:e.sir_opalcitymst_fk}),this.drvInputedmoheri.selectedFilesPk=[e.sir_moheridoc],this.appservice.getstaffdata(e.appostaffinfotmp_pk).subscribe(t=>{if(200==t.status){console.log("-------------"),console.log(this.rolemst_course),console.log(t.data.stafftmp.appsit_roleforcourse1);const a=t.data.stafftmp.appsit_roleforcourse1.filter(e=>this.rolemst_course.some(t=>t.rolemst_pk===e));if(this.courseselectForm.patchValue({moheri_upload:e.sir_moheridoc,rolefor_cour:a,select_coursubcate:t.data.stafftmp.appsit_appcoursetrnstmp_fk1,selectlanguage:t.data.stafftmp.appsit_language1}),this.coureserolecheck(t.data.stafftmp.appsit_roleforcourse1),this.staffForm.patchValue({role:t.data.stafftmp.appsit_mainrole1}),t.data.staffloc.forEach((e,t)=>{this.sample1(t,e.aslt_opalstatemst_fk)}),0!=t.data.staffloc.length){const e=this.addressForm.controls.Address;for(;0!==e.length;)e.removeAt(0);t.data.staffloc.forEach(e=>{if(t=[],1==e.aslt_opalcitymst.length)t=e.aslt_opalcitymst;else var t=e.aslt_opalcitymst_fk.split(",");this.AddressFormArr.push(this.formBuilder.group({governate:e.aslt_opalstatemst_fk.toString(),wilayat:[t,""]}))})}t.data.staffschedule&&this.loadScheduleData(t.data.staffschedule)}}),"view"==this.staffapptype?(this.deleteicon=!1,this.staffForm.controls.civil_num.disable(),this.staffForm.controls.staffeng.disable(),this.staffForm.controls.staffarab.disable(),this.staffForm.controls.staffeng.disable(),this.staffForm.controls.email_id.disable(),this.staffForm.controls.date_birth.disable(),this.staffForm.controls.age.disable(),this.staffForm.controls.gend_er.disable(),this.staffForm.controls.gender_address.disable(),this.staffForm.controls.role.disable(),this.staffForm.controls.job_title.disable(),this.staffForm.controls.national.disable(),this.staffForm.controls.cont_type.disable(),this.staffForm.controls.house.disable(),this.staffForm.controls.houseadd.disable(),this.staffForm.controls.state.disable(),this.staffForm.controls.city.disable(),this.courseselectForm.controls.moheri_upload.disable(),this.courseselectForm.controls.rolefor_cour.disable(),this.courseselectForm.controls.select_coursubcate.disable(),this.courseselectForm.controls.selectlanguage.disable(),this.vievalue=!0,this.addressForm.disable()):(this.deleteicon=!0,this.staffForm.controls.civil_num.disable(),this.staffForm.controls.staffeng.disable(),this.staffForm.controls.staffarab.enable(),this.staffForm.controls.email_id.enable(),this.staffForm.controls.date_birth.enable(),this.staffForm.controls.age.enable(),this.staffForm.controls.gend_er.enable(),this.staffForm.controls.gender_address.enable(),this.staffForm.controls.role.enable(),this.staffForm.controls.job_title.enable(),this.staffForm.controls.national.enable(),this.staffForm.controls.cont_type.enable(),this.staffForm.controls.house.enable(),this.staffForm.controls.houseadd.enable(),this.staffForm.controls.state.enable(),this.staffForm.controls.city.enable(),this.courseselectForm.controls.moheri_upload.enable(),17==this.applicationstatus||(this.courseselectForm.controls.rolefor_cour.enable(),this.courseselectForm.controls.select_coursubcate.enable(),this.courseselectForm.controls.selectlanguage.enable()),this.courseselectForm.controls.rolefor_cour.enable(),this.courseselectForm.controls.select_coursubcate.enable(),this.courseselectForm.controls.selectlanguage.enable(),this.addressForm.enable(),this.vievalue=!1),this.scrollTo("pagescroll"),this.uploadfiles=!1}deletestaffgrid(e){k()({title:this.i18n("maincenter.doyouwantgrid"),text:"",icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(t=>{t&&this.appservice.deletestaffgrid(e).subscribe(e=>{200==e.status&&(this.getstaffgridlist(this.page,0,null),this.checkstaffconfiguration(),this.toastr.success(this.i18n("maincenter.satffdele"),""),this.scrollTo("pagescroll"))})})}deletestaffedu(e){k()({title:this.i18n("maincenter.doyouwantgrid"),text:"",icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(t=>{t&&this.appservice.deletestaffedu(e).subscribe(e=>{200==e.status&&(this.getstaffedu(this.page,0,null,this.staffreferencepk),this.toastr.success(this.i18n("maincenter.educqual"),""),this.scrollTo("pagescroll"))})})}deletestaffwork(e){k()({title:this.i18n("maincenter.doyouwantgrid"),text:"",icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(t=>{t&&this.appservice.deletestaffwork(e).subscribe(e=>{200==e.status&&(this.getstaffwork(this.page,0,null,this.staffreferencepk),this.toastr.success(this.i18n("maincenter.workexpeir"),""),this.scrollTo("pagescroll"))})})}opencertificate(e){this.disableSubmitButton=!0,window.open(T.a.baseUrl+e,"_blank"),setTimeout(()=>{this.disableSubmitButton=!1},2e3)}cancelstaffedu(){this.educationForm.controls.institute_name.reset(),this.educationForm.controls.degree_cert.reset(),this.educationForm.controls.GradeDate.reset(),this.educationForm.controls.gpa_grade.reset(),this.educationForm.controls.edut_level.reset(),this.staffeduapptype="new",this.educationForm.controls.education_files.reset(),this.educationInput.selectedFilesPk=[],this.educationformshow=!1,this.scrollTo("editformeducation"),this.uploadedufiles=!1}editstaffedu(e,t){this.staffeduapptype=t,this.educationformshow=!0,this.educationformshow=!0,this.staffreferencepk=e.sacd_staffinforepo_fk,this.ctrychoose(e.sacd_opalcountrymst_fk),this.stateselect(e.sacd_opalstatemst_fk),e.yearpass&&this.educationForm.controls.GradeDate.setValue(e.sacd_enddate),this.educationForm.patchValue({year_join:e.sacd_startdate,year_pass:e.sacd_enddate,institute_name:e.institute,institue_country:e.sacd_opalcountrymst_fk,inst_state:e.sacd_opalstatemst_fk,inst_city:e.sacd_opalcitymst_fk,edut_level:e.sacd_edulevel,degree_cert:e.degree,gpa_grade:e.grade,education_files:e.memcompfiledtls_pk,staffacademics_pk:e.staffacademics_pk,staffrepopk:e.sacd_staffinforepo_fk}),this.educationInput.selectedFilesPk=[e.memcompfiledtls_pk],"view"==this.staffeduapptype?this.educationForm.disable():this.educationForm.enable(),this.scrollTo("editformeducation")}editstaffwork(e,t){this.staffworkapptype=t,this.workexpformshow=!0,this.workexpformshow=!0,this.staffreferencepk=e.sexp_staffinforepo_fk,this.ctrychoose(e.sexp_opalcountrymst_fk),this.stateselect(e.sexp_opalstatemst_fk),this.scrollTo("editdata"),1==e.sexp_currentlyworking?(this.staffworkexperienceForm.controls.curr_work.setValue(1),this.staffworkexperienceForm.controls.workdate.reset(),this.staffworkexperienceForm.controls.workdate.setValidators(null)):this.worktilldate=e.sexp_eod,this.staffworkexperienceForm.patchValue({oragn_name:e.organname,date_join:e.sexp_doj,employ_country:e.sexp_opalcountrymst_fk,employ_state:e.sexp_opalstatemst_fk,employ_city:e.sexp_opalcitymst_fk,designat:e.sexp_designation,work_files:e.sexp_profdocupload,staffworkexp_pk:e.staffworkexp_pk,staffrepopk:e.sexp_staffinforepo_fk}),this.workInput.selectedFilesPk=[e.memcompfiledtls_pk],"view"==this.staffworkapptype?this.staffworkexperienceForm.disable():this.staffworkexperienceForm.enable()}previnst(){this.mattab=0,this.scrollTo("pagescroll")}nextOperate(){this.mattab=2,this.scrollTo("pagescroll")}prevoperat(){this.mattab=1,this.scrollTo("pagescroll")}showHidecourse(){this.courses=!0,this.ShowHide=!1,this.scrollTo("pagescroll")}courseAdd(){this.CourseForm.valid?(this.disableSubmitButton=!0,this.appservice.addcourse(this.CourseForm.value,this.apptype).subscribe(e=>{200==e.status?(this.checkstaffconfiguration(),this.getroleforcourse(this.referencepk,this.standardorcustomized,"",""),this.disableSubmitButton=!1,this.getsubcategoryarray(),this.checkalltabsarefilled(),"new"==this.apptype?this.toastr.success(this.i18n("maincenter.couradde"),""):"yes"!=e.data.staffmap&&this.toastr.success(this.i18n("maincenter.courupdat"),""),this.appcoursedtlstmppk=e.data.appcoursedtlstmp_pk,this.CourseForm.controls.appcoursedtlstmp_pk.setValue(e.data.appcoursedtlstmp_pk),this.getstaffsubcategory()):this.disableSubmitButton=!1,this.mattab=1,this.scrollTo("pagescroll"),"yes"==e.data.staffmap&&(k()({title:this.i18n("Please remove the Staff members from their respective Course Sub-Categories to exclude the Sub-Categories from the Course section."),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),this.mattab=0,this.appservice.getalldata(this.referencepk,this.standardorcustomized).subscribe(e=>{this.CourseForm.patchValue({cour_subcate:e.data.category})}))})):this.focusInvalidInput(this.CourseForm)}stateselect(e){this.appservice.getcitymst(e).subscribe(e=>{200==e.status&&(this.citymst=e.data.citymst)})}removevalidator(){this.addressForm.get("Address").controls.forEach(e=>{const t=e.get("governate"),a=e.get("wilayat");t.clearValidators(),a.clearValidators(),t.updateValueAndValidity(),a.updateValueAndValidity()})}addvaildaors(){const e=this.addressForm.get("Address");o.x.required,o.x.required;e.controls.forEach(e=>{const t=e.get("governate"),a=e.get("wilayat");t.setValidators(o.x.required),a.setValidators(o.x.required),t.updateValueAndValidity(),a.updateValueAndValidity()})}coureserolecheck(e){2==this.standardorcustomized&&e.includes("13")&&0==this.samecentrecourse?(this.accessoravilabe=!0,this.addvaildaors()):(this.accessoravilabe=!1,this.removevalidator())}checkalltabsarefilled(){this.intertabmanditoryornot?0!=this.secondaryLength&&0!=this.thirdLength&&this.tab3filled&&(this.alltabsarefilled=!1):0!=this.thirdLength&&this.tab3filled&&(this.alltabsarefilled=!1)}nextstaff(){this.mattab=2,this.scrollTo("pagescroll")}canclstaff(){this.staffForm.touched||this.courseselectForm.touched?"new"==this.staffapptype?k()({title:this.i18n("maincenter.doyouwantdelestaffupdate"),text:this.i18n("maincenter.doyouwantnote"),icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.mattab=3,this.staffform=!1,this.ShowHide=!0,this.scrollTo("pagescroll"),this.workexpformshow=!1,this.educationformshow=!1,this.staffForm.reset(),this.educationForm.reset(),this.staffworkexperienceForm.reset(),this.addressForm.reset(),this.courseselectForm.reset(),setTimeout(()=>{this.disableSubmitButton=!1},2e3))}):k()({title:this.i18n("maincenter.doyouwantdelestaffadd"),text:this.i18n("maincenter.doyouwantnote"),icon:"warning",className:"ltr"==this.dir?"swalEng":"swalAr",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.mattab=3,this.staffform=!1,this.ShowHide=!0,this.scrollTo("pagescroll"),this.workexpformshow=!1,this.educationformshow=!1,this.staffForm.reset(),this.educationForm.reset(),this.staffworkexperienceForm.reset(),this.addressForm.reset(),this.courseselectForm.reset(),setTimeout(()=>{this.disableSubmitButton=!1},2e3))}):(this.disableSubmitButton=!0,this.mattab=3,this.staffform=!1,this.ShowHide=!0,this.scrollTo("pagescroll"),this.workexpformshow=!1,this.educationformshow=!1,this.staffForm.reset(),this.educationForm.reset(),this.staffworkexperienceForm.reset(),this.addressForm.reset(),this.courseselectForm.reset(),setTimeout(()=>{this.disableSubmitButton=!1},2e3))}getsubcategoryarray(){this.appservice.getsubactegoryarray(this.referencepk,this.standardorcustomized).subscribe(e=>{this.subcatarr=e.data.subcatarr,this.standardcoursepk=e.data.couresepk})}checkstaffconfiguration(){this.appservice.staffconfigurationcheck(this.referencepk,this.standardorcustomized).subscribe(e=>{this.staffconfigstatus=e.data.status,this.staffconfigmsg_ar=e.data.msg_ar,this.staffconfigmsg_en=e.data.msg_en})}checkroleforcourese(){this.checkstaffconfiguration();var e=this.courseselectForm.controls.rolefor_cour.value,t=0,a=0,n=0,r=0;return e.includes("12")&&(t=1),e.includes("13")&&(a=1),e.includes("14")&&(n=1),e.includes("15")&&(r=1),{tut:t,acc:a,pro:n,stud:r}}staffAdd(){var e=this.checkroleforcourese();if(console.log(e),console.log("staffform",this.staffForm.valid),console.log("courseform",this.courseselectForm.valid),console.log("addressform",this.addressForm.valid),this.uploadfiles=!0,this.staffForm.valid&&this.courseselectForm.valid&&this.addressForm.valid){if(2==this.standardcoursepk||3==this.standardcoursepk||3==this.standardorcustomized){if(1==e.tut&&0==e.stud&&0==e.pro&&0==e.acc)return k()({title:this.i18n("Should not allow to add staff in trainer role alone"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),!1;if(0==e.tut&&0==e.stud&&0==e.pro&&1==e.acc)return k()({title:this.i18n("Should not allow to add staff in assessor role alone"),text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}),!1}let a=this.staffForm.value;a.date_birth=F()(a.date_birth).format("YYYY-MM-DD").toString();var t={repo:a,addressform:this.addressForm.value,selectslotForm:this.selectslotForm.value,userform:this.userForm.value,courseselectForm:this.courseselectForm.value,calenderdata:this.batchtraningdata_data,referencek:this.referencepk,staffrepopk:this.staffreferencepk,courseform:this.CourseForm.value,appostaffinfotmp_pk:this.appostaffinfotmp_pk,applicationtype:this.applicationtype,branchpk:this.appinstinfomain_pk};this.disableSubmitButton=!0,this.appservice.stafffinalsave(t,this.staffapptype).subscribe(e=>{this.disableSubmitButton=!1,200==e.status&&(this.checkalltabsarefilled(),this.getstaffgridlist(this.page,0,null)),this.checkstaffconfiguration()}),this.mattab=3,this.staffform=!1,this.ShowHide=!0,this.scrollTo("pagescroll"),this.staffForm.markAsPristine(),this.courseselectForm.markAsPristine(),this.addressForm.markAsPristine(),this.educationForm.markAsPristine(),this.staffworkexperienceForm.markAsPristine()}else this.staffForm.invalid?this.focusInvalidInput(this.staffForm):this.courseselectForm.invalid?this.focusInvalidInput(this.courseselectForm):this.selectslotForm.invalid?this.focusInvalidInput(this.selectslotForm):this.focusInvalidInput(this.addressForm)}showHidestaff(){if(this.AddressFormArr.length>1){this.AddressFormArr.clear(),this.addReferral()}this.staffapptype="new",this.staffform=!0,this.ShowHide=!1,this.newstaff=!0,this.staffstatus=0,this.scrollTo("pagescroll"),this.selectedOption1=!0,this.selectedOption2=!1,this.accessoravilabe=!1,this.drvInputedmoheri.selectedFilesPk=[],this.staffForm.reset(),this.educationForm.reset(),this.staffworkexperienceForm.reset(),this.addressForm.reset(),this.courseselectForm.reset(),this.workExperience=[],this.education=[],this.fourthLength=0,this.fifthLength=0,this.batchtraningdata_data=[],this.staffForm.controls.civil_num.enable(),this.staffForm.controls.staffeng.enable(),this.staffForm.controls.staffarab.enable(),this.staffForm.enable(),this.educationForm.enable(),this.staffworkexperienceForm.enable(),this.addressForm.enable(),this.deleteicon=!0,this.vievalue=!1,this.courseselectForm.enable(),this.ageShow=!0,this.gendershow=!0,this.staffForm.controls.count_ry.setValue("31"),this.uploadfiles=!1}prevcourse(){this.mattab=2,this.scrollTo("pagescroll")}finished(){if("notok"==this.staffconfigstatus)return k()({title:"",text:"",icon:"warning",buttons:[!1,this.i18n("uploadfile.ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1,content:{element:"div",attributes:{innerHTML:this.staffconfigmsg_en}}}),!1;k()({title:this.i18n("maincenter.doyousubmt"),icon:"success",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&(this.disableSubmitButton=!0,this.appservice.submitdesktoreview(this.referencepk,this.apptype,this.applicationtype).subscribe(e=>{200==e.status&&(this.getfirstgrid(this.page,0,null),this.standardTemplate="course")}),setTimeout(()=>{this.disableSubmitButton=!1},2e3),this.standorcustom,this.toastr.success(this.i18n("Course Certification Form Submitted Successfully."),""))}),this.scrollTo("pagescroll")}makepayment(e,t,a,n,r){this.disableSubmitButton=!0;console.log("encrypt data",t,a,n,e),"renew"==this.applicationtype?this.myRoute.navigate(["standardcourse/home"],{queryParams:{p:this.secuirty.encrypt(t),t:this.secuirty.encrypt(a),s:this.secuirty.encrypt(n),at:this.secuirty.encrypt(e),bc:"spym",f:"sc",nwrn:"rnj"}}):"update"==this.applicationtype?this.myRoute.navigate(["standardcourse/home"],{queryParams:{p:this.secuirty.encrypt(t),t:this.secuirty.encrypt(a),s:this.secuirty.encrypt(n),at:this.secuirty.encrypt(e),bc:"spym",f:"sc",nwrn:"upd"}}):this.myRoute.navigate(["standardcourse/home"],{queryParams:{p:this.secuirty.encrypt(t),t:this.secuirty.encrypt(a),s:this.secuirty.encrypt(n),at:this.secuirty.encrypt(e),bc:"spym",f:"sc"}}),this.maindata}canc(){k()({title:this.i18n("Do you want back to main centre"),text:" ",icon:"warning",buttons:["No","Yes"],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(()=>{this.standardTemplate="MainCentre",this.scrollTo("pagescroll")})}scrollTo(e){try{const t=document.querySelectorAll("."+e);t[0].scrollIntoView({behavior:"smooth"})}catch(t){console.log("page-content")}}opendialogquicksetup(){this.dialog.open(B,{disableClose:!0,panelClass:"quicksetuplist"}).afterClosed().subscribe(e=>{})}checkData(e,t){64==e?this.avaliabledate=!1:30==e?this.weekend:31==e&&this.holiday,this.batchtraningdata_data[t].schedule=e}dateFltrChange(e){if(this.dateFilterSt="",this.dateFilterEd="",this.daterange.value){let e=new Date(F()(this.daterange.value.startDate).format("YYYY-MM-DD")),t=new Date(F()(this.daterange.value.endDate).format("YYYY-MM-DD"));this.batchtrainingdata=new w.b([]),this.batchtraningdata_data=[],this.getDateArray(e,t)}}getDateArray(e,t){const a=[],n=new Date(e);for(;n<=t;)a.push(new Date(n)),n.setDate(n.getDate()+1);for(const r of a){const e=r.getFullYear(),t=r.getMonth()+1,a=r.getDate(),n=r;let s={date:e+"-"+t+"-"+a,day:r.toLocaleDateString("en-US",{weekday:"long"}),selecteddate:r.toLocaleDateString("en-US",{weekday:"short"})+" "+F()(n).format("DD-MM-YYYY"),schedule:1,subarr:[]};this.batchtraningdata_data.push(s)}this.batchtrainingdata=new w.b(this.batchtraningdata_data),this.selectslotForm.controls.days.setValue(this.batchtraningdata_data.length),this.sixLength=this.batchtraningdata_data.length,this.getSelectedDayArray()}getSelectedDayArray(){const e=[];for(const t of this.days2)for(const a of this.batchtraningdata_data)if(a.day==t){const t={startDateTime:a.date+"T"+this.startTime,endDateTime:a.date+"T"+this.endTime,day:a.day};e.push(t)}}updateTime(e,t,a,n){1==a?(this.batchtraningdata_data[e].subarr[t].sstarttime=new Date(n).getHours()+":"+new Date(n).getMinutes(),this.batchtraningdata_data[e].subarr[t].sstarttimeZone=n):(this.batchtraningdata_data[e].subarr[t].sendtime=new Date(n).getHours()+":"+new Date(n).getMinutes(),this.batchtraningdata_data[e].subarr[t].sendtimeZone=n),this.calculateTimeDifference(e,t)}addPhone(e){const t=this.batchtrainingdata.data;t[e].subarr.push({sstarttime:null,sstarttimeZone:null,sendtime:null,sendtimeZone:null}),setTimeout(()=>{this.batchtrainingdata=new w.b(t)},1e3)}removePhone(e,t){const a=this.batchtrainingdata.data;a[t].subarr.splice(e,1),this.batchtrainingdata=new w.b(a)}get lessons(){return this.selectslotForm.controls.lessons}rowClear(e){const t=this.batchtrainingdata.data;var a=t[e];a.subarr=[],a.schedule=null,this.batchtrainingdata=new w.b(t)}addLesson(e,t){this.selectslotForm.get("lessons").at(e).get("title").setValue(t.value)}deleteLesson(e){this.lessons.removeAt(e)}get AddressFormArr(){return this.addressForm.get("Address")}getReferralsFormArr(e){return this.AddressFormArr.controls[e]}createCountry(){return this.formBuilder.group({governate:["",o.x.required],wilayat:["",o.x.required]})}addReferral(){this.AddressFormArr.push(this.createCountry())}removeReferral(e){this.AddressFormArr.removeAt(e),this.citylist.splice(e,1)}fileeSelectedmoheri(e,t){console.log(e),console.log(t),t.selectedFilesPk=e,this.courseselectForm.controls.moheri_upload.setValue(e[e.length-1])}fileeSelected(e,t){console.log(e),console.log(t),this.awaredForm.controls.document_upload.setValue(e[0]),t.selectedFilesPk=[]}fileeSelected1(e,t,a){var n=e[e.length-1],r="file_"+a;this.documentForm.controls[r].setValue(n)}fileeSelectededucate(e,t){this.educationForm.controls.education_files.setValue(e[0]),t.selectedFilesPk=[]}fileeSelectwork(e,t){this.staffworkexperienceForm.controls.work_files.setValue(e[0]),t.selectedFilesPk=[]}getPhonesFormControls(){return this.userForm.get("phones").controls}loadScheduleData(e){const t=Object.keys(e),a=e[0].selecteddate,n=e[t.length-1].selecteddate;let r=new Date(F()(a).format("YYYY-MM-DD")),s=new Date(F()(n).format("YYYY-MM-DD"));this.daterange.patchValue({startDate:r,endDate:s}),this.selectslotForm.controls.days.setValue(e.length),this.batchtrainingdata=new w.b(e),setTimeout(()=>{if(this.dataSelect){let t=this.dataSelect.toArray();e.forEach((e,a)=>{this.optionSelect[a]=e.schedule,t[a].options._results.forEach((n,r)=>{t[a].options._results[r].value==e.schedule&&(t[a].options._results[r]._selected=!0,t[a].options._results[r]._active=!0)})}),console.log(t)}},3e3)}calculateTimeDifference(e,t){var a=this.batchtraningdata_data[e].subarr[t].sendtime,n=this.batchtraningdata_data[e].subarr[t].sstarttime;if(null!=a&&null!=n){document.getElementById("difference"+e+t).innerHTML="00:00";const i=n.split(":"),o=a.split(":");var r=new Date;r.setHours(parseInt(i[0],10)),r.setMinutes(parseInt(i[1],10));var s=new Date;s.setHours(parseInt(o[0],10)),s.setMinutes(parseInt(o[1],10));var l=s.getTime()-r.getTime();const c=Math.floor(l/36e5),d=Math.floor(l%36e5/6e4);return document.getElementById("difference"+e+t).innerHTML=`${c}:${d}`,!1}}cityselect(e){31==e?this.oman=!0:(e=31)&&(this.oman=!1)}cityselecttwo(e){31==e?this.nonoman=!0:31!=e&&(this.nonoman=!1)}ctrychoose(e){this.appservice.getstatemst(e).subscribe(e=>{200==e.status&&(this.state=e.data.state)})}dateSelected(e){e.value&&(this.isCheckboxDisabled=!0,this.cleardate=!0,this.worktilled=!0)}clearDate(){this.staffworkexperienceForm.controls.workdate.reset(),this.isCheckboxDisabled=!1,this.cleardate=!1}onCheckboxChange(e){e.checked?(this.notallowed=!0,this.staffworkexperienceForm.controls.workdate.reset(),this.staffworkexperienceForm.controls.workdate.setErrors(null),this.worktilled=!1):(this.staffworkexperienceForm.controls.workdate.setErrors({incorrect:!0}),this.worktilled=!0,this.notallowed=!1)}onCheckboxChange1(e){e?(this.notallowed=!0,this.staffworkexperienceForm.controls.workdate.reset(),this.staffworkexperienceForm.controls.workdate.setErrors(null),this.worktilled=!1):(this.staffworkexperienceForm.controls.workdate.setErrors({incorrect:!0}),this.worktilled=!0,this.notallowed=!1)}toggleExpansion(){this.expandedElement=!this.expandedElement}Filterinternational(){this.Awarding.setValue(""),this.LastAudited.setValue(""),this.Status.setValue(""),this.Addedon.setValue(""),this.LastUpdated.setValue(""),this.getinternatinallist(this.page,0,null)}clearFiltersecound(){this.appl_form.touched||this.officetype.touched||this.bran_name.touched||this.coures_type.touched||this.course_titles.touched||this.course_cat.touched||this.requested.touched||this.courdeliver.touched||this.date_expiry.touched||this.appl_status.touched||this.cert.touched||this.addedon_branch.touched||this.lastUpdated_branch.touched?(this.appl_form.reset(),this.officetype.reset(),this.bran_name.reset(),this.coures_type.reset(),this.course_titles.reset(),this.course_cat.reset(),this.requested.reset(),this.courdeliver.reset(),this.date_expiry.reset(),this.appl_status.reset(),this.cert.reset(),this.addedon_branch.reset(),this.lastUpdated_branch.reset(),this.getfirstgrid(this.page,0,null)):this.getfirstgrid(this.page,0,null)}clearFilterfour(){this.civil_numb.setValue(""),this.staff_name.setValue(""),this.role_course.setValue(""),this.cours_sub_cate.setValue(""),this.StatusCour.setValue(""),this.adddoncour.setValue(""),this.LastUpdatedcour.setValue(""),this.getstaffgridlist(this.paginator2.pageSize,0,null)}clearFiltereducation(){this.institute.setValue(""),this.degree.setValue(""),this.year_join.setValue(""),this.year_pass.setValue(""),this.grade.setValue(""),this.add_On.setValue(""),this.Last_Date.setValue(""),this.getstaffedu(this.page,0,null,this.staffreferencepk)}clearFilterework(){this.oranisation.setValue(""),this.date_joined.setValue(""),this.work_till.setValue(""),this.count.setValue(""),this.gover.setValue(""),this.wilaya.setValue(""),this.designation.setValue(""),this.add_edOn.setValue(""),this.add_On.setValue(""),this.date_last.setValue(""),this.getstaffwork(this.page,0,null,this.staffreferencepk)}onchangecount(){this.staffForm.controls.count_ry.enable(),this.staffForm.controls.count_ry.setValue("31"),this.staffForm.controls.count_ry.disable()}nexttab(){this.mattab=1}gotostaff(){this.mattab=3}canclework(){this.staffworkexperienceForm.controls.oragn_name.reset(),this.staffworkexperienceForm.controls.workdate.reset(),this.staffworkexperienceForm.controls.designat.reset(),this.staffworkexperienceForm.controls.date_join.reset(),this.staffworkexperienceForm.controls.curr_work.reset(),this.staffworkexperienceForm.controls.employ_country.reset(),this.staffworkexperienceForm.controls.employ_state.reset(),this.staffworkexperienceForm.controls.employ_city.reset(),this.staffworkapptype="new",this.workexpformshow=!1,this.scrollTo("editdata"),this.workInput.selectedFilesPk=[]}oncHeckenable(e){e.checked?this.finalsubmitbtn=!1:this.finalsubmitbtn=!0}accessorschedule(e){this.secuirty.encrypt(e);this.accessordata=e,this.standardTemplate="showassessor"}documentpre(){this.standardTemplate="standardFroms",this.mattab=3,this.scrollTo("pagescroll")}doneDate(){this.standardTemplate="standardFroms",this.mattab=3}JoinList(e){return e.join("\n")}toggle(e){this.isopen[e]=!this.isopen[e]}};H.ctorParameters=()=>[{type:o.e},{type:r.v},{type:c.c},{type:d.a},{type:u.a},{type:m.a},{type:I.a},{type:y.a},{type:D.b},{type:S.a},{type:L.a},{type:l.g},{type:S.a},{type:z.a},{type:O.b},{type:l.a}],Object(n.c)([Object(r.mb)("staffWorkExperienceFormReset"),Object(n.e)("design:type",o.i)],H.prototype,"staffWorkExperienceFormReset",void 0),Object(n.c)([Object(r.H)(),Object(n.e)("design:type",Object)],H.prototype,"tog",void 0),Object(n.c)([Object(r.mb)("formFocus"),Object(n.e)("design:type",r.v)],H.prototype,"scrollElement",void 0),Object(n.c)([Object(r.mb)("companylogo"),Object(n.e)("design:type",h.a)],H.prototype,"companylogoFilee",void 0),Object(n.c)([Object(r.mb)("Intrecog"),Object(n.e)("design:type",h.a)],H.prototype,"Intrecog",void 0),Object(n.c)([Object(r.mb)("MatTabGroup"),Object(n.e)("design:type",x.a)],H.prototype,"tabGroup",void 0),Object(n.c)([Object(r.mb)("paginator"),Object(n.e)("design:type",g.a)],H.prototype,"paginator",void 0),Object(n.c)([Object(r.mb)("paginator"),Object(n.e)("design:type",g.a)],H.prototype,"paginator1",void 0),Object(n.c)([Object(r.mb)("paginatorthird"),Object(n.e)("design:type",g.a)],H.prototype,"paginator2",void 0),Object(n.c)([Object(r.mb)("paginatorfourth"),Object(n.e)("design:type",g.a)],H.prototype,"paginator3",void 0),Object(n.c)([Object(r.mb)("paginatorfifth"),Object(n.e)("design:type",g.a)],H.prototype,"paginator4",void 0),Object(n.c)([Object(r.mb)("paginator"),Object(n.e)("design:type",g.a)],H.prototype,"paginator5",void 0),Object(n.c)([Object(r.mb)(v.a),Object(n.e)("design:type",v.a)],H.prototype,"sort",void 0),Object(n.c)([Object(r.mb)("sortstaffgrid"),Object(n.e)("design:type",Object)],H.prototype,"sortstaffgrid",void 0),Object(n.c)([Object(r.mb)("sortworkgrid"),Object(n.e)("design:type",Object)],H.prototype,"sortworkgrid",void 0),Object(n.c)([Object(r.H)(),Object(n.e)("design:type",Number)],H.prototype,"mattab",void 0),Object(n.c)([Object(r.T)(),Object(n.e)("design:type",Object)],H.prototype,"maindata",void 0),Object(n.c)([Object(r.mb)("breadactive"),Object(n.e)("design:type",r.v)],H.prototype,"breadactiveref",void 0),Object(n.c)([Object(r.mb)(w.a),Object(n.e)("design:type",w.a)],H.prototype,"table",void 0),Object(n.c)([Object(r.mb)(w.a),Object(n.e)("design:type",w.a)],H.prototype,"mtable",void 0),Object(n.c)([Object(r.nb)("dataSelect"),Object(n.e)("design:type",r.Y)],H.prototype,"dataSelect",void 0),Object(n.c)([Object(r.T)(),Object(n.e)("design:type",Object)],H.prototype,"onDataSent",void 0),H=Object(n.c)([Object(r.n)({selector:"app-standardcourses",template:Object(n.d)(a("cp5n")).default,encapsulation:r.pb.None,providers:[{provide:p.c,useClass:A.b},{provide:p.e,useValue:A.a}],animations:[Object(q.p)("fadeInOut",[Object(q.m)("void",Object(q.n)({height:"0",opacity:0})),Object(q.m)("*",Object(q.n)({height:"*",opacity:1})),Object(q.o)(":enter",Object(q.e)("300ms ease-out")),Object(q.o)(":leave",Object(q.e)("300ms ease-in"))])],styles:[Object(n.d)(a("TUc7")).default]}),Object(n.e)("design:paramtypes",[o.e,r.v,c.c,d.a,u.a,m.a,I.a,y.a,D.b,S.a,L.a,l.g,S.a,z.a,O.b,l.a])],H);const M=[{position:1}];let B=class{constructor(e,t,a,n,r,s,l,i){this.translate=e,this.cookieService=t,this.dialogRef=a,this.remoteService=n,this.appservice=r,this.el=s,this.fb=l,this.data=i,this.quicksetupdatalist=new w.b(M),this.quicksetupcolumn=["days","sunday","monday","tuesday","wednesday","thursday","friday","saturday"],this.dir="ltr",this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}]}get cour(){return this.batchform.controls}ngOnInit(){if(this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){const e=this.languagelist.find(e=>e.id===this.cookieService.get("languageCookieId"));this.translate.setDefaultLang(e.languagecode),this.dir=e.dir}else{const e=this.languagelist.find(e=>"1"==e.id);this.translate.setDefaultLang(e.languagecode),this.dir=e.dir}this.remoteService.getLanguageCookie().subscribe(e=>{if(this.translate.setDefaultLang(this.cookieService.get("languageCode")),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){const e=this.languagelist.find(e=>e.id===this.cookieService.get("languageCookieId"));this.translate.setDefaultLang(e.languagecode),this.dir=e.dir}else{const e=this.languagelist.find(e=>"1"==e.id);this.translate.setDefaultLang(e.languagecode),this.dir=e.dir}}),this.batchform=this.fb.group({starttime:["",o.x.required],endtime:["",o.x.required]})}closedialog(){this.dialogRef.close()}};B.ctorParameters=()=>[{type:c.c},{type:m.a},{type:D.f},{type:d.a},{type:I.a},{type:r.v},{type:o.e},{type:void 0,decorators:[{type:r.D,args:[D.a]}]}],Object(n.c)([Object(r.mb)("scroll",{read:r.v}),Object(n.e)("design:type",r.v)],B.prototype,"scroll",void 0),B=Object(n.c)([Object(r.n)({selector:"modalavailabledate",template:Object(n.d)(a("UOFF")).default,encapsulation:r.pb.None,styles:[Object(n.d)(a("rqDj")).default]}),Object(n.f)(7,Object(r.D)(D.a)),Object(n.e)("design:paramtypes",[c.c,m.a,D.f,d.a,I.a,r.v,o.e,Object])],B);var P=a("ZTz/");let E=class{constructor(e,t,a,n,s,l,i,c,d,m){this.formBuilder=e,this.el=t,this.translate=a,this.remoteService=n,this.cookieService=s,this.appservice=l,this.secuirty=i,this.toastr=c,this.routeid=d,this.router=m,this.griddata=[],this.TrainingDate=["date","time","status","action"],this.filtername="Hide Filter",this.today=new Date,this.updated=!0,this.page=10,this.reqformst=[],this.cancle=new r.y,this.subdate=new r.y,this.minTime=new Date,this.maxTime=new Date,this.minAfterTime=new Date,this.maxAfterTime=new Date,this.minselectTime=new Date,this.disableSubmitButton=!1,this.locale={format:"DD-MM-YYYY"},this.ranges={Today:[F()(),F()()],Yesterday:[F()().subtract(1,"days"),F()().subtract(1,"days")],"Last 7 Days":[F()().subtract(6,"days"),F()()],"Last 30 Days":[F()().subtract(29,"days"),F()()],"This Month":[F()().startOf("month"),F()().endOf("month")],"Last Month":[F()().subtract(1,"month").startOf("month"),F()().subtract(1,"month").endOf("month")]},this.ifarbic=!1,this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr",this.addeddate=new o.f(""),this.status=new o.f(""),this.minTime.setHours(6,0,0),this.maxTime.setHours(12,0,0),this.minAfterTime.setHours(12,0,0),this.maxAfterTime.setHours(18,0,0),this.minselectTime.setHours(6,0,0),this.minDate=F()()}set accessordata(e){this.pk=e,null!=this.pk&&this.getaccessorscheduledtls(10,0,null)}get accessordata(){return this.pk}i18n(e){return this.translate.instant(e)}ngOnInit(){if(this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){const e=this.languagelist.find(e=>e.id===this.cookieService.get("languageCookieId"));this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,"en"==e.languagecode?this.filtername="Hide Filter":this.filtername="\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0635\u0641\u064a\u0629"}else{const e=this.languagelist.find(e=>"1"==e.id);this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,this.filtername="Hide Filter"}this.cookieService.get("languageCode")&&"ar"==this.cookieService.get("languageCode")?this.ifarbic=!0:this.ifarbic=!1,this.remoteService.getLanguageCookie().subscribe(e=>{if(this.translate.setDefaultLang(this.cookieService.get("languageCode")),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){const e=this.languagelist.find(e=>e.id===this.cookieService.get("languageCookieId"));this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,"en"==e.languagecode?this.filtername="Hide Filter":this.filtername="\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0635\u0641\u064a\u0629"}else{const e=this.languagelist.find(e=>"1"==e.id);this.translate.setDefaultLang(e.languagecode),this.dir=e.dir,this.filtername="Hide Filter"}this.cookieService.get("languageCode")&&"ar"==this.cookieService.get("languageCode")?this.ifarbic=!0:this.ifarbic=!1}),this.FormValidate(),this.availabelDate.controls.startDate.valueChanges.subscribe(e=>{this.availabelDate.controls.EndDate.reset()})}updateTime(){}FormValidate(){this.availabelDate=this.formBuilder.group({selectedDate:["",o.x.required],startDate:["",o.x.required],EndDate:["",o.x.required]})}get form(){return this.availabelDate.controls}clear(){this.availabelDate.touched?k()({title:this.i18n("Do you want cancel add Assessor Availability?"),text:this.i18n("maincenter.doyouwantnote"),icon:"warning",buttons:[this.i18n("uploadfile.no"),this.i18n("uploadfile.yes")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then(e=>{e&&this.availabelDate.reset()}):this.availabelDate.reset()}clickEvent(){if(this.hidefilder=!this.hidefilder,this.hidefilder){this.filtername=this.i18n("table.hide");document.getElementById("searchrow").style.display="flex"}else{this.filtername=this.i18n("table.show");document.getElementById("searchrow").style.display="none"}}syncPrimaryPaginator(e){this.paginator.pageIndex=e.pageIndex,this.paginator.pageSize=e.pageSize,this.page=e.pageSize,this.getaccessorscheduledtls(this.paginator.pageSize,this.paginator.pageIndex,null)}getaccessorscheduledtls(e,t,a){this.tblplaceholder=!0,this.disableSubmitButton=!0,this.appservice.getaccessorscheduledtls(this.pk,e,t,a).subscribe(e=>{this.disableSubmitButton=!1,200==e.status&&(this.tblplaceholder=!1,this.staffinfodata=e.data.staffgrid,this.griddata=e.data.accessorlist,this.griddata.forEach(e=>{console.log("---------------"),console.log(e),this.griddata.date=new Date(e.date)}),this.TrainingtimeData=new w.b(this.griddata),this.resultsLength=e.data.totalcount,this.TrainingtimeData.sort=this.sort)})}clearFiltersecound(){this.addeddate.setValue(""),this.status.setValue(""),setTimeout(()=>{this.getaccessorscheduledtls(this.page,0,null)},2e3)}submitdata(){if("null"==this.availabelDate.controls.selectedDate.value.startDate||null==this.availabelDate.controls.selectedDate.value.startDate)return this.selectedDateInput.nativeElement.focus(),!1;if(this.availabelDate.valid){let e=this.availabelDate.value;e.EndDate=F()(e.EndDate).format("HH:mm:ss").toString(),e.startDate=F()(e.startDate).format("HH:mm:ss").toString(),e.selectedDate.startDate=F()(e.selectedDate.startDate).format("YYYY-MM-DD").toString(),e.selectedDate.endDate=F()(e.selectedDate.endDate).format("YYYY-MM-DD").toString(),this.disableSubmitButton=!0,this.appservice.saveaccessorscheduledtls(this.pk,e).subscribe(e=>{200==e.status&&("notavailable"==e.data?(this.disableSubmitButton=!1,k()({title:this.i18n("This Staff member is already booked for the selected date and time. Kindly select a different date and time."),text:"",icon:"warning",buttons:[!1,this.i18n("OK")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1})):(this.getaccessorscheduledtls(10,0,null),this.availabelDate.reset(),this.toastr.success(this.i18n("Successfully Added Assessor Availability"),"")),this.availabelFormRest.reset())})}else this.focusInvalidInput(this.availabelDate)}updateaccessorinfo(e,t){this.appservice.updateaccessorscheduledtls(e,t).subscribe(e=>{200==e.status&&(this.getaccessorscheduledtls(10,0,null),this.availabelDate.reset())})}applyFilter(e,t){var a={serchkey:e,name:t};this.select.close(),this.getaccessorscheduledtls(this.page,0,a)}navigatebatch(e,t){this.secuirty.encrypt(e);this.disableSubmitButton=!0,this.appservice.getbatchids(e,t).subscribe(e=>{if(200==e.status){var a=e.data.batchpk;this.router.navigate(["/batchindex/batchgridlisting"],{queryParams:{p:a,t:"fsgrid",d:t}})}})}focusInvalidInput(e){for(const t of Object.keys(e.controls))if(e.controls[t].invalid){const e=this.el.nativeElement.querySelector('[formcontrolname="'+t+'"]');console.log(t),e&&e.focus();break}}};E.ctorParameters=()=>[{type:o.e},{type:r.v},{type:c.c},{type:d.a},{type:m.a},{type:I.a},{type:S.a},{type:O.b},{type:l.a},{type:l.g}],Object(n.c)([Object(r.H)(),Object(n.e)("design:type",Object),Object(n.e)("design:paramtypes",[Object])],E.prototype,"accessordata",null),Object(n.c)([Object(r.mb)(P.a),Object(n.e)("design:type",P.a)],E.prototype,"select",void 0),Object(n.c)([Object(r.H)(),Object(n.e)("design:type",Object)],E.prototype,"applicationtype",void 0),Object(n.c)([Object(r.mb)("paginator"),Object(n.e)("design:type",g.a)],E.prototype,"paginator",void 0),Object(n.c)([Object(r.T)(),Object(n.e)("design:type",Object)],E.prototype,"cancle",void 0),Object(n.c)([Object(r.T)(),Object(n.e)("design:type",Object)],E.prototype,"subdate",void 0),Object(n.c)([Object(r.mb)("selectedDateInput",{static:!1}),Object(n.e)("design:type",r.v)],E.prototype,"selectedDateInput",void 0),Object(n.c)([Object(r.mb)(v.a),Object(n.e)("design:type",v.a)],E.prototype,"sort",void 0),Object(n.c)([Object(r.mb)("availabelFormRest"),Object(n.e)("design:type",o.i)],E.prototype,"availabelFormRest",void 0),E=Object(n.c)([Object(r.n)({selector:"app-assessor",template:Object(n.d)(a("osH6")).default,encapsulation:r.pb.None,providers:[{provide:p.c,useClass:A.b},{provide:p.e,useValue:A.a}],styles:[Object(n.d)(a("jzcy")).default]}),Object(n.e)("design:paramtypes",[o.e,r.v,c.c,d.a,m.a,I.a,S.a,O.b,l.a,l.g])],E);const N=[{path:"",children:[{path:"home",component:H,canActivate:[i.a],data:{title:"Standard & Customized Course Certification",urls:[{title:"Standard & Customized Course Certification",url:"/standardcourse/home"}]}},{path:"assessoravailability",component:E,canActivate:[i.a],data:{title:"Schedule Assessor Availability",urls:[{title:"Schedule Assessor Availability",url:"/standardcourse/assessoravailability"}]}}]}];let V=class{};V=Object(n.c)([Object(r.M)({imports:[l.i.forChild(N)],exports:[l.i]})],V);var R=a("AywS"),G=a("u9T3"),U=a("s+XH"),Y=a("vrAh"),W=a("Dxy4"),J=a("Ynp+"),Z=a("PDjf"),Q=a("pMoy"),K=a("f44v"),X=a("TN/R"),ee=a("o4Yh"),te=a("40+f"),ae=a("Tj54"),ne=a("e6WT"),re=a("SqCe"),se=a("rJgo"),le=a("BTe0"),ie=a("pu8Q"),oe=a("zQhy"),ce=a("q7Ft"),de=a("mPVK"),me=a("jMqV"),pe=a("zHaW"),fe=a("l0rg"),ue=a("ZFy/"),he=a("hzfI"),ge=a("IheW"),be=a("KMir"),xe=a("+uca"),ve=a("l00h"),we=a("Lyw/"),ye=a("nHpv"),_e=a("pk6O");function ke(e){return new ye.a(e,"./assets/i18n/standardcourse/",".json")}let Ce=class{};Ce=Object(n.c)([Object(r.M)({declarations:[H,B,E],imports:[s.c,V,x.b,G.a,R.a,U.a,G.a,o.u,o.k,Y.b,W.b,J.a,Z.a,Q.b,K.a,X.e,D.e,ee.a,te.a,ae.b,ne.c,re.a,se.a,p.m,g.c,le.b,ie.a,oe.a,p.u,P.b,ce.c,de.a,me.a,pe.c,v.b,w.c,x.b,fe.b,ue.b,he.a,ge.c,be.a,xe.a,ve.b,we.c,_e.a,c.b.forChild({loader:{provide:c.a,useFactory:ke,deps:[ge.b]}})],entryComponents:[B],exports:[B]})],Ce)},osH6:function(e,t,a){"use strict";a.r(t),t.default='<div id="assesorDate" fxLayoutAlign="center">\r\n    <app-responseloader *ngIf="disableSubmitButton"></app-responseloader>\r\n    \r\n        <div fxFlex="100">\r\n            <div class="knowledgegrid m-t-10 m-b-20" fxLayout="column">\r\n                <div class="details pd-15" fxFlex="100">\r\n                    <div class="head" fxLayout="row wrap">\r\n                        <h2 class="headcolor fs-18 m-0 lh-15">\r\n                            {{ifarbic == true ?(staffinfodata?.sir_name_ar):(staffinfodata?.sir_name_en)}}\r\n                        </h2>\r\n                    </div>\r\n                    <div class="m-t-10" fxLayout="row wrap">\r\n                        <p class="txt-gry m-0 fs-15 ">{{\'staff.roleofcourse\' | translate }}: <span\r\n                                class="txt-gry3">\r\n                                {{(ifarbic == true ?(staffinfodata.rm_rolename_ar+(staffinfodata?.rolecnt >= 1 ?\'(+\'+staffinfodata?.rolecnt+\')\':\'\')):(staffinfodata?.rm_rolename_en+(staffinfodata?.rolecnt >= 1 ?\'(+\'+staffinfodata?.rolecnt+\')\':\'\')))}}\r\n                            </span></p>\r\n                        <p class="txt-gry m-0 fs-15 m-l-10">{{\'staff.coursubcate\' | translate }}: <span class="txt-gry3">\r\n                            {{(ifarbic == true ?(staffinfodata.ccm_catname_ar+(staffinfodata?.subcat >= 1 ?\'(+\'+staffinfodata?.subcat+\')\':\'\')):(staffinfodata?.ccm_catname_en+(staffinfodata?.subcat >= 1 ?\'(+\'+staffinfodata?.subcat+\')\':\'\')))}}    \r\n                        </span></p>\r\n                    </div>\r\n                    <div class="fs-13 m-t-20 m-b-20" fxLayout="row wrap">\r\n                        <p class="application-detais m-r-10 txt-gry m-0">{{\'staff.civinumb\' | translate}}: <span\r\n                                class="txt-gry3">{{staffinfodata?.sir_idnumber}}</span>\r\n                        </p>\r\n                        <p class="application-detais m-r-10 txt-gry m-0">{{\'staff.stat\' | translate}}:\r\n                            <span *ngIf="staffinfodata?.appsit_status == \'1\'" class="red">{{\'table.new\'|translate}}</span>\r\n                            <span *ngIf="staffinfodata?.appsit_status == \'2\'" class="blue">{{\'table.updated\'|translate}}</span>\r\n                             <span *ngIf="staffinfodata?.appsit_status == \'3\'" class="green">{{\'table.approv\' |translate}}</span>\r\n                             <span *ngIf="staffinfodata?.appsit_status == \'4\'" class="red">{{\'table.decl\' |translate}}</span>\r\n                        </p>\r\n                        <p class="application-detais m-r-10 txt-gry m-0">{{\'staff.compcard\' | translate}}:\r\n                        <span *ngIf="staffinfodata?.competcard == \'1\'"class="New">{{\'New\' | translate}}</span>\r\n                        <span *ngIf="staffinfodata?.competcard == \'2\'"class="approved">{{\'Active\' | translate}}</span>\r\n                        <span *ngIf="staffinfodata?.competcard == \'3\'" class="New">{{\'Expired\' | translate}}</span>\r\n                        <span *ngIf="staffinfodata?.competcard == \'4\'"class="blue">{{\'Posted for Card Upgrade\' | translate}}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="availablecard ">\r\n                <form  [formGroup]="availabelDate" #availabelFormRest="ngForm" class="p-l-10 p-r-10 p-b-25">\r\n                    <div fxLayout="row wrap" fxLayoutAlign="flex-start center" class="p-t-15">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="serachrow datepickerrangeform">\r\n                            \x3c!-- <mat-form-field appearance="outline" >\r\n                                <mat-label> {{\'staff.assesavai\' | translate}}</mat-label>\r\n                                <input matInput required formControlName="selectedDate"\r\n                                    (mousedown)="picker2.open(); $event.preventDefault" [disabled]="picker2.opened"\r\n                                    [matDatepicker]="picker2" [readonly]="updated" [min]="today">\r\n                                <mat-datepicker-toggle matSuffix [for]="picker2"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker2></mat-datepicker>\r\n                                <mat-error\r\n                                *ngIf="form.selectedDate.errors?.required">\r\n                                {{\'staff.seleassesavail\' | translate}} </mat-error>\r\n                            </mat-form-field> --\x3e\r\n                            <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label> {{\'staff.assesavai\' | translate}}</mat-label>\r\n                                <div class="drpicker" id="regapp">\r\n                                    \x3c!-- <mat-label> {{\'staff.assesavai\' | translate}}</mat-label> --\x3e\r\n                                    <input id="login_session" formControlName="selectedDate"   #selectedDateInput [minDate]="minDate" required #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"    class="form-control" [max]="today"/>\r\n                                    <div class="closeanddateicomax">\r\n                                        <mat-datepicker-toggle matSuffix >\r\n                                        </mat-datepicker-toggle>\r\n                                    </div>\r\n                                </div>\r\n                                <mat-error\r\n                                *ngIf="form.selectedDate.errors?.required">\r\n                                {{\'staff.seleassesavail\' | translate}} </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div  fxFlex.gt-md="25" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                            ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100" class="date_exp">\r\n                            <mat-form-field appearance="outline">\r\n                                <mat-label>{{\'course.courstarttime\' | translate}} </mat-label>\r\n                                <input [matTimepicker]="picker_i"  \r\n                                [strict]="false" \r\n                                 id="form" formControlName="startDate" readonly\r\n                                required>\r\n                                <mat-timepicker #picker_i></mat-timepicker>\r\n                            <mat-icon matSuffix\r\n                                (click)="picker_i.showDialog()">access_time</mat-icon> \r\n                                \x3c!-- <mat-icon matSuffix class=""\r\n                                matTooltip="{{\'Note: It will not be possible to conduct the Assessment session if the whole day is selected for the Assessment/Training. Therefore, the  recommendation is to schedule the session in two different time slots as suggested here: 06:00 AM to 12:00 PM.\' | translate}} ">info_outline</mat-icon> --\x3e\r\n                                <mat-error\r\n                                *ngIf="form.startDate.errors?.required">\r\n                                {{\'course.starttime\' | translate}} </mat-error>   \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div  fxFlex.gt-md="25" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                        ngClass.lg="p-l-30" ngClass.xl="p-l-30" fxFlex="100" class="date_exp">\r\n                        <mat-form-field appearance="outline">\r\n                            <mat-label>{{\'End Time\' | translate}} </mat-label>\r\n                            <input [matTimepicker]="pickerTo_i"  readonly [minDate]="availabelDate.controls[\'startDate\'].value"\r\n                            [strict]="false" (timeChange)="updateTime()"  \r\n                             id="form"  formControlName="EndDate"\r\n                            required>\r\n                            <mat-timepicker #pickerTo_i></mat-timepicker>\r\n                        <mat-icon matSuffix \r\n                            (click)="pickerTo_i.showDialog()">access_time</mat-icon>    \r\n                            \x3c!-- <mat-icon matSuffix class=""\r\n                            matTooltip="{{\'Note: It will not be possible to conduct the Assessment session if the whole day is selected for the Assessment/Training. Therefore, the  recommendation is to schedule the session in two different time slots as suggested here: 12:00 PM to 06:00 PM.\' | translate}} ">info_outline</mat-icon> --\x3e\r\n                            <mat-error\r\n                            *ngIf="form.EndDate.errors?.required">\r\n                            {{\'course.endtime\' | translate}} </mat-error>  \r\n                        </mat-form-field>\r\n                    </div>\r\n                    </div>\r\n                    <div class="note fs-14 txt-gry3" fxLayoutAlign="end center">\r\n                         <p>{{\'Note: It will not be possible to conduct the Assessment session if the whole day is selected for the Assessment/Training. Therefore, the  recommendation is to schedule the session in two different time slots as suggested here: 06:00 AM to 12:00 PM and 12:00 PM to 06:00 PM.\' | translate}}</p>\r\n                    </div>\r\n                    <div fxLayout="row wrap" fxLayoutAlign="end center" class="m-t-15">\r\n                          <button mat-raised-button class="cancelbtn m-r-15" type="button" (click)="clear()">{{\'Clear\' | translate}}</button>\r\n                          <button mat-raised-button class="submitbtn" type="button"  (click)="submitdata()">{{\'payment.subm\' | translate}}</button>\r\n                    </div>\r\n                </form>\r\n              <div class="p-l-10 p-r-10">\r\n                <div class="paginationwithfilter masterPageTop ">\r\n                    \x3c!-- [style.visibility]="(resultsLength > 5) ? \'visible\' : \'hidden\' " --\x3e\r\n                    <mat-paginator class="masterPage masterPageTop" #paginator [length]="resultsLength" [pageSize]="10"\r\n                        [pageSizeOptions]="[5, 10, 25, 100]" (page)="syncPrimaryPaginator($event);"></mat-paginator>\r\n                    <div fxLayout="row wrap" fxLayoutAlign="end">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100">\r\n                            <button mat-raised-button type="button" color="primary" (click)="clickEvent();"\r\n                                class="filter">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7"\r\n                                    aria-hidden="true"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div fxLayout="row wrap">\r\n                    <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                        <div class="awaredtable">\r\n                            <mat-table #table class="scrolldata" [dataSource]="TrainingtimeData" matSort\r\n                                matSortDisableClear>\r\n                                <ng-container matColumnDef="date">\r\n                                    <mat-header-cell fxFlex="300px" fxFlex.lg="400px" fxFlex.gt-lg="400px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'Date\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="date" fxFlex="300px" fxFlex.lg="400px" fxFlex.gt-lg="400px" *matCellDef="let TrainingData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">{{TrainingData.date}} </div>\r\n                                        </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="time">\r\n                                    <mat-header-cell fxFlex="350px" fxFlex.lg="420px" fxFlex.gt-lg="450px" mat-header-cell *matHeaderCellDef\r\n                                       >{{\'Time\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="time" fxFlex="350px" fxFlex.lg="420px" fxFlex.gt-lg="450px" *matCellDef="let TrainingData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">{{TrainingData.times}} </div>\r\n                                         </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="status">\r\n                                    <mat-header-cell fxFlex="250px" fxFlex.lg="300px" fxFlex.gt-lg="300px" mat-header-cell *matHeaderCellDef >\r\n                                        {{\'course.stat\' | translate}} </mat-header-cell>\r\n                                    <mat-cell data-label="status" fxFlex="250px" fxFlex.lg="300px" fxFlex.gt-lg="300px" *matCellDef="let TrainingData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                \r\n                                        <div *ngIf="!tblplaceholder">\r\n                                           <span class={{TrainingData.rm_name_en}}>{{ifarbic == true ?(TrainingData.rm_name_ar):(TrainingData.rm_name_en)}}</span> \r\n                                        </div></mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="action" stickyEnd>\r\n                                    <mat-header-cell fxFlex="128px" fxFlex.gt-lg="157px" mat-header-cell *matHeaderCellDef>{{\'branch.action\'\r\n                                        | translate}}\r\n                                    </mat-header-cell>\r\n                                    <mat-cell data-label="action" fxFlex="128px" fxFlex.gt-lg="157px" *matCellDef="let TrainingData">\r\n                                        <div *ngIf="tblplaceholder" class="w-100"><div class="tabledataloader"></div></div>\r\n                                        <div *ngIf="!tblplaceholder">\r\n                                            <div class="manageoptions"  *ngIf="TrainingData.dtype == \'yes\' ">  \r\n                                                <button class="menubutton" mat-icon-button [matMenuTriggerFor]="actionmenu"\r\n                                                    aria-label="Example icon-button with a menu">\r\n                                                    <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                </button>\r\n                                                <mat-menu #actionmenu="matMenu" \r\n                                                class="master-menu whentootltipadded table_menu">\r\n                                                \x3c!-- edit --\x3e\r\n                                                <button *ngIf="TrainingData.dtype == \'yes\' && TrainingData.assd_dayschedule != 32 && TrainingData.assd_dayschedule != 64" type="button" mat-menu-item (click)="updateaccessorinfo(TrainingData.appstaffscheddtls_pk,64)"><span>{{\'Mark as Available\' | translate}} </span></button>\r\n                                                <button *ngIf="TrainingData.dtype == \'yes\' && TrainingData.assd_dayschedule != 32 && TrainingData.assd_dayschedule != 29" type="button" mat-menu-item (click)="updateaccessorinfo(TrainingData.appstaffscheddtls_pk,29)"><span>{{\'Mark as Not Available\' | translate}} </span></button>\r\n                                                <button *ngIf="TrainingData.dtype == \'yes\' && TrainingData.assd_dayschedule != 32 && TrainingData.assd_dayschedule != 30" type="button" mat-menu-item (click)="updateaccessorinfo(TrainingData.appstaffscheddtls_pk,30)"><span>{{\'Mark as Weekend\'| translate}} </span></button>\r\n                                                <button *ngIf="TrainingData.dtype == \'yes\' && TrainingData.assd_dayschedule != 32 && TrainingData.assd_dayschedule != 31" type="button" mat-menu-item (click)="updateaccessorinfo(TrainingData.appstaffscheddtls_pk,31)"><span>{{\'Mark as Holiday\'| translate}} </span></button>\r\n                                                \x3c!-- <button  type="button" mat-menu-item (click)="updateaccessorinfo(TrainingData.appstaffscheddtls_pk,32)"><span>{{\'Mark as Booked\'| translate}} </span></button> --\x3e\r\n                                                <button *ngIf="TrainingData.assd_dayschedule == 32" type="button" mat-menu-item (click)="navigatebatch(TrainingData.assd_appstaffinfotmp_fk,TrainingData.assd_date)"><span>{{\'View Batch\' | translate}} </span></button>\r\n                                            </mat-menu>\r\n                                            <mat-menu #actionmenu="matMenu"  *ngIf="TrainingData.dtype == \'no\' && TrainingData.assd_dayschedule == 32"\r\n                                            class="master-menu whentootltipadded table_menu">\r\n                                            <button *ngIf="TrainingData.assd_dayschedule == 32" type="button" mat-menu-item (click)="navigatebatch(TrainingData.assd_appstaffinfotmp_fk,TrainingData.assd_date)"><span>{{\'View Batch\' | translate}} </span></button>\r\n                                        </mat-menu>\r\n                                            </div>\r\n                                            <div class="manageoptions"  *ngIf="TrainingData.dtype == \'no\' && TrainingData.assd_dayschedule == 32">\r\n                                                <button class="menubutton" mat-icon-button [matMenuTriggerFor]="actionmenu"\r\n                                                    aria-label="Example icon-button with a menu">\r\n                                                    <mat-icon class="moremenucolor">more_horiz</mat-icon>\r\n                                                </button>\r\n                                                \r\n                                            <mat-menu #actionmenu="matMenu" \r\n                                            class="master-menu whentootltipadded table_menu">\r\n                                            <button *ngIf="TrainingData.assd_dayschedule == 32" type="button" mat-menu-item (click)="navigatebatch(TrainingData.assd_appstaffinfotmp_fk,TrainingData.assd_date)"><span>{{\'View Batch\' | translate}} </span></button>\r\n                                        </mat-menu>\r\n                                            </div>\r\n                                        </div>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-first">\r\n                                    <mat-header-cell fxFlex="300px" fxFlex.lg="400px" fxFlex.gt-lg="400px"  class="serachrow datepickerrangeform" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <div class="drpicker" id="regapp">\r\n                                                \x3c!-- <mat-label>{{\'table.sele\' |translate}}</mat-label> --\x3e\r\n                                                <input id="login_session" (ngModelChange)="applyFilter($event,\'addeddate\')" [formControl]="addeddate" #pickers matInput type="text" autocomplete="off" ngxDaterangepickerMd  [showCustomRangeLabel]="true"  [alwaysShowCalendars]="true" [ranges]="ranges"  [locale]="locale" [linkedCalendars]="true"  [showClearButton]="true"  [maxDate]=\'selected2\'  readonly class="form-control" [max]="today"/>\r\n                                                <div class="closeanddateicon">\r\n                                                    <mat-datepicker-toggle matSuffix >\r\n                                                    </mat-datepicker-toggle>\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-form-field>\r\n                                        </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-second">\r\n                                    <mat-header-cell fxFlex="350px" fxFlex.lg="420px" fxFlex.gt-lg="450px"  class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                      \r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-three">\r\n                                    <mat-header-cell fxFlex="250px" fxFlex.lg="300px" fxFlex.gt-lg="300px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'table.sele\' |\r\n                                                translate}}</mat-label>\r\n                                            <mat-select [formControl]="status"  (selectionChange)="applyFilter($event.value,\'cert\')" multiple>\r\n                                                <mat-option value="64">{{\'batchview.availa\' | translate}}</mat-option>\r\n                                                <mat-option value="29">{{\'batchview.notavai\' | translate}}</mat-option>\r\n                                                <mat-option value="30">{{\'batchview.week\' | translate}}</mat-option>\r\n                                                <mat-option value="31">{{\'batchview.holi\' | translate}}</mat-option>\r\n                                                <mat-option value="32">{{\'Booked\' | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-four" stickyEnd>\r\n                                    <mat-header-cell fxFlex="128px"  fxFlex.gt-lg="157px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n    \r\n                                        <i class="fa fa-refresh m-l-15 cursorview" (click)="clearFiltersecound();filtersts=false;"\r\n                                            aria-hidden="true" matTooltip="{{\'table.refr\' |translate}}"></i>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <mat-header-row id="headerrowcells" *matHeaderRowDef="TrainingDate;" >\r\n                                </mat-header-row>\r\n                                <mat-header-row id="searchrow"\r\n                                    *matHeaderRowDef="[\'row-first\' , \'row-second\' , \'row-three\' , \'row-four\']">\r\n                                </mat-header-row>\r\n                                <mat-row mat-row *matRowDef="let row; columns: TrainingDate;"></mat-row>\r\n                                <ng-container matColumnDef="disclaimer">\r\n                                    <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                        <div class="nofound" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                            <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                <img src="assets/images/opalimages/norecord.svg" alt="norecord">\r\n                                                <p class="m-t-10 txt-gry3 fs-16">{{\'common.noreco\' | translate}}</p>\r\n                                    </div>\r\n                                </div>\r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container>\r\n                                  \r\n                                    <mat-footer-row [class.stickyclass]="(resultsLength > 0) ? \'none\' : \'block\'" [style.display]="(resultsLength > 0) ? \'none\' : \'block\' " \r\n                                        *matFooterRowDef="[\'disclaimer\']" style="justify-content: center;display: none;">\r\n                                    </mat-footer-row>\r\n                                </ng-container>\r\n                            </mat-table>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                    class="masterPage masterbottom " showFirstLastButtons\r\n                                    [pageSize]="paginator?.pageSize" (page)="syncPrimaryPaginator($event);"\r\n                                    [pageIndex]="paginator?.pageIndex" [length]="paginator?.length"\r\n                                    [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                                </mat-paginator>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class="btngroup m-t-15" fxLayout="row wrap" fxLayoutAlign="flex-end center">\r\n             \x3c!-- <button mat-raised-button class="cancelbtn" (click)="cancle()"></button> --\x3e\r\n            <button mat-raised-button class="cancelbtn m-r-15" type="button" (click)="cancle.emit()">{{\'Back\' | translate}}</button>\r\n            \x3c!-- <button mat-raised-button class="submitbtn" type="button" (click)="subdate.emit()">{{\'payment.subm\' | translate}}</button> --\x3e\r\n            </div>\r\n        </div>\r\n    </div>'},rqDj:function(e,t,a){"use strict";a.r(t),t.default=".quicksetuplist .mat-dialog-container {\n  padding: 0px !important;\n}\n.quicksetuplist #traininglistpopup .clearbtn, .quicksetuplist #traininglistpopup .savebtn {\n  min-width: 65px;\n  background-color: #fff;\n  color: #333;\n  border: 1px solid #c4c4c4;\n  padding-left: 0px;\n  padding-right: 0px;\n  height: 30px;\n  box-shadow: none;\n  line-height: 1;\n}\n.quicksetuplist #traininglistpopup .timepickerwidth {\n  max-width: 85px;\n}\n.quicksetuplist #traininglistpopup .timepickerwidth .mat-icon {\n  font-size: 20px;\n  color: #848484;\n}\n.quicksetuplist #traininglistpopup .slottag .mat-icon {\n  color: #848484;\n}\n.quicksetuplist #traininglistpopup .slottag span {\n  color: #262626;\n}\n.quicksetuplist #traininglistpopup .mindaterangewidth {\n  min-width: 230px;\n}\n.quicksetuplist #traininglistpopup .savebtn {\n  background-color: #ed1c27 !important;\n  color: #fff !important;\n  border: none !important;\n}\n.quicksetuplist #traininglistpopup .summarytablelist {\n  border-top: 1px solid #ddd;\n  border-left: 1px solid #ddd;\n  border-right: 1px solid #ddd;\n}\n.quicksetuplist #traininglistpopup .summarytablelist mat-cell, .quicksetuplist #traininglistpopup .summarytablelist mat-header-cell, .quicksetuplist #traininglistpopup .summarytablelist mat-footer-cell {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  overflow: inherit !important;\n  word-wrap: break-word;\n  min-height: inherit;\n}\n.quicksetuplist #traininglistpopup .summarytablelist .mat-header-row, .quicksetuplist #traininglistpopup .summarytablelist .mat-row {\n  min-height: 36px !important;\n}\n.quicksetuplist #traininglistpopup .summarytablelist .daytopalign {\n  width: 100px;\n  background: #fff;\n  position: relative;\n  top: -18px;\n  overflow: inherit;\n}\n.quicksetuplist #traininglistpopup .summarytablelist .daytopalign h4 {\n  color: #262626;\n}\n.quicksetuplist #traininglistpopup .summarytablelist mat-cell:first-of-type, .quicksetuplist #traininglistpopup .summarytablelist mat-header-cell:first-of-type, .quicksetuplist #traininglistpopup .summarytablelist mat-footer-cell:first-of-type {\n  padding-left: 0px !important;\n}\n.quicksetuplist #traininglistpopup .summarytablelist .mat-header-cell {\n  font-size: 14px;\n  color: #262626 !important;\n}\n.quicksetuplist #traininglistpopup .summarytablelist .mat-header-cell, .quicksetuplist #traininglistpopup .summarytablelist .mat-cell {\n  text-align: center;\n  border-left: 1px solid #ddd;\n  justify-content: center;\n}\n.quicksetuplist #traininglistpopup .summarytablelist .mat-header-cell:first-child, .quicksetuplist #traininglistpopup .summarytablelist .mat-cell:first-child {\n  border-left: 0 !important;\n}\n.quicksetuplist #traininglistpopup .trainingdurationhead {\n  padding: 10px 25px;\n  background-color: #0c4b9a;\n  border-radius: 3px;\n}\n.quicksetuplist #traininglistpopup .trainingdurationhead .mat-icon {\n  color: #fff;\n}\n.quicksetuplist #traininglistpopup .trainingdurationhead h2 {\n  color: #fff;\n}\n.quicksetuplist #traininglistpopup .conftiming h4 {\n  color: #262626;\n}\n.quicksetuplist #traininglistpopup .totalleanerheader p {\n  color: #848484;\n  padding-bottom: 4px;\n}\n.quicksetuplist #traininglistpopup .totalleanerheader span {\n  color: #262626;\n}\n.quicksetuplist #traininglistpopup .coursesubtitle .complantag {\n  border: 1px solid #ddd;\n  padding: 8px 10px;\n}\n.quicksetuplist #traininglistpopup .coursesubtitle p {\n  color: #848484;\n}\n.quicksetuplist #traininglistpopup .coursesubtitle span {\n  color: #262626;\n}\n@media (max-width: 699px) {\n  .rangewidthdateres {\n    display: block !important;\n  }\n\n  .mindaterangewidth {\n    padding-bottom: 10px;\n  }\n\n  .widthlangtitle {\n    padding-top: 15px;\n  }\n}\n@media (max-width: 768px) {\n  .summarytablelist {\n    position: relative;\n    z-index: 1;\n    display: block;\n    overflow-x: auto;\n    overflow-y: hidden;\n    background-color: #fff;\n    scroll-behavior: smooth;\n  }\n  .summarytablelist::-webkit-scrollbar {\n    width: 6px;\n    height: 5px;\n  }\n  .summarytablelist::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  .summarytablelist::-webkit-scrollbar-thumb {\n    background: #ccc;\n    border-radius: 2px;\n  }\n  .summarytablelist::-webkit-scrollbar-thumb:hover {\n    background: #ccc;\n  }\n}\n@media (max-width: 768px) and (min-width: 766px) {\n  .widthrestitle {\n    max-width: 13% !important;\n  }\n\n  .widthlangtitle {\n    max-width: 87% !important;\n  }\n}"}}]);