<!-- <table mat-table [dataSource]="learnerdata" matSort class="mat-courseinfo"
    (matSortChange)="experienceSortChange($event)">

    <ng-container matColumnDef="select">
        <mat-header-cell mat-header-cell *matHeaderCellDef>
            <mat-checkbox (change)="$event ? toggleAllRows() : null"
                [checked]="selection.hasValue() && isAllSelected()"
                [indeterminate]="selection.hasValue() && !isAllSelected()" [aria-label]="checkboxLabel()">
            </mat-checkbox>
        </mat-header-cell>
        <mat-cell *matCellDef="let element">
            <mat-checkbox (click)="$event.stopPropagation()"
                (change)="$event ? selection.toggle(element) : null"
                [checked]="selection.isSelected(element)" [aria-label]="checkboxLabel(element)">
            </mat-checkbox>
        </mat-cell>
    </ng-container>

    <ng-container matColumnDef="sexp_employername">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'course.program' | translate}}
        </th>
        <td mat-cell *matCellDef="let element"> {{element.sexp_employername}} </td>
    </ng-container>
    <ng-container matColumnDef="sexp_doj">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'course.category' | translate}}
        </th>
        <td mat-cell *matCellDef="let element"> {{element.sexp_doj}} </td>
    </ng-container>
    <ng-container matColumnDef="sexp_currentlyworking">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'course.training' | translate}}
        </th>
        <td mat-cell *matCellDef="let element"> {{element.sexp_currentlyworking}} </td>
    </ng-container>
    <ng-container matColumnDef="sexp_designation">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'course.assessment' | translate}}
        </th>
        <td mat-cell *matCellDef="let element"> {{element.sexp_designation}} </td>
    </ng-container>
    <ng-container matColumnDef="sexp_createdon">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'course.expiry' | translate}}
        </th>
        <td mat-cell *matCellDef="let element"> {{element.sexp_createdon}} </td>
    </ng-container>
    <ng-container matColumnDef="sexp_updatedon">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'course.status' | translate}}
        </th>
        <td mat-cell *matCellDef="let element"> {{element.sexp_updatedon}} </td>
    </ng-container>
    <ng-container matColumnDef="action" class="suspended">
        <th mat-header-cell *matHeaderCellDef> {{'course.action' | translate}} </th>
        <td mat-cell *matCellDef="let element">
            <button mat-icon-button [matMenuTriggerFor]="menu" aria-label="Example icon-button with a menu">
                <mat-icon>more_horiz</mat-icon>
            </button>
            <mat-menu #menu="matMenu" style="background-color: gray;">
                <button mat-menu-item>
                    <span>Upload Assessement Report</span>
                </button>
                <button mat-menu-item>

                    <span>Validate Assessement Report</span>
                </button>
                <button mat-menu-item>

                    <span>Mark as Present</span>
                </button>
                <button mat-menu-item>
                    <span>Mark as No Show</span>
                </button>
                <button mat-menu-item>
                    <span>View Feedback</span>
                </button>
                <button mat-menu-item>
                    <span>View card</span>
                </button>
                <button mat-menu-item (click)="openDialog()">
                    <span>Print Card</span>
                </button>
            </mat-menu>
        </td>
    </ng-container>
    <ng-container matColumnDef="row-first">
        <th mat-header-cell *matHeaderCellDef id="search">
            <mat-form-field class="example-form-field" appearance="outline">
                <mat-label>Search</mat-label>
                <input matInput type="text" (keyup)="applyFilter($event)">
                <button *ngIf="value" matSuffix mat-icon-button aria-label="Clear" (click)="value=''">
                    <mat-icon>close</mat-icon>
                </button>
            </mat-form-field>
        </th>
    </ng-container>
    <ng-container matColumnDef="row-second">
        <th mat-header-cell *matHeaderCellDef id="search">
            <mat-form-field class="example-form-field" appearance="outline">
                <mat-label>Search</mat-label>
                <input matInput type="text" (keyup)="applyFilter($event)">
                <button *ngIf="value" matSuffix mat-icon-button aria-label="Clear" (click)="value=''">
                    <mat-icon>close</mat-icon>
                </button>
            </mat-form-field>
        </th>
    </ng-container>
    <ng-container matColumnDef="row-three">
        <th mat-header-cell *matHeaderCellDef id="search">
            <mat-form-field class="example-form-field" appearance="outline">
                <mat-label>Search</mat-label>
                <input matInput type="text" (keyup)="applyFilter($event)">
                <button *ngIf="value" matSuffix mat-icon-button aria-label="Clear" (click)="value=''">
                    <mat-icon>close</mat-icon>
                </button>
            </mat-form-field>
        </th>
    </ng-container>
    <ng-container matColumnDef="row-four">
        <th mat-header-cell *matHeaderCellDef id="search">
            <mat-form-field class="example-form-field" appearance="outline">
                <mat-label>Search</mat-label>
                <input matInput type="text" (keyup)="applyFilter($event)">
                <button *ngIf="value" matSuffix mat-icon-button aria-label="Clear" (click)="value=''">
                    <mat-icon>close</mat-icon>
                </button>
            </mat-form-field>
        </th>
    </ng-container>
    <ng-container matColumnDef="row-five">
        <th mat-header-cell *matHeaderCellDef id="search">
            <mat-form-field class="example-form-field" appearance="outline">
                <mat-label>Search</mat-label>
                <input matInput type="text" (keyup)="applyFilter($event)">
                <button *ngIf="value" matSuffix mat-icon-button aria-label="Clear" (click)="value=''">
                    <mat-icon>close</mat-icon>
                </button>
            </mat-form-field>
        </th>
    </ng-container>
    <ng-container matColumnDef="row-six">
        <th mat-header-cell *matHeaderCellDef id="search">
            <mat-form-field class="example-form-field" appearance="outline">
                <mat-label>Search</mat-label>
                <input matInput type="text" (keyup)="applyFilter($event)">
                <button *ngIf="value" matSuffix mat-icon-button aria-label="Clear" (click)="value=''">
                    <mat-icon>close</mat-icon>
                </button>
            </mat-form-field>
        </th>
    </ng-container>
    <ng-container matColumnDef="row-seven">
        <th mat-header-cell *matHeaderCellDef id="search">
            <i class="fa fa-refresh m-l-15 cursorview" aria-hidden="true" matTooltip="Refresh"></i>
        </th>
    </ng-container>
    <tr mat-header-row *matHeaderRowDef="displayedColumns2"></tr>
    <tr mat-header-row
        *matHeaderRowDef="['row-first' , 'row-second'  , 'row-three' , 'row-four', 'row-five' , 'row-six','row-seven']">
    </tr>
    <tr mat-row *matRowDef="let row; columns: displayedColumns2;"></tr>
</table>
<div class="pagination">
    <mat-paginator [pageSizeOptions]="[5, 10, 25, 100]" showFirstLastButtons
        aria-label="Select page of periodic elements">
    </mat-paginator>
</div> -->