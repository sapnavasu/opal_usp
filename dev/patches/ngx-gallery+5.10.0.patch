diff --git a/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js b/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js
index d3d3250..d398b1c 100644
--- a/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js
+++ b/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js
@@ -1,8 +1,267 @@
 (function (global, factory) {
-	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) :
-	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) :
-	(factory((global['ngx-gallery'] = {}),global.core,global.common,global.platformBrowser));
-}(this, (function (exports,core,common,platformBrowser) { 'use strict';
+	typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('@angular/platform-browser'),exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) :
+	typeof define === 'function' && define.amd ? define(['@angular/core','@angular/common','@angular/platform-browser','exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) :
+	(factory(global.ng.core,global.ng.common,global.ng.platformBrowser,(global['ngx-gallery'] = {}),global.core,global.common,global.platformBrowser));
+}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,exports,core,common,platformBrowser) { 
+var _c0 = function (a0) { return { "ngx-gallery-active": a0 }; };
+function NgxGalleryBulletsComponent_div_1_Template(rf, ctx) { if (rf & 1) {
+    var _r4 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "div", 1);
+    ɵngcc0.ɵɵlistener("click", function NgxGalleryBulletsComponent_div_1_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); var i_r2 = ctx.index; var ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.handleChange($event, i_r2); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var i_r2 = ctx.index;
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c0, i_r2 == ctx_r0.active));
+} }
+function NgxGalleryImageComponent_div_3_ngx_gallery_action_4_Template(rf, ctx) { if (rf & 1) {
+    var _r9 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 7);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryImageComponent_div_3_ngx_gallery_action_4_Template_ngx_gallery_action_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var action_r7 = ctx.$implicit; var image_r3 = ɵngcc0.ɵɵnextContext().$implicit; return action_r7.onClick($event, image_r3.index); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var action_r7 = ctx.$implicit;
+    ɵngcc0.ɵɵproperty("icon", action_r7.icon)("disabled", action_r7.disabled)("titleText", action_r7.titleText);
+} }
+function NgxGalleryImageComponent_div_3_div_7_Template(rf, ctx) { if (rf & 1) {
+    var _r12 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "div", 8);
+    ɵngcc0.ɵɵlistener("click", function NgxGalleryImageComponent_div_3_div_7_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); return $event.stopPropagation(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var image_r3 = ɵngcc0.ɵɵnextContext().$implicit;
+    var ctx_r6 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("innerHTML", ctx_r6.descriptions[image_r3.index], ɵngcc0.ɵɵsanitizeHtml);
+} }
+var _c1 = function (a0, a1, a2, a3) { return { "ngx-gallery-active": a0, "ngx-gallery-inactive-left": a1, "ngx-gallery-inactive-right": a2, "ngx-gallery-clickable": a3 }; };
+function NgxGalleryImageComponent_div_3_Template(rf, ctx) { if (rf & 1) {
+    var _r15 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "div", 3);
+    ɵngcc0.ɵɵlistener("click", function NgxGalleryImageComponent_div_3_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); var image_r3 = ctx.$implicit; var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.handleClick($event, image_r3.index); });
+    ɵngcc0.ɵɵtext(1, "\n                ");
+    ɵngcc0.ɵɵelementStart(2, "div", 4);
+    ɵngcc0.ɵɵtext(3, "\n                    ");
+    ɵngcc0.ɵɵtemplate(4, NgxGalleryImageComponent_div_3_ngx_gallery_action_4_Template, 1, 3, "ngx-gallery-action", 5);
+    ɵngcc0.ɵɵtext(5, "\n                ");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵtext(6, "\n                ");
+    ɵngcc0.ɵɵtemplate(7, NgxGalleryImageComponent_div_3_div_7_Template, 1, 1, "div", 6);
+    ɵngcc0.ɵɵtext(8, "\n            ");
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var image_r3 = ctx.$implicit;
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵstyleProp("background-image", ctx_r0.getSafeUrl(image_r3.src), ɵngcc0.ɵɵdefaultStyleSanitizer);
+    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(5, _c1, ctx_r0.selectedIndex == image_r3.index, ctx_r0.selectedIndex > image_r3.index, ctx_r0.selectedIndex < image_r3.index, ctx_r0.clickable));
+    ɵngcc0.ɵɵadvance(4);
+    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.actions);
+    ɵngcc0.ɵɵadvance(3);
+    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showDescription && ctx_r0.descriptions[image_r3.index]);
+} }
+function NgxGalleryImageComponent_ngx_gallery_bullets_6_Template(rf, ctx) { if (rf & 1) {
+    var _r17 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-bullets", 9);
+    ɵngcc0.ɵɵlistener("onChange", function NgxGalleryImageComponent_ngx_gallery_bullets_6_Template_ngx_gallery_bullets_onChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.show($event); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r1 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("count", ctx_r1.images.length)("active", ctx_r1.selectedIndex);
+} }
+function NgxGalleryImageComponent_ngx_gallery_arrows_8_Template(rf, ctx) { if (rf & 1) {
+    var _r19 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-arrows", 10);
+    ɵngcc0.ɵɵlistener("onPrevClick", function NgxGalleryImageComponent_ngx_gallery_arrows_8_Template_ngx_gallery_arrows_onPrevClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.showPrev(); })("onNextClick", function NgxGalleryImageComponent_ngx_gallery_arrows_8_Template_ngx_gallery_arrows_onNextClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.showNext(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r2 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-image-size-", ctx_r2.size, "");
+    ɵngcc0.ɵɵproperty("prevDisabled", !ctx_r2.canShowPrev())("nextDisabled", !ctx_r2.canShowNext())("arrowPrevIcon", ctx_r2.arrowPrevIcon)("arrowNextIcon", ctx_r2.arrowNextIcon);
+} }
+function NgxGalleryThumbnailsComponent_a_5_ngx_gallery_action_4_Template(rf, ctx) { if (rf & 1) {
+    var _r8 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 7);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryThumbnailsComponent_a_5_ngx_gallery_action_4_Template_ngx_gallery_action_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); var action_r6 = ctx.$implicit; var i_r3 = ɵngcc0.ɵɵnextContext().index; return action_r6.onClick($event, i_r3); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var action_r6 = ctx.$implicit;
+    ɵngcc0.ɵɵproperty("icon", action_r6.icon)("disabled", action_r6.disabled)("titleText", action_r6.titleText);
+} }
+function NgxGalleryThumbnailsComponent_a_5_div_7_Template(rf, ctx) { if (rf & 1) {
+    ɵngcc0.ɵɵelementStart(0, "div", 8);
+    ɵngcc0.ɵɵtext(1, "\n                    ");
+    ɵngcc0.ɵɵelementStart(2, "span", 9);
+    ɵngcc0.ɵɵtext(3);
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵtext(4, "\n                ");
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
+    ɵngcc0.ɵɵadvance(3);
+    ɵngcc0.ɵɵtextInterpolate1("+", ctx_r5.remainingCountValue, "");
+} }
+var _c2 = function (a0, a1) { return { "ngx-gallery-active": a0, "ngx-gallery-clickable": a1 }; };
+function NgxGalleryThumbnailsComponent_a_5_Template(rf, ctx) { if (rf & 1) {
+    var _r11 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "a", 3);
+    ɵngcc0.ɵɵlistener("click", function NgxGalleryThumbnailsComponent_a_5_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); var i_r3 = ctx.index; var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.handleClick($event, i_r3); });
+    ɵngcc0.ɵɵtext(1, "\n                ");
+    ɵngcc0.ɵɵelementStart(2, "div", 4);
+    ɵngcc0.ɵɵtext(3, "\n                    ");
+    ɵngcc0.ɵɵtemplate(4, NgxGalleryThumbnailsComponent_a_5_ngx_gallery_action_4_Template, 1, 3, "ngx-gallery-action", 5);
+    ɵngcc0.ɵɵtext(5, "\n                ");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵtext(6, "\n                ");
+    ɵngcc0.ɵɵtemplate(7, NgxGalleryThumbnailsComponent_a_5_div_7_Template, 5, 1, "div", 6);
+    ɵngcc0.ɵɵtext(8, "\n            ");
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var image_r2 = ctx.$implicit;
+    var i_r3 = ctx.index;
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵstyleProp("background-image", ctx_r0.getSafeUrl(image_r2), ɵngcc0.ɵɵdefaultStyleSanitizer)("width", ctx_r0.getThumbnailWidth())("height", ctx_r0.getThumbnailHeight())("left", ctx_r0.getThumbnailLeft(i_r3))("top", ctx_r0.getThumbnailTop(i_r3));
+    ɵngcc0.ɵɵproperty("href", ctx_r0.hasLink(i_r3) ? ctx_r0.links[i_r3] : "#", ɵngcc0.ɵɵsanitizeUrl)("target", ctx_r0.linkTarget)("ngClass", ɵngcc0.ɵɵpureFunction2(16, _c2, i_r3 == ctx_r0.selectedIndex, ctx_r0.clickable));
+    ɵngcc0.ɵɵattribute("aria-label", ctx_r0.labels[i_r3]);
+    ɵngcc0.ɵɵadvance(4);
+    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.actions);
+    ɵngcc0.ɵɵadvance(3);
+    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.remainingCount && ctx_r0.remainingCountValue && i_r3 == ctx_r0.rows * ctx_r0.columns - 1);
+} }
+function NgxGalleryThumbnailsComponent_ngx_gallery_arrows_9_Template(rf, ctx) { if (rf & 1) {
+    var _r13 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-arrows", 10);
+    ɵngcc0.ɵɵlistener("onPrevClick", function NgxGalleryThumbnailsComponent_ngx_gallery_arrows_9_Template_ngx_gallery_arrows_onPrevClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.moveLeft(); })("onNextClick", function NgxGalleryThumbnailsComponent_ngx_gallery_arrows_9_Template_ngx_gallery_arrows_onNextClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.moveRight(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r1 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("prevDisabled", !ctx_r1.canMoveLeft())("nextDisabled", !ctx_r1.canMoveRight())("arrowPrevIcon", ctx_r1.arrowPrevIcon)("arrowNextIcon", ctx_r1.arrowNextIcon);
+} }
+var _c3 = ["previewImage"];
+function NgxGalleryPreviewComponent_ngx_gallery_arrows_1_Template(rf, ctx) { if (rf & 1) {
+    var _r12 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-arrows", 15);
+    ɵngcc0.ɵɵlistener("onPrevClick", function NgxGalleryPreviewComponent_ngx_gallery_arrows_1_Template_ngx_gallery_arrows_onPrevClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.showPrev(); })("onNextClick", function NgxGalleryPreviewComponent_ngx_gallery_arrows_1_Template_ngx_gallery_arrows_onNextClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.showNext(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("prevDisabled", !ctx_r0.canShowPrev())("nextDisabled", !ctx_r0.canShowNext())("arrowPrevIcon", ctx_r0.arrowPrevIcon)("arrowNextIcon", ctx_r0.arrowNextIcon);
+} }
+function NgxGalleryPreviewComponent_ngx_gallery_action_7_Template(rf, ctx) { if (rf & 1) {
+    var _r16 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 16);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryPreviewComponent_ngx_gallery_action_7_Template_ngx_gallery_action_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var action_r14 = ctx.$implicit; var ctx_r15 = ɵngcc0.ɵɵnextContext(); return action_r14.onClick($event, ctx_r15.index); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var action_r14 = ctx.$implicit;
+    ɵngcc0.ɵɵproperty("icon", action_r14.icon)("disabled", action_r14.disabled)("titleText", action_r14.titleText);
+} }
+function NgxGalleryPreviewComponent_a_9_Template(rf, ctx) { if (rf & 1) {
+    ɵngcc0.ɵɵelementStart(0, "a", 17);
+    ɵngcc0.ɵɵtext(1, "\n                    ");
+    ɵngcc0.ɵɵelement(2, "i");
+    ɵngcc0.ɵɵtext(3, "\n                ");
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r2 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("href", ctx_r2.src, ɵngcc0.ɵɵsanitizeUrl);
+    ɵngcc0.ɵɵadvance(2);
+    ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-icon-content ", ctx_r2.downloadIcon, "");
+} }
+function NgxGalleryPreviewComponent_ngx_gallery_action_11_Template(rf, ctx) { if (rf & 1) {
+    var _r18 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 18);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryPreviewComponent_ngx_gallery_action_11_Template_ngx_gallery_action_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); var ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.zoomOut(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r3 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("icon", ctx_r3.zoomOutIcon)("disabled", !ctx_r3.canZoomOut());
+} }
+function NgxGalleryPreviewComponent_ngx_gallery_action_13_Template(rf, ctx) { if (rf & 1) {
+    var _r20 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 18);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryPreviewComponent_ngx_gallery_action_13_Template_ngx_gallery_action_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); var ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.zoomIn(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r4 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("icon", ctx_r4.zoomInIcon)("disabled", !ctx_r4.canZoomIn());
+} }
+function NgxGalleryPreviewComponent_ngx_gallery_action_15_Template(rf, ctx) { if (rf & 1) {
+    var _r22 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 7);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryPreviewComponent_ngx_gallery_action_15_Template_ngx_gallery_action_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.rotateLeft(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r5 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("icon", ctx_r5.rotateLeftIcon);
+} }
+function NgxGalleryPreviewComponent_ngx_gallery_action_17_Template(rf, ctx) { if (rf & 1) {
+    var _r24 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 7);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryPreviewComponent_ngx_gallery_action_17_Template_ngx_gallery_action_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); var ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.rotateRight(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r6 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("icon", ctx_r6.rotateRightIcon);
+} }
+function NgxGalleryPreviewComponent_ngx_gallery_action_19_Template(rf, ctx) { if (rf & 1) {
+    var _r26 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-action", 7);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryPreviewComponent_ngx_gallery_action_19_Template_ngx_gallery_action_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); var ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.manageFullscreen(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r7 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("icon", "ngx-gallery-fullscreen " + ctx_r7.fullscreenIcon);
+} }
+function NgxGalleryPreviewComponent_img_34_Template(rf, ctx) { if (rf & 1) {
+    var _r29 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "img", 19, 20);
+    ɵngcc0.ɵɵlistener("click", function NgxGalleryPreviewComponent_img_34_Template_img_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); return $event.stopPropagation(); })("mouseenter", function NgxGalleryPreviewComponent_img_34_Template_img_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r29); var ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.imageMouseEnter(); })("mouseleave", function NgxGalleryPreviewComponent_img_34_Template_img_mouseleave_0_listener() { ɵngcc0.ɵɵrestoreView(_r29); var ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.imageMouseLeave(); })("mousedown", function NgxGalleryPreviewComponent_img_34_Template_img_mousedown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); var ctx_r32 = ɵngcc0.ɵɵnextContext(); return ctx_r32.mouseDownHandler($event); })("touchstart", function NgxGalleryPreviewComponent_img_34_Template_img_touchstart_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); var ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.mouseDownHandler($event); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r8 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵstyleProp("transform", ctx_r8.getTransform())("left", ctx_r8.positionLeft + "px")("top", ctx_r8.positionTop + "px");
+    ɵngcc0.ɵɵclassProp("ngx-gallery-active", !ctx_r8.loading)("animation", ctx_r8.animation)("ngx-gallery-grab", ctx_r8.canDragOnZoom());
+    ɵngcc0.ɵɵproperty("src", ctx_r8.src, ɵngcc0.ɵɵsanitizeUrl);
+} }
+function NgxGalleryPreviewComponent_ngx_gallery_bullets_36_Template(rf, ctx) { if (rf & 1) {
+    var _r35 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-bullets", 21);
+    ɵngcc0.ɵɵlistener("onChange", function NgxGalleryPreviewComponent_ngx_gallery_bullets_36_Template_ngx_gallery_bullets_onChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r35); var ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.showAtIndex($event); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r9 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("count", ctx_r9.images.length)("active", ctx_r9.index);
+} }
+function NgxGalleryPreviewComponent_div_39_Template(rf, ctx) { if (rf & 1) {
+    var _r37 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "div", 22);
+    ɵngcc0.ɵɵlistener("click", function NgxGalleryPreviewComponent_div_39_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); return $event.stopPropagation(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r10 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("innerHTML", ctx_r10.description, ɵngcc0.ɵɵsanitizeHtml);
+} }
+function NgxGalleryComponent_ngx_gallery_image_3_Template(rf, ctx) { if (rf & 1) {
+    var _r3 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-image", 3);
+    ɵngcc0.ɵɵlistener("onClick", function NgxGalleryComponent_ngx_gallery_image_3_Template_ngx_gallery_image_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.openPreview($event); })("onActiveChange", function NgxGalleryComponent_ngx_gallery_image_3_Template_ngx_gallery_image_onActiveChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.selectFromImage($event); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵstyleProp("height", ctx_r0.getImageHeight());
+    ɵngcc0.ɵɵproperty("images", ctx_r0.mediumImages)("clickable", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.preview)("selectedIndex", ctx_r0.selectedIndex)("arrows", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageArrows)("arrowsAutoHide", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageArrowsAutoHide)("arrowPrevIcon", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.arrowPrevIcon)("arrowNextIcon", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.arrowNextIcon)("swipe", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageSwipe)("animation", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageAnimation)("size", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageSize)("autoPlay", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageAutoPlay)("autoPlayInterval", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageAutoPlayInterval)("autoPlayPauseOnHover", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageAutoPlayPauseOnHover)("infinityMove", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageInfinityMove)("lazyLoading", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.lazyLoading)("actions", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageActions)("descriptions", ctx_r0.descriptions)("showDescription", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageDescription)("bullets", ctx_r0.currentOptions == null ? null : ctx_r0.currentOptions.imageBullets);
+} }
+var _c4 = function () { return []; };
+function NgxGalleryComponent_ngx_gallery_thumbnails_5_Template(rf, ctx) { if (rf & 1) {
+    var _r6 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "ngx-gallery-thumbnails", 4);
+    ɵngcc0.ɵɵlistener("onActiveChange", function NgxGalleryComponent_ngx_gallery_thumbnails_5_Template_ngx_gallery_thumbnails_onActiveChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.selectFromThumbnails($event); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r1 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵstyleProp("margin-top", ctx_r1.getThumbnailsMarginTop())("margin-bottom", ctx_r1.getThumbnailsMarginBottom())("height", ctx_r1.getThumbnailsHeight());
+    ɵngcc0.ɵɵproperty("images", ctx_r1.smallImages)("links", (ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsAsLinks) ? ctx_r1.links : ɵngcc0.ɵɵpureFunction0(26, _c4))("labels", ctx_r1.labels)("linkTarget", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.linkTarget)("selectedIndex", ctx_r1.selectedIndex)("columns", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsColumns)("rows", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsRows)("margin", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailMargin)("arrows", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsArrows)("arrowsAutoHide", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsArrowsAutoHide)("arrowPrevIcon", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.arrowPrevIcon)("arrowNextIcon", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.arrowNextIcon)("clickable", (ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.image) || (ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.preview))("swipe", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsSwipe)("size", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailSize)("moveSize", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsMoveSize)("order", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsOrder)("remainingCount", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailsRemainingCount)("lazyLoading", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.lazyLoading)("actions", ctx_r1.currentOptions == null ? null : ctx_r1.currentOptions.thumbnailActions);
+} }
+'use strict';
 
 var NgxGalleryActionComponent = /** @class */ (function () {
     function NgxGalleryActionComponent() {
@@ -21,13 +280,6 @@ var NgxGalleryActionComponent = /** @class */ (function () {
         event.stopPropagation();
         event.preventDefault();
     };
-    NgxGalleryActionComponent.decorators = [
-        { type: core.Component, args: [{
-                    selector: 'ngx-gallery-action',
-                    template: "\n        <div class=\"ngx-gallery-icon\" [class.ngx-gallery-icon-disabled]=\"disabled\"\n            aria-hidden=\"true\"\n            title=\"{{ titleText }}\"\n            (click)=\"handleClick($event)\">\n                <i class=\"ngx-gallery-icon-content {{ icon }}\"></i>\n        </div>",
-                    changeDetection: core.ChangeDetectionStrategy.OnPush
-                },] },
-    ];
     /**
      * @nocollapse
      */
@@ -38,6 +290,38 @@ var NgxGalleryActionComponent = /** @class */ (function () {
         'titleText': [{ type: core.Input },],
         'onClick': [{ type: core.Output },],
     };
+NgxGalleryActionComponent.ɵfac = function NgxGalleryActionComponent_Factory(t) { return new (t || NgxGalleryActionComponent)(); };
+NgxGalleryActionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGalleryActionComponent, selectors: [["ngx-gallery-action"]], inputs: { disabled: "disabled", titleText: "titleText", icon: "icon" }, outputs: { onClick: "onClick" }, decls: 5, vars: 6, consts: [["aria-hidden", "true", 1, "ngx-gallery-icon", 3, "title", "click"]], template: function NgxGalleryActionComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵtext(0, "\n        ");
+        ɵngcc0.ɵɵelementStart(1, "div", 0);
+        ɵngcc0.ɵɵlistener("click", function NgxGalleryActionComponent_Template_div_click_1_listener($event) { return ctx.handleClick($event); });
+        ɵngcc0.ɵɵtext(2, "\n                ");
+        ɵngcc0.ɵɵelement(3, "i");
+        ɵngcc0.ɵɵtext(4, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassProp("ngx-gallery-icon-disabled", ctx.disabled);
+        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.titleText);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-icon-content ", ctx.icon, "");
+    } }, encapsulation: 2, changeDetection: 0 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryActionComponent, [{
+        type: core.Component,
+        args: [{
+                selector: 'ngx-gallery-action',
+                template: "\n        <div class=\"ngx-gallery-icon\" [class.ngx-gallery-icon-disabled]=\"disabled\"\n            aria-hidden=\"true\"\n            title=\"{{ titleText }}\"\n            (click)=\"handleClick($event)\">\n                <i class=\"ngx-gallery-icon-content {{ icon }}\"></i>\n        </div>",
+                changeDetection: core.ChangeDetectionStrategy.OnPush
+            }]
+    }], function () { return []; }, { disabled: [{
+            type: core.Input
+        }], titleText: [{
+            type: core.Input
+        }], onClick: [{
+            type: core.Output
+        }], icon: [{
+            type: core.Input
+        }] }); })();
     return NgxGalleryActionComponent;
 }());
 
@@ -58,13 +342,6 @@ var NgxGalleryArrowsComponent = /** @class */ (function () {
     NgxGalleryArrowsComponent.prototype.handleNextClick = function () {
         this.onNextClick.emit();
     };
-    NgxGalleryArrowsComponent.decorators = [
-        { type: core.Component, args: [{
-                    selector: 'ngx-gallery-arrows',
-                    template: "\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handlePrevClick()\" [class.ngx-gallery-disabled]=\"prevDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowPrevIcon}}\"></i>\n            </div>\n        </div>\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handleNextClick()\" [class.ngx-gallery-disabled]=\"nextDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowNextIcon}}\"></i>\n            </div>\n        </div>\n    ",
-                    styles: [".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } "]
-                },] },
-    ];
     /**
      * @nocollapse
      */
@@ -77,6 +354,61 @@ var NgxGalleryArrowsComponent = /** @class */ (function () {
         'onPrevClick': [{ type: core.Output },],
         'onNextClick': [{ type: core.Output },],
     };
+NgxGalleryArrowsComponent.ɵfac = function NgxGalleryArrowsComponent_Factory(t) { return new (t || NgxGalleryArrowsComponent)(); };
+NgxGalleryArrowsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGalleryArrowsComponent, selectors: [["ngx-gallery-arrows"]], inputs: { prevDisabled: "prevDisabled", nextDisabled: "nextDisabled", arrowPrevIcon: "arrowPrevIcon", arrowNextIcon: "arrowNextIcon" }, outputs: { onPrevClick: "onPrevClick", onNextClick: "onNextClick" }, decls: 17, vars: 10, consts: [[1, "ngx-gallery-arrow-wrapper", "ngx-gallery-arrow-left"], ["aria-hidden", "true", 1, "ngx-gallery-icon", "ngx-gallery-arrow", 3, "click"], [1, "ngx-gallery-arrow-wrapper", "ngx-gallery-arrow-right"]], template: function NgxGalleryArrowsComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵtext(0, "\n        ");
+        ɵngcc0.ɵɵelementStart(1, "div", 0);
+        ɵngcc0.ɵɵtext(2, "\n            ");
+        ɵngcc0.ɵɵelementStart(3, "div", 1);
+        ɵngcc0.ɵɵlistener("click", function NgxGalleryArrowsComponent_Template_div_click_3_listener() { return ctx.handlePrevClick(); });
+        ɵngcc0.ɵɵtext(4, "\n                ");
+        ɵngcc0.ɵɵelement(5, "i");
+        ɵngcc0.ɵɵtext(6, "\n            ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(7, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(8, "\n        ");
+        ɵngcc0.ɵɵelementStart(9, "div", 2);
+        ɵngcc0.ɵɵtext(10, "\n            ");
+        ɵngcc0.ɵɵelementStart(11, "div", 1);
+        ɵngcc0.ɵɵlistener("click", function NgxGalleryArrowsComponent_Template_div_click_11_listener() { return ctx.handleNextClick(); });
+        ɵngcc0.ɵɵtext(12, "\n                ");
+        ɵngcc0.ɵɵelement(13, "i");
+        ɵngcc0.ɵɵtext(14, "\n            ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(15, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(16, "\n    ");
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵclassProp("ngx-gallery-disabled", ctx.prevDisabled);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-icon-content ", ctx.arrowPrevIcon, "");
+        ɵngcc0.ɵɵadvance(6);
+        ɵngcc0.ɵɵclassProp("ngx-gallery-disabled", ctx.nextDisabled);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-icon-content ", ctx.arrowNextIcon, "");
+    } }, styles: [".ngx-gallery-arrow-wrapper[_ngcontent-%COMP%] { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left[_ngcontent-%COMP%] { left: 0px; } .ngx-gallery-arrow-right[_ngcontent-%COMP%] { right: 0px; } .ngx-gallery-arrow[_ngcontent-%COMP%] { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled[_ngcontent-%COMP%] { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left[_ngcontent-%COMP%]   .ngx-gallery-arrow[_ngcontent-%COMP%] { left: 10px; } .ngx-gallery-arrow-right[_ngcontent-%COMP%]   .ngx-gallery-arrow[_ngcontent-%COMP%] { right: 10px; }"] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryArrowsComponent, [{
+        type: core.Component,
+        args: [{
+                selector: 'ngx-gallery-arrows',
+                template: "\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handlePrevClick()\" [class.ngx-gallery-disabled]=\"prevDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowPrevIcon}}\"></i>\n            </div>\n        </div>\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handleNextClick()\" [class.ngx-gallery-disabled]=\"nextDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowNextIcon}}\"></i>\n            </div>\n        </div>\n    ",
+                styles: [".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } "]
+            }]
+    }], function () { return []; }, { onPrevClick: [{
+            type: core.Output
+        }], onNextClick: [{
+            type: core.Output
+        }], prevDisabled: [{
+            type: core.Input
+        }], nextDisabled: [{
+            type: core.Input
+        }], arrowPrevIcon: [{
+            type: core.Input
+        }], arrowNextIcon: [{
+            type: core.Input
+        }] }); })();
     return NgxGalleryArrowsComponent;
 }());
 
@@ -99,13 +431,6 @@ var NgxGalleryBulletsComponent = /** @class */ (function () {
     NgxGalleryBulletsComponent.prototype.handleChange = function (event, index) {
         this.onChange.emit(index);
     };
-    NgxGalleryBulletsComponent.decorators = [
-        { type: core.Component, args: [{
-                    selector: 'ngx-gallery-bullets',
-                    template: "\n        <div class=\"ngx-gallery-bullet\" *ngFor=\"let bullet of getBullets(); let i = index;\" (click)=\"handleChange($event, i)\" [ngClass]=\"{ 'ngx-gallery-active': i == active }\"></div>\n    ",
-                    styles: [":host { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet:hover, .ngx-gallery-bullet.ngx-gallery-active { background: black; } "]
-                },] },
-    ];
     /**
      * @nocollapse
      */
@@ -115,6 +440,29 @@ var NgxGalleryBulletsComponent = /** @class */ (function () {
         'active': [{ type: core.Input },],
         'onChange': [{ type: core.Output },],
     };
+NgxGalleryBulletsComponent.ɵfac = function NgxGalleryBulletsComponent_Factory(t) { return new (t || NgxGalleryBulletsComponent)(); };
+NgxGalleryBulletsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGalleryBulletsComponent, selectors: [["ngx-gallery-bullets"]], inputs: { active: "active", count: "count" }, outputs: { onChange: "onChange" }, decls: 3, vars: 1, consts: [["class", "ngx-gallery-bullet", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "ngx-gallery-bullet", 3, "ngClass", "click"]], template: function NgxGalleryBulletsComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵtext(0, "\n        ");
+        ɵngcc0.ɵɵtemplate(1, NgxGalleryBulletsComponent_div_1_Template, 1, 3, "div", 0);
+        ɵngcc0.ɵɵtext(2, "\n    ");
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngForOf", ctx.getBullets());
+    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: ["[_nghost-%COMP%] { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet[_ngcontent-%COMP%] { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet[_ngcontent-%COMP%]:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet[_ngcontent-%COMP%]:hover, .ngx-gallery-bullet.ngx-gallery-active[_ngcontent-%COMP%] { background: black; }"] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryBulletsComponent, [{
+        type: core.Component,
+        args: [{
+                selector: 'ngx-gallery-bullets',
+                template: "\n        <div class=\"ngx-gallery-bullet\" *ngFor=\"let bullet of getBullets(); let i = index;\" (click)=\"handleChange($event, i)\" [ngClass]=\"{ 'ngx-gallery-active': i == active }\"></div>\n    ",
+                styles: [":host { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet:hover, .ngx-gallery-bullet.ngx-gallery-active { background: black; } "]
+            }]
+    }], function () { return []; }, { active: [{
+            type: core.Input
+        }], onChange: [{
+            type: core.Output
+        }], count: [{
+            type: core.Input
+        }] }); })();
     return NgxGalleryBulletsComponent;
 }());
 
@@ -185,15 +533,17 @@ var NgxGalleryHelperService = /** @class */ (function () {
     NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {
         this.swipeHandlers.delete(id);
     };
-    NgxGalleryHelperService.decorators = [
-        { type: core.Injectable },
-    ];
     /**
      * @nocollapse
      */
     NgxGalleryHelperService.ctorParameters = function () { return [
         { type: core.Renderer, },
     ]; };
+NgxGalleryHelperService.ɵfac = function NgxGalleryHelperService_Factory(t) { return new (t || NgxGalleryHelperService)(ɵngcc0.ɵɵinject(core.Renderer)); };
+NgxGalleryHelperService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxGalleryHelperService, factory: function (t) { return NgxGalleryHelperService.ɵfac(t); } });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryHelperService, [{
+        type: core.Injectable
+    }], function () { return [{ type: core.Renderer }]; }, null); })();
     return NgxGalleryHelperService;
 }());
 
@@ -417,13 +767,6 @@ var NgxGalleryImageComponent = /** @class */ (function () {
     NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {
         return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));
     };
-    NgxGalleryImageComponent.decorators = [
-        { type: core.Component, args: [{
-                    selector: 'ngx-gallery-image',
-                    template: "\n        <div class=\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\">\n            <div class=\"ngx-gallery-image\" *ngFor=\"let image of getImages(); let i = index;\" [ngClass]=\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\" [style.background-image]=\"getSafeUrl(image.src)\" (click)=\"handleClick($event, image.index)\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, image.index)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-image-text\" *ngIf=\"showDescription && descriptions[image.index]\" [innerHTML]=\"descriptions[image.index]\" (click)=\"$event.stopPropagation()\"></div>\n            </div>\n        </div>\n        <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"selectedIndex\" (onChange)=\"show($event)\"></ngx-gallery-bullets>\n        <ngx-gallery-arrows class=\"ngx-gallery-image-size-{{size}}\" *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    ",
-                    styles: [":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } "]
-                },] },
-    ];
     /**
      * @nocollapse
      */
@@ -457,6 +800,89 @@ var NgxGalleryImageComponent = /** @class */ (function () {
         'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],
         'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],
     };
+NgxGalleryImageComponent.ɵfac = function NgxGalleryImageComponent_Factory(t) { return new (t || NgxGalleryImageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgxGalleryHelperService)); };
+NgxGalleryImageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGalleryImageComponent, selectors: [["ngx-gallery-image"]], hostBindings: function NgxGalleryImageComponent_HostBindings(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵlistener("mouseenter", function NgxGalleryImageComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })("mouseleave", function NgxGalleryImageComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); });
+    } }, inputs: { arrows: "arrows", selectedIndex: "selectedIndex", images: "images", clickable: "clickable", arrowsAutoHide: "arrowsAutoHide", swipe: "swipe", animation: "animation", size: "size", arrowPrevIcon: "arrowPrevIcon", arrowNextIcon: "arrowNextIcon", autoPlay: "autoPlay", autoPlayInterval: "autoPlayInterval", autoPlayPauseOnHover: "autoPlayPauseOnHover", infinityMove: "infinityMove", lazyLoading: "lazyLoading", actions: "actions", descriptions: "descriptions", showDescription: "showDescription", bullets: "bullets" }, outputs: { onClick: "onClick", onActiveChange: "onActiveChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 10, vars: 7, consts: [["class", "ngx-gallery-image", 3, "ngClass", "background-image", "click", 4, "ngFor", "ngForOf"], [3, "count", "active", "onChange", 4, "ngIf"], [3, "class", "prevDisabled", "nextDisabled", "arrowPrevIcon", "arrowNextIcon", "onPrevClick", "onNextClick", 4, "ngIf"], [1, "ngx-gallery-image", 3, "ngClass", "click"], [1, "ngx-gallery-icons-wrapper"], [3, "icon", "disabled", "titleText", "onClick", 4, "ngFor", "ngForOf"], ["class", "ngx-gallery-image-text", 3, "innerHTML", "click", 4, "ngIf"], [3, "icon", "disabled", "titleText", "onClick"], [1, "ngx-gallery-image-text", 3, "innerHTML", "click"], [3, "count", "active", "onChange"], [3, "prevDisabled", "nextDisabled", "arrowPrevIcon", "arrowNextIcon", "onPrevClick", "onNextClick"]], template: function NgxGalleryImageComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵtext(0, "\n        ");
+        ɵngcc0.ɵɵelementStart(1, "div");
+        ɵngcc0.ɵɵtext(2, "\n            ");
+        ɵngcc0.ɵɵtemplate(3, NgxGalleryImageComponent_div_3_Template, 9, 10, "div", 0);
+        ɵngcc0.ɵɵtext(4, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(5, "\n        ");
+        ɵngcc0.ɵɵtemplate(6, NgxGalleryImageComponent_ngx_gallery_bullets_6_Template, 1, 2, "ngx-gallery-bullets", 1);
+        ɵngcc0.ɵɵtext(7, "\n        ");
+        ɵngcc0.ɵɵtemplate(8, NgxGalleryImageComponent_ngx_gallery_arrows_8_Template, 1, 7, "ngx-gallery-arrows", 2);
+        ɵngcc0.ɵɵtext(9, "\n    ");
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate2("ngx-gallery-image-wrapper ngx-gallery-animation-", ctx.animation, " ngx-gallery-image-size-", ctx.size, "");
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngForOf", ctx.getImages());
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.bullets);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.arrows);
+    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgClass, NgxGalleryActionComponent,
+        NgxGalleryBulletsComponent,
+        NgxGalleryArrowsComponent], styles: ["[_nghost-%COMP%] { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper[_ngcontent-%COMP%] { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image[_ngcontent-%COMP%] { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active[_ngcontent-%COMP%] { z-index: 1000; } .ngx-gallery-image-size-cover[_ngcontent-%COMP%]   .ngx-gallery-image[_ngcontent-%COMP%] { background-size: cover; } .ngx-gallery-image-size-contain[_ngcontent-%COMP%]   .ngx-gallery-image[_ngcontent-%COMP%] { background-size: contain; } .ngx-gallery-animation-fade[_ngcontent-%COMP%]   .ngx-gallery-image[_ngcontent-%COMP%] { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade[_ngcontent-%COMP%]   .ngx-gallery-image.ngx-gallery-active[_ngcontent-%COMP%] { opacity: 1; } .ngx-gallery-animation-slide[_ngcontent-%COMP%]   .ngx-gallery-image[_ngcontent-%COMP%] { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide[_ngcontent-%COMP%]   .ngx-gallery-image.ngx-gallery-active[_ngcontent-%COMP%] { left: 0px; } .ngx-gallery-animation-slide[_ngcontent-%COMP%]   .ngx-gallery-image.ngx-gallery-inactive-left[_ngcontent-%COMP%] { left: -100%; } .ngx-gallery-animation-slide[_ngcontent-%COMP%]   .ngx-gallery-image.ngx-gallery-inactive-right[_ngcontent-%COMP%] { left: 100%; } .ngx-gallery-animation-rotate[_ngcontent-%COMP%]   .ngx-gallery-image[_ngcontent-%COMP%] { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate[_ngcontent-%COMP%]   .ngx-gallery-image.ngx-gallery-active[_ngcontent-%COMP%] { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom[_ngcontent-%COMP%]   .ngx-gallery-image[_ngcontent-%COMP%] { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom[_ngcontent-%COMP%]   .ngx-gallery-image.ngx-gallery-active[_ngcontent-%COMP%] { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text[_ngcontent-%COMP%] { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; }"] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryImageComponent, [{
+        type: core.Component,
+        args: [{
+                selector: 'ngx-gallery-image',
+                template: "\n        <div class=\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\">\n            <div class=\"ngx-gallery-image\" *ngFor=\"let image of getImages(); let i = index;\" [ngClass]=\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\" [style.background-image]=\"getSafeUrl(image.src)\" (click)=\"handleClick($event, image.index)\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, image.index)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-image-text\" *ngIf=\"showDescription && descriptions[image.index]\" [innerHTML]=\"descriptions[image.index]\" (click)=\"$event.stopPropagation()\"></div>\n            </div>\n        </div>\n        <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"selectedIndex\" (onChange)=\"show($event)\"></ngx-gallery-bullets>\n        <ngx-gallery-arrows class=\"ngx-gallery-image-size-{{size}}\" *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    ",
+                styles: [":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } "]
+            }]
+    }], function () { return [{ type: ɵngcc2.DomSanitizer }, { type: ɵngcc0.ElementRef }, { type: NgxGalleryHelperService }]; }, { onClick: [{
+            type: core.Output
+        }], onActiveChange: [{
+            type: core.Output
+        }], arrows: [{
+            type: core.Input
+        }], onMouseEnter: [{
+            type: core.HostListener,
+            args: ['mouseenter']
+        }], onMouseLeave: [{
+            type: core.HostListener,
+            args: ['mouseleave']
+        }], selectedIndex: [{
+            type: core.Input
+        }], images: [{
+            type: core.Input
+        }], clickable: [{
+            type: core.Input
+        }], arrowsAutoHide: [{
+            type: core.Input
+        }], swipe: [{
+            type: core.Input
+        }], animation: [{
+            type: core.Input
+        }], size: [{
+            type: core.Input
+        }], arrowPrevIcon: [{
+            type: core.Input
+        }], arrowNextIcon: [{
+            type: core.Input
+        }], autoPlay: [{
+            type: core.Input
+        }], autoPlayInterval: [{
+            type: core.Input
+        }], autoPlayPauseOnHover: [{
+            type: core.Input
+        }], infinityMove: [{
+            type: core.Input
+        }], lazyLoading: [{
+            type: core.Input
+        }], actions: [{
+            type: core.Input
+        }], descriptions: [{
+            type: core.Input
+        }], showDescription: [{
+            type: core.Input
+        }], bullets: [{
+            type: core.Input
+        }] }); })();
     return NgxGalleryImageComponent;
 }());
 
@@ -773,13 +1199,6 @@ var NgxGalleryThumbnailsComponent = /** @class */ (function () {
     NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {
         return this.sanitization.bypassSecurityTrustStyle(value);
     };
-    NgxGalleryThumbnailsComponent.decorators = [
-        { type: core.Component, args: [{
-                    selector: 'ngx-gallery-thumbnails',
-                    template: "\n    <div class=\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\">\n        <div class=\"ngx-gallery-thumbnails\" [style.transform]=\"'translateX(' + thumbnailsLeft + ')'\" [style.marginLeft]=\"thumbnailsMarginLeft\">\n            <a [href]=\"hasLink(i) ? links[i] : '#'\" [target]=\"linkTarget\" class=\"ngx-gallery-thumbnail\" *ngFor=\"let image of getImages(); let i = index;\" [style.background-image]=\"getSafeUrl(image)\" (click)=\"handleClick($event, i)\" [style.width]=\"getThumbnailWidth()\" [style.height]=\"getThumbnailHeight()\" [style.left]=\"getThumbnailLeft(i)\" [style.top]=\"getThumbnailTop(i)\" [ngClass]=\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\" [attr.aria-label]=\"labels[i]\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, i)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-remaining-count-overlay\" *ngIf=\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\">\n                    <span class=\"ngx-gallery-remaining-count\">+{{remainingCountValue}}</span>\n                </div>\n            </a>\n        </div>\n    </div>\n    <ngx-gallery-arrows *ngIf=\"canShowArrows()\" (onPrevClick)=\"moveLeft()\" (onNextClick)=\"moveRight()\" [prevDisabled]=\"!canMoveLeft()\" [nextDisabled]=\"!canMoveRight()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    ",
-                    styles: [":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } "]
-                },] },
-    ];
     /**
      * @nocollapse
      */
@@ -813,6 +1232,90 @@ var NgxGalleryThumbnailsComponent = /** @class */ (function () {
         'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],
         'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],
     };
+NgxGalleryThumbnailsComponent.ɵfac = function NgxGalleryThumbnailsComponent_Factory(t) { return new (t || NgxGalleryThumbnailsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgxGalleryHelperService)); };
+NgxGalleryThumbnailsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGalleryThumbnailsComponent, selectors: [["ngx-gallery-thumbnails"]], hostBindings: function NgxGalleryThumbnailsComponent_HostBindings(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵlistener("mouseenter", function NgxGalleryThumbnailsComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })("mouseleave", function NgxGalleryThumbnailsComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); });
+    } }, inputs: { selectedIndex: "selectedIndex", images: "images", links: "links", labels: "labels", linkTarget: "linkTarget", columns: "columns", rows: "rows", arrows: "arrows", arrowsAutoHide: "arrowsAutoHide", margin: "margin", clickable: "clickable", swipe: "swipe", size: "size", arrowPrevIcon: "arrowPrevIcon", arrowNextIcon: "arrowNextIcon", moveSize: "moveSize", order: "order", remainingCount: "remainingCount", lazyLoading: "lazyLoading", actions: "actions" }, outputs: { onActiveChange: "onActiveChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 11, vars: 9, consts: [[1, "ngx-gallery-thumbnails"], ["class", "ngx-gallery-thumbnail", 3, "href", "target", "background-image", "width", "height", "left", "top", "ngClass", "click", 4, "ngFor", "ngForOf"], [3, "prevDisabled", "nextDisabled", "arrowPrevIcon", "arrowNextIcon", "onPrevClick", "onNextClick", 4, "ngIf"], [1, "ngx-gallery-thumbnail", 3, "href", "target", "ngClass", "click"], [1, "ngx-gallery-icons-wrapper"], [3, "icon", "disabled", "titleText", "onClick", 4, "ngFor", "ngForOf"], ["class", "ngx-gallery-remaining-count-overlay", 4, "ngIf"], [3, "icon", "disabled", "titleText", "onClick"], [1, "ngx-gallery-remaining-count-overlay"], [1, "ngx-gallery-remaining-count"], [3, "prevDisabled", "nextDisabled", "arrowPrevIcon", "arrowNextIcon", "onPrevClick", "onNextClick"]], template: function NgxGalleryThumbnailsComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵtext(0, "\n    ");
+        ɵngcc0.ɵɵelementStart(1, "div");
+        ɵngcc0.ɵɵtext(2, "\n        ");
+        ɵngcc0.ɵɵelementStart(3, "div", 0);
+        ɵngcc0.ɵɵtext(4, "\n            ");
+        ɵngcc0.ɵɵtemplate(5, NgxGalleryThumbnailsComponent_a_5_Template, 9, 19, "a", 1);
+        ɵngcc0.ɵɵtext(6, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(7, "\n    ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(8, "\n    ");
+        ɵngcc0.ɵɵtemplate(9, NgxGalleryThumbnailsComponent_ngx_gallery_arrows_9_Template, 1, 4, "ngx-gallery-arrows", 2);
+        ɵngcc0.ɵɵtext(10, "\n    ");
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-", ctx.size, "");
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵstyleProp("transform", "translateX(" + ctx.thumbnailsLeft + ")")("margin-left", ctx.thumbnailsMarginLeft);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngForOf", ctx.getImages());
+        ɵngcc0.ɵɵadvance(4);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.canShowArrows());
+    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgClass, NgxGalleryActionComponent,
+        NgxGalleryArrowsComponent], styles: ["[_nghost-%COMP%] { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper[_ngcontent-%COMP%] { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails[_ngcontent-%COMP%] { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails[_ngcontent-%COMP%]   .ngx-gallery-thumbnail[_ngcontent-%COMP%] { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover[_ngcontent-%COMP%]   .ngx-gallery-thumbnails[_ngcontent-%COMP%]   .ngx-gallery-thumbnail[_ngcontent-%COMP%] { background-size: cover; } .ngx-gallery-thumbnail-size-contain[_ngcontent-%COMP%]   .ngx-gallery-thumbnails[_ngcontent-%COMP%]   .ngx-gallery-thumbnail[_ngcontent-%COMP%] { background-size: contain; } .ngx-gallery-remaining-count-overlay[_ngcontent-%COMP%] { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count[_ngcontent-%COMP%] { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; }"] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryThumbnailsComponent, [{
+        type: core.Component,
+        args: [{
+                selector: 'ngx-gallery-thumbnails',
+                template: "\n    <div class=\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\">\n        <div class=\"ngx-gallery-thumbnails\" [style.transform]=\"'translateX(' + thumbnailsLeft + ')'\" [style.marginLeft]=\"thumbnailsMarginLeft\">\n            <a [href]=\"hasLink(i) ? links[i] : '#'\" [target]=\"linkTarget\" class=\"ngx-gallery-thumbnail\" *ngFor=\"let image of getImages(); let i = index;\" [style.background-image]=\"getSafeUrl(image)\" (click)=\"handleClick($event, i)\" [style.width]=\"getThumbnailWidth()\" [style.height]=\"getThumbnailHeight()\" [style.left]=\"getThumbnailLeft(i)\" [style.top]=\"getThumbnailTop(i)\" [ngClass]=\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\" [attr.aria-label]=\"labels[i]\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, i)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-remaining-count-overlay\" *ngIf=\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\">\n                    <span class=\"ngx-gallery-remaining-count\">+{{remainingCountValue}}</span>\n                </div>\n            </a>\n        </div>\n    </div>\n    <ngx-gallery-arrows *ngIf=\"canShowArrows()\" (onPrevClick)=\"moveLeft()\" (onNextClick)=\"moveRight()\" [prevDisabled]=\"!canMoveLeft()\" [nextDisabled]=\"!canMoveRight()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    ",
+                styles: [":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } "]
+            }]
+    }], function () { return [{ type: ɵngcc2.DomSanitizer }, { type: ɵngcc0.ElementRef }, { type: NgxGalleryHelperService }]; }, { onActiveChange: [{
+            type: core.Output
+        }], onMouseEnter: [{
+            type: core.HostListener,
+            args: ['mouseenter']
+        }], onMouseLeave: [{
+            type: core.HostListener,
+            args: ['mouseleave']
+        }], selectedIndex: [{
+            type: core.Input
+        }], images: [{
+            type: core.Input
+        }], links: [{
+            type: core.Input
+        }], labels: [{
+            type: core.Input
+        }], linkTarget: [{
+            type: core.Input
+        }], columns: [{
+            type: core.Input
+        }], rows: [{
+            type: core.Input
+        }], arrows: [{
+            type: core.Input
+        }], arrowsAutoHide: [{
+            type: core.Input
+        }], margin: [{
+            type: core.Input
+        }], clickable: [{
+            type: core.Input
+        }], swipe: [{
+            type: core.Input
+        }], size: [{
+            type: core.Input
+        }], arrowPrevIcon: [{
+            type: core.Input
+        }], arrowNextIcon: [{
+            type: core.Input
+        }], moveSize: [{
+            type: core.Input
+        }], order: [{
+            type: core.Input
+        }], remainingCount: [{
+            type: core.Input
+        }], lazyLoading: [{
+            type: core.Input
+        }], actions: [{
+            type: core.Input
+        }] }); })();
     return NgxGalleryThumbnailsComponent;
 }());
 
@@ -1308,13 +1811,6 @@ var NgxGalleryPreviewComponent = /** @class */ (function () {
         }
         return true;
     };
-    NgxGalleryPreviewComponent.decorators = [
-        { type: core.Component, args: [{
-                    selector: 'ngx-gallery-preview',
-                    template: "\n        <ngx-gallery-arrows *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n        <div class=\"ngx-gallery-preview-top\">\n            <div class=\"ngx-gallery-preview-icons\">\n                <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, index)\"></ngx-gallery-action>\n                <a *ngIf=\"download && src\" [href]=\"src\" class=\"ngx-gallery-icon\" aria-hidden=\"true\" download>\n                    <i class=\"ngx-gallery-icon-content {{ downloadIcon }}\"></i>\n                </a>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomOutIcon\" [disabled]=\"!canZoomOut()\" (onClick)=\"zoomOut()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomInIcon\" [disabled]=\"!canZoomIn()\" (onClick)=\"zoomIn()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateLeftIcon\" (onClick)=\"rotateLeft()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateRightIcon\" (onClick)=\"rotateRight()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"fullscreen\" [icon]=\"'ngx-gallery-fullscreen ' + fullscreenIcon\" (onClick)=\"manageFullscreen()\"></ngx-gallery-action>\n                <ngx-gallery-action [icon]=\"'ngx-gallery-close ' + closeIcon\" (onClick)=\"close()\"></ngx-gallery-action>\n            </div>\n        </div>\n        <div class=\"ngx-spinner-wrapper ngx-gallery-center\" [class.ngx-gallery-active]=\"showSpinner\">\n            <i class=\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\" aria-hidden=\"true\"></i>\n        </div>\n        <div class=\"ngx-gallery-preview-wrapper\" (click)=\"closeOnClick && close()\" (mouseup)=\"mouseUpHandler($event)\" (mousemove)=\"mouseMoveHandler($event)\" (touchend)=\"mouseUpHandler($event)\" (touchmove)=\"mouseMoveHandler($event)\">\n            <div class=\"ngx-gallery-preview-img-wrapper\">\n                <img *ngIf=\"src\" #previewImage class=\"ngx-gallery-preview-img ngx-gallery-center\" [src]=\"src\" (click)=\"$event.stopPropagation()\" (mouseenter)=\"imageMouseEnter()\" (mouseleave)=\"imageMouseLeave()\" (mousedown)=\"mouseDownHandler($event)\" (touchstart)=\"mouseDownHandler($event)\" [class.ngx-gallery-active]=\"!loading\" [class.animation]=\"animation\" [class.ngx-gallery-grab]=\"canDragOnZoom()\" [style.transform]=\"getTransform()\" [style.left]=\"positionLeft + 'px'\" [style.top]=\"positionTop + 'px'\"/>\n                <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"index\" (onChange)=\"showAtIndex($event)\"></ngx-gallery-bullets>\n            </div>\n            <div class=\"ngx-gallery-preview-text\" *ngIf=\"showDescription && description\" [innerHTML]=\"description\" (click)=\"$event.stopPropagation()\"></div>\n        </div>\n    ",
-                    styles: [":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } :host /deep/ ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } "]
-                },] },
-    ];
     /**
      * @nocollapse
      */
@@ -1367,6 +1863,188 @@ var NgxGalleryPreviewComponent = /** @class */ (function () {
         'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],
         'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],
     };
+NgxGalleryPreviewComponent.ɵfac = function NgxGalleryPreviewComponent_Factory(t) { return new (t || NgxGalleryPreviewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgxGalleryHelperService), ɵngcc0.ɵɵdirectiveInject(core.Renderer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
+NgxGalleryPreviewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGalleryPreviewComponent, selectors: [["ngx-gallery-preview"]], viewQuery: function NgxGalleryPreviewComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c3, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.previewImage = _t.first);
+    } }, hostBindings: function NgxGalleryPreviewComponent_HostBindings(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵlistener("mouseenter", function NgxGalleryPreviewComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })("mouseleave", function NgxGalleryPreviewComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); });
+    } }, inputs: { arrows: "arrows", images: "images", descriptions: "descriptions", showDescription: "showDescription", arrowsAutoHide: "arrowsAutoHide", swipe: "swipe", fullscreen: "fullscreen", forceFullscreen: "forceFullscreen", closeOnClick: "closeOnClick", closeOnEsc: "closeOnEsc", keyboardNavigation: "keyboardNavigation", arrowPrevIcon: "arrowPrevIcon", arrowNextIcon: "arrowNextIcon", closeIcon: "closeIcon", fullscreenIcon: "fullscreenIcon", spinnerIcon: "spinnerIcon", autoPlay: "autoPlay", autoPlayInterval: "autoPlayInterval", autoPlayPauseOnHover: "autoPlayPauseOnHover", infinityMove: "infinityMove", zoom: "zoom", zoomStep: "zoomStep", zoomMax: "zoomMax", zoomMin: "zoomMin", zoomInIcon: "zoomInIcon", zoomOutIcon: "zoomOutIcon", animation: "animation", actions: "actions", rotate: "rotate", rotateLeftIcon: "rotateLeftIcon", rotateRightIcon: "rotateRightIcon", download: "download", downloadIcon: "downloadIcon", bullets: "bullets" }, outputs: { onOpen: "onOpen", onClose: "onClose", onActiveChange: "onActiveChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 42, vars: 17, consts: [[3, "prevDisabled", "nextDisabled", "arrowPrevIcon", "arrowNextIcon", "onPrevClick", "onNextClick", 4, "ngIf"], [1, "ngx-gallery-preview-top"], [1, "ngx-gallery-preview-icons"], [3, "icon", "disabled", "titleText", "onClick", 4, "ngFor", "ngForOf"], ["class", "ngx-gallery-icon", "aria-hidden", "true", "download", "", 3, "href", 4, "ngIf"], [3, "icon", "disabled", "onClick", 4, "ngIf"], [3, "icon", "onClick", 4, "ngIf"], [3, "icon", "onClick"], [1, "ngx-spinner-wrapper", "ngx-gallery-center"], ["aria-hidden", "true"], [1, "ngx-gallery-preview-wrapper", 3, "click", "mouseup", "mousemove", "touchend", "touchmove"], [1, "ngx-gallery-preview-img-wrapper"], ["class", "ngx-gallery-preview-img ngx-gallery-center", 3, "src", "ngx-gallery-active", "animation", "ngx-gallery-grab", "transform", "left", "top", "click", "mouseenter", "mouseleave", "mousedown", "touchstart", 4, "ngIf"], [3, "count", "active", "onChange", 4, "ngIf"], ["class", "ngx-gallery-preview-text", 3, "innerHTML", "click", 4, "ngIf"], [3, "prevDisabled", "nextDisabled", "arrowPrevIcon", "arrowNextIcon", "onPrevClick", "onNextClick"], [3, "icon", "disabled", "titleText", "onClick"], ["aria-hidden", "true", "download", "", 1, "ngx-gallery-icon", 3, "href"], [3, "icon", "disabled", "onClick"], [1, "ngx-gallery-preview-img", "ngx-gallery-center", 3, "src", "click", "mouseenter", "mouseleave", "mousedown", "touchstart"], ["previewImage", ""], [3, "count", "active", "onChange"], [1, "ngx-gallery-preview-text", 3, "innerHTML", "click"]], template: function NgxGalleryPreviewComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵtext(0, "\n        ");
+        ɵngcc0.ɵɵtemplate(1, NgxGalleryPreviewComponent_ngx_gallery_arrows_1_Template, 1, 4, "ngx-gallery-arrows", 0);
+        ɵngcc0.ɵɵtext(2, "\n        ");
+        ɵngcc0.ɵɵelementStart(3, "div", 1);
+        ɵngcc0.ɵɵtext(4, "\n            ");
+        ɵngcc0.ɵɵelementStart(5, "div", 2);
+        ɵngcc0.ɵɵtext(6, "\n                ");
+        ɵngcc0.ɵɵtemplate(7, NgxGalleryPreviewComponent_ngx_gallery_action_7_Template, 1, 3, "ngx-gallery-action", 3);
+        ɵngcc0.ɵɵtext(8, "\n                ");
+        ɵngcc0.ɵɵtemplate(9, NgxGalleryPreviewComponent_a_9_Template, 4, 4, "a", 4);
+        ɵngcc0.ɵɵtext(10, "\n                ");
+        ɵngcc0.ɵɵtemplate(11, NgxGalleryPreviewComponent_ngx_gallery_action_11_Template, 1, 2, "ngx-gallery-action", 5);
+        ɵngcc0.ɵɵtext(12, "\n                ");
+        ɵngcc0.ɵɵtemplate(13, NgxGalleryPreviewComponent_ngx_gallery_action_13_Template, 1, 2, "ngx-gallery-action", 5);
+        ɵngcc0.ɵɵtext(14, "\n                ");
+        ɵngcc0.ɵɵtemplate(15, NgxGalleryPreviewComponent_ngx_gallery_action_15_Template, 1, 1, "ngx-gallery-action", 6);
+        ɵngcc0.ɵɵtext(16, "\n                ");
+        ɵngcc0.ɵɵtemplate(17, NgxGalleryPreviewComponent_ngx_gallery_action_17_Template, 1, 1, "ngx-gallery-action", 6);
+        ɵngcc0.ɵɵtext(18, "\n                ");
+        ɵngcc0.ɵɵtemplate(19, NgxGalleryPreviewComponent_ngx_gallery_action_19_Template, 1, 1, "ngx-gallery-action", 6);
+        ɵngcc0.ɵɵtext(20, "\n                ");
+        ɵngcc0.ɵɵelementStart(21, "ngx-gallery-action", 7);
+        ɵngcc0.ɵɵlistener("onClick", function NgxGalleryPreviewComponent_Template_ngx_gallery_action_onClick_21_listener() { return ctx.close(); });
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(22, "\n            ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(23, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(24, "\n        ");
+        ɵngcc0.ɵɵelementStart(25, "div", 8);
+        ɵngcc0.ɵɵtext(26, "\n            ");
+        ɵngcc0.ɵɵelement(27, "i", 9);
+        ɵngcc0.ɵɵtext(28, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(29, "\n        ");
+        ɵngcc0.ɵɵelementStart(30, "div", 10);
+        ɵngcc0.ɵɵlistener("click", function NgxGalleryPreviewComponent_Template_div_click_30_listener() { return ctx.closeOnClick && ctx.close(); })("mouseup", function NgxGalleryPreviewComponent_Template_div_mouseup_30_listener($event) { return ctx.mouseUpHandler($event); })("mousemove", function NgxGalleryPreviewComponent_Template_div_mousemove_30_listener($event) { return ctx.mouseMoveHandler($event); })("touchend", function NgxGalleryPreviewComponent_Template_div_touchend_30_listener($event) { return ctx.mouseUpHandler($event); })("touchmove", function NgxGalleryPreviewComponent_Template_div_touchmove_30_listener($event) { return ctx.mouseMoveHandler($event); });
+        ɵngcc0.ɵɵtext(31, "\n            ");
+        ɵngcc0.ɵɵelementStart(32, "div", 11);
+        ɵngcc0.ɵɵtext(33, "\n                ");
+        ɵngcc0.ɵɵtemplate(34, NgxGalleryPreviewComponent_img_34_Template, 2, 13, "img", 12);
+        ɵngcc0.ɵɵtext(35, "\n                ");
+        ɵngcc0.ɵɵtemplate(36, NgxGalleryPreviewComponent_ngx_gallery_bullets_36_Template, 1, 2, "ngx-gallery-bullets", 13);
+        ɵngcc0.ɵɵtext(37, "\n            ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(38, "\n            ");
+        ɵngcc0.ɵɵtemplate(39, NgxGalleryPreviewComponent_div_39_Template, 1, 1, "div", 14);
+        ɵngcc0.ɵɵtext(40, "\n        ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(41, "\n    ");
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.arrows);
+        ɵngcc0.ɵɵadvance(6);
+        ɵngcc0.ɵɵproperty("ngForOf", ctx.actions);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.download && ctx.src);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.zoom);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.zoom);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.rotate);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.rotate);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.fullscreen);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("icon", "ngx-gallery-close " + ctx.closeIcon);
+        ɵngcc0.ɵɵadvance(4);
+        ɵngcc0.ɵɵclassProp("ngx-gallery-active", ctx.showSpinner);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-icon ngx-gallery-spinner ", ctx.spinnerIcon, "");
+        ɵngcc0.ɵɵadvance(7);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.src);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.bullets);
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.showDescription && ctx.description);
+    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, NgxGalleryActionComponent,
+        NgxGalleryArrowsComponent,
+        NgxGalleryBulletsComponent], styles: [".ngx-gallery-active[_nghost-%COMP%] { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } [_nghost-%COMP%] { display: none; } [_nghost-%COMP%]     .ngx-gallery-arrow { font-size: 50px; } [_nghost-%COMP%]     ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img[_ngcontent-%COMP%] { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation[_ngcontent-%COMP%] { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active[_ngcontent-%COMP%] { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab[_ngcontent-%COMP%] { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner[_ngcontent-%COMP%] { font-size: 50px; left: 0; display: inline-block; } [_nghost-%COMP%]     .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } [_nghost-%COMP%]     .ngx-gallery-preview-icons { float: right; } [_nghost-%COMP%]     .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } [_nghost-%COMP%]     .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper[_ngcontent-%COMP%] { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active[_ngcontent-%COMP%] { display: inline-block; } .ngx-gallery-center[_ngcontent-%COMP%] { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text[_ngcontent-%COMP%] { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper[_ngcontent-%COMP%] { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper[_ngcontent-%COMP%] { flex: 1 1 auto; position: relative; }"] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryPreviewComponent, [{
+        type: core.Component,
+        args: [{
+                selector: 'ngx-gallery-preview',
+                template: "\n        <ngx-gallery-arrows *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n        <div class=\"ngx-gallery-preview-top\">\n            <div class=\"ngx-gallery-preview-icons\">\n                <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, index)\"></ngx-gallery-action>\n                <a *ngIf=\"download && src\" [href]=\"src\" class=\"ngx-gallery-icon\" aria-hidden=\"true\" download>\n                    <i class=\"ngx-gallery-icon-content {{ downloadIcon }}\"></i>\n                </a>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomOutIcon\" [disabled]=\"!canZoomOut()\" (onClick)=\"zoomOut()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomInIcon\" [disabled]=\"!canZoomIn()\" (onClick)=\"zoomIn()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateLeftIcon\" (onClick)=\"rotateLeft()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateRightIcon\" (onClick)=\"rotateRight()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"fullscreen\" [icon]=\"'ngx-gallery-fullscreen ' + fullscreenIcon\" (onClick)=\"manageFullscreen()\"></ngx-gallery-action>\n                <ngx-gallery-action [icon]=\"'ngx-gallery-close ' + closeIcon\" (onClick)=\"close()\"></ngx-gallery-action>\n            </div>\n        </div>\n        <div class=\"ngx-spinner-wrapper ngx-gallery-center\" [class.ngx-gallery-active]=\"showSpinner\">\n            <i class=\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\" aria-hidden=\"true\"></i>\n        </div>\n        <div class=\"ngx-gallery-preview-wrapper\" (click)=\"closeOnClick && close()\" (mouseup)=\"mouseUpHandler($event)\" (mousemove)=\"mouseMoveHandler($event)\" (touchend)=\"mouseUpHandler($event)\" (touchmove)=\"mouseMoveHandler($event)\">\n            <div class=\"ngx-gallery-preview-img-wrapper\">\n                <img *ngIf=\"src\" #previewImage class=\"ngx-gallery-preview-img ngx-gallery-center\" [src]=\"src\" (click)=\"$event.stopPropagation()\" (mouseenter)=\"imageMouseEnter()\" (mouseleave)=\"imageMouseLeave()\" (mousedown)=\"mouseDownHandler($event)\" (touchstart)=\"mouseDownHandler($event)\" [class.ngx-gallery-active]=\"!loading\" [class.animation]=\"animation\" [class.ngx-gallery-grab]=\"canDragOnZoom()\" [style.transform]=\"getTransform()\" [style.left]=\"positionLeft + 'px'\" [style.top]=\"positionTop + 'px'\"/>\n                <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"index\" (onChange)=\"showAtIndex($event)\"></ngx-gallery-bullets>\n            </div>\n            <div class=\"ngx-gallery-preview-text\" *ngIf=\"showDescription && description\" [innerHTML]=\"description\" (click)=\"$event.stopPropagation()\"></div>\n        </div>\n    ",
+                styles: [":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } :host /deep/ ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } "]
+            }]
+    }], function () { return [{ type: ɵngcc2.DomSanitizer }, { type: ɵngcc0.ElementRef }, { type: NgxGalleryHelperService }, { type: core.Renderer }, { type: ɵngcc0.ChangeDetectorRef }]; }, { onOpen: [{
+            type: core.Output
+        }], onClose: [{
+            type: core.Output
+        }], onActiveChange: [{
+            type: core.Output
+        }], arrows: [{
+            type: core.Input
+        }], onMouseEnter: [{
+            type: core.HostListener,
+            args: ['mouseenter']
+        }], onMouseLeave: [{
+            type: core.HostListener,
+            args: ['mouseleave']
+        }], images: [{
+            type: core.Input
+        }], descriptions: [{
+            type: core.Input
+        }], showDescription: [{
+            type: core.Input
+        }], arrowsAutoHide: [{
+            type: core.Input
+        }], swipe: [{
+            type: core.Input
+        }], fullscreen: [{
+            type: core.Input
+        }], forceFullscreen: [{
+            type: core.Input
+        }], closeOnClick: [{
+            type: core.Input
+        }], closeOnEsc: [{
+            type: core.Input
+        }], keyboardNavigation: [{
+            type: core.Input
+        }], arrowPrevIcon: [{
+            type: core.Input
+        }], arrowNextIcon: [{
+            type: core.Input
+        }], closeIcon: [{
+            type: core.Input
+        }], fullscreenIcon: [{
+            type: core.Input
+        }], spinnerIcon: [{
+            type: core.Input
+        }], autoPlay: [{
+            type: core.Input
+        }], autoPlayInterval: [{
+            type: core.Input
+        }], autoPlayPauseOnHover: [{
+            type: core.Input
+        }], infinityMove: [{
+            type: core.Input
+        }], zoom: [{
+            type: core.Input
+        }], zoomStep: [{
+            type: core.Input
+        }], zoomMax: [{
+            type: core.Input
+        }], zoomMin: [{
+            type: core.Input
+        }], zoomInIcon: [{
+            type: core.Input
+        }], zoomOutIcon: [{
+            type: core.Input
+        }], animation: [{
+            type: core.Input
+        }], actions: [{
+            type: core.Input
+        }], rotate: [{
+            type: core.Input
+        }], rotateLeftIcon: [{
+            type: core.Input
+        }], rotateRightIcon: [{
+            type: core.Input
+        }], download: [{
+            type: core.Input
+        }], downloadIcon: [{
+            type: core.Input
+        }], bullets: [{
+            type: core.Input
+        }], previewImage: [{
+            type: core.ViewChild,
+            args: ['previewImage']
+        }] }); })();
     return NgxGalleryPreviewComponent;
 }());
 
@@ -1834,14 +2512,6 @@ var NgxGalleryComponent = /** @class */ (function () {
     NgxGalleryComponent.prototype.combineOptions = function (first, second) {
         Object.keys(second).map(function (val) { return first[val] = second[val] !== undefined ? second[val] : first[val]; });
     };
-    NgxGalleryComponent.decorators = [
-        { type: core.Component, args: [{
-                    selector: 'ngx-gallery',
-                    template: "\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n        <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n        <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n        <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n    ",
-                    styles: [":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } "],
-                    providers: [NgxGalleryHelperService]
-                },] },
-    ];
     /**
      * @nocollapse
      */
@@ -1864,6 +2534,91 @@ var NgxGalleryComponent = /** @class */ (function () {
         'left': [{ type: core.HostBinding, args: ['style.left',] },],
         'onResize': [{ type: core.HostListener, args: ['window:resize',] },],
     };
+NgxGalleryComponent.ɵfac = function NgxGalleryComponent_Factory(t) { return new (t || NgxGalleryComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
+NgxGalleryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGalleryComponent, selectors: [["ngx-gallery"]], viewQuery: function NgxGalleryComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(NgxGalleryPreviewComponent, true);
+        ɵngcc0.ɵɵviewQuery(NgxGalleryImageComponent, true);
+        ɵngcc0.ɵɵviewQuery(NgxGalleryThumbnailsComponent, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.preview = _t.first);
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.image = _t.first);
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.thubmnails = _t.first);
+    } }, hostVars: 6, hostBindings: function NgxGalleryComponent_HostBindings(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵlistener("resize", function NgxGalleryComponent_resize_HostBindingHandler() { return ctx.onResize(); }, false, ɵngcc0.ɵɵresolveWindow);
+    } if (rf & 2) {
+        ɵngcc0.ɵɵstyleProp("width", ctx.width)("left", ctx.left)("height", ctx.height);
+    } }, inputs: { options: "options", images: "images" }, outputs: { imagesReady: "imagesReady", change: "change", previewOpen: "previewOpen", previewClose: "previewClose", previewChange: "previewChange" }, features: [ɵngcc0.ɵɵProvidersFeature([NgxGalleryHelperService])], decls: 10, vars: 41, consts: [[3, "height", "images", "clickable", "selectedIndex", "arrows", "arrowsAutoHide", "arrowPrevIcon", "arrowNextIcon", "swipe", "animation", "size", "autoPlay", "autoPlayInterval", "autoPlayPauseOnHover", "infinityMove", "lazyLoading", "actions", "descriptions", "showDescription", "bullets", "onClick", "onActiveChange", 4, "ngIf"], [3, "marginTop", "marginBottom", "height", "images", "links", "labels", "linkTarget", "selectedIndex", "columns", "rows", "margin", "arrows", "arrowsAutoHide", "arrowPrevIcon", "arrowNextIcon", "clickable", "swipe", "size", "moveSize", "order", "remainingCount", "lazyLoading", "actions", "onActiveChange", 4, "ngIf"], [3, "images", "descriptions", "showDescription", "arrowPrevIcon", "arrowNextIcon", "closeIcon", "fullscreenIcon", "spinnerIcon", "arrows", "arrowsAutoHide", "swipe", "fullscreen", "forceFullscreen", "closeOnClick", "closeOnEsc", "keyboardNavigation", "animation", "autoPlay", "autoPlayInterval", "autoPlayPauseOnHover", "infinityMove", "zoom", "zoomStep", "zoomMax", "zoomMin", "zoomInIcon", "zoomOutIcon", "actions", "rotate", "rotateLeftIcon", "rotateRightIcon", "download", "downloadIcon", "bullets", "onClose", "onOpen", "onActiveChange"], [3, "images", "clickable", "selectedIndex", "arrows", "arrowsAutoHide", "arrowPrevIcon", "arrowNextIcon", "swipe", "animation", "size", "autoPlay", "autoPlayInterval", "autoPlayPauseOnHover", "infinityMove", "lazyLoading", "actions", "descriptions", "showDescription", "bullets", "onClick", "onActiveChange"], [3, "images", "links", "labels", "linkTarget", "selectedIndex", "columns", "rows", "margin", "arrows", "arrowsAutoHide", "arrowPrevIcon", "arrowNextIcon", "clickable", "swipe", "size", "moveSize", "order", "remainingCount", "lazyLoading", "actions", "onActiveChange"]], template: function NgxGalleryComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵtext(0, "\n    ");
+        ɵngcc0.ɵɵelementStart(1, "div");
+        ɵngcc0.ɵɵtext(2, "\n        ");
+        ɵngcc0.ɵɵtemplate(3, NgxGalleryComponent_ngx_gallery_image_3_Template, 1, 21, "ngx-gallery-image", 0);
+        ɵngcc0.ɵɵtext(4, "\n\n        ");
+        ɵngcc0.ɵɵtemplate(5, NgxGalleryComponent_ngx_gallery_thumbnails_5_Template, 1, 27, "ngx-gallery-thumbnails", 1);
+        ɵngcc0.ɵɵtext(6, "\n\n        ");
+        ɵngcc0.ɵɵelementStart(7, "ngx-gallery-preview", 2);
+        ɵngcc0.ɵɵlistener("onClose", function NgxGalleryComponent_Template_ngx_gallery_preview_onClose_7_listener() { return ctx.onPreviewClose(); })("onOpen", function NgxGalleryComponent_Template_ngx_gallery_preview_onOpen_7_listener() { return ctx.onPreviewOpen(); })("onActiveChange", function NgxGalleryComponent_Template_ngx_gallery_preview_onActiveChange_7_listener($event) { return ctx.previewSelect($event); });
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(8, "\n    ");
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtext(9, "\n    ");
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate1("ngx-gallery-layout ", ctx.currentOptions == null ? null : ctx.currentOptions.layout, "");
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.currentOptions == null ? null : ctx.currentOptions.image);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.currentOptions == null ? null : ctx.currentOptions.thumbnails);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassProp("ngx-gallery-active", ctx.previewEnabled);
+        ɵngcc0.ɵɵproperty("images", ctx.bigImages)("descriptions", ctx.descriptions)("showDescription", ctx.currentOptions == null ? null : ctx.currentOptions.previewDescription)("arrowPrevIcon", ctx.currentOptions == null ? null : ctx.currentOptions.arrowPrevIcon)("arrowNextIcon", ctx.currentOptions == null ? null : ctx.currentOptions.arrowNextIcon)("closeIcon", ctx.currentOptions == null ? null : ctx.currentOptions.closeIcon)("fullscreenIcon", ctx.currentOptions == null ? null : ctx.currentOptions.fullscreenIcon)("spinnerIcon", ctx.currentOptions == null ? null : ctx.currentOptions.spinnerIcon)("arrows", ctx.currentOptions == null ? null : ctx.currentOptions.previewArrows)("arrowsAutoHide", ctx.currentOptions == null ? null : ctx.currentOptions.previewArrowsAutoHide)("swipe", ctx.currentOptions == null ? null : ctx.currentOptions.previewSwipe)("fullscreen", ctx.currentOptions == null ? null : ctx.currentOptions.previewFullscreen)("forceFullscreen", ctx.currentOptions == null ? null : ctx.currentOptions.previewForceFullscreen)("closeOnClick", ctx.currentOptions == null ? null : ctx.currentOptions.previewCloseOnClick)("closeOnEsc", ctx.currentOptions == null ? null : ctx.currentOptions.previewCloseOnEsc)("keyboardNavigation", ctx.currentOptions == null ? null : ctx.currentOptions.previewKeyboardNavigation)("animation", ctx.currentOptions == null ? null : ctx.currentOptions.previewAnimation)("autoPlay", ctx.currentOptions == null ? null : ctx.currentOptions.previewAutoPlay)("autoPlayInterval", ctx.currentOptions == null ? null : ctx.currentOptions.previewAutoPlayInterval)("autoPlayPauseOnHover", ctx.currentOptions == null ? null : ctx.currentOptions.previewAutoPlayPauseOnHover)("infinityMove", ctx.currentOptions == null ? null : ctx.currentOptions.previewInfinityMove)("zoom", ctx.currentOptions == null ? null : ctx.currentOptions.previewZoom)("zoomStep", ctx.currentOptions == null ? null : ctx.currentOptions.previewZoomStep)("zoomMax", ctx.currentOptions == null ? null : ctx.currentOptions.previewZoomMax)("zoomMin", ctx.currentOptions == null ? null : ctx.currentOptions.previewZoomMin)("zoomInIcon", ctx.currentOptions == null ? null : ctx.currentOptions.zoomInIcon)("zoomOutIcon", ctx.currentOptions == null ? null : ctx.currentOptions.zoomOutIcon)("actions", ctx.currentOptions == null ? null : ctx.currentOptions.actions)("rotate", ctx.currentOptions == null ? null : ctx.currentOptions.previewRotate)("rotateLeftIcon", ctx.currentOptions == null ? null : ctx.currentOptions.rotateLeftIcon)("rotateRightIcon", ctx.currentOptions == null ? null : ctx.currentOptions.rotateRightIcon)("download", ctx.currentOptions == null ? null : ctx.currentOptions.previewDownload)("downloadIcon", ctx.currentOptions == null ? null : ctx.currentOptions.downloadIcon)("bullets", ctx.currentOptions == null ? null : ctx.currentOptions.previewBullets);
+    } }, directives: [ɵngcc1.NgIf, NgxGalleryPreviewComponent,
+        NgxGalleryImageComponent,
+        NgxGalleryThumbnailsComponent], styles: ["[_nghost-%COMP%] { display: inline-block; } [_nghost-%COMP%]    > *[_ngcontent-%COMP%] { float: left; } [_nghost-%COMP%]     * { box-sizing: border-box; } [_nghost-%COMP%]     .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } [_nghost-%COMP%]     .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } [_nghost-%COMP%]     .ngx-gallery-clickable { cursor: pointer; } [_nghost-%COMP%]     .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } [_nghost-%COMP%]     .ngx-gallery-icons-wrapper { float: right; } [_nghost-%COMP%]   .ngx-gallery-layout[_ngcontent-%COMP%] { width: 100%; height: 100%; display: flex; flex-direction: column; } [_nghost-%COMP%]   .ngx-gallery-layout.thumbnails-top[_ngcontent-%COMP%]   ngx-gallery-image[_ngcontent-%COMP%] { order: 2; } [_nghost-%COMP%]   .ngx-gallery-layout.thumbnails-top[_ngcontent-%COMP%]   ngx-gallery-thumbnails[_ngcontent-%COMP%] { order: 1; } [_nghost-%COMP%]   .ngx-gallery-layout.thumbnails-bottom[_ngcontent-%COMP%]   ngx-gallery-image[_ngcontent-%COMP%] { order: 1; } [_nghost-%COMP%]   .ngx-gallery-layout.thumbnails-bottom[_ngcontent-%COMP%]   ngx-gallery-thumbnails[_ngcontent-%COMP%] { order: 2; }"] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryComponent, [{
+        type: core.Component,
+        args: [{
+                selector: 'ngx-gallery',
+                template: "\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n        <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n        <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n        <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n    ",
+                styles: [":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } "],
+                providers: [NgxGalleryHelperService]
+            }]
+    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { imagesReady: [{
+            type: core.Output
+        }], change: [{
+            type: core.Output
+        }], previewOpen: [{
+            type: core.Output
+        }], previewClose: [{
+            type: core.Output
+        }], previewChange: [{
+            type: core.Output
+        }], options: [{
+            type: core.Input
+        }], onResize: [{
+            type: core.HostListener,
+            args: ['window:resize']
+        }], width: [{
+            type: core.HostBinding,
+            args: ['style.width']
+        }], left: [{
+            type: core.HostBinding,
+            args: ['style.left']
+        }], height: [{
+            type: core.HostBinding,
+            args: ['style.height']
+        }], images: [{
+            type: core.Input
+        }], preview: [{
+            type: core.ViewChild,
+            args: [NgxGalleryPreviewComponent]
+        }], image: [{
+            type: core.ViewChild,
+            args: [NgxGalleryImageComponent]
+        }], thubmnails: [{
+            type: core.ViewChild,
+            args: [NgxGalleryThumbnailsComponent]
+        }] }); })();
     return NgxGalleryComponent;
 }());
 
@@ -1902,37 +2657,54 @@ var CustomHammerConfig = /** @class */ (function (_super) {
         });
         return _this;
     }
+CustomHammerConfig.ɵfac = function CustomHammerConfig_Factory(t) { return ɵCustomHammerConfig_BaseFactory(t || CustomHammerConfig); };
+CustomHammerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CustomHammerConfig, factory: function (t) { return CustomHammerConfig.ɵfac(t); } });
+var ɵCustomHammerConfig_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CustomHammerConfig);
     return CustomHammerConfig;
 }(platformBrowser.HammerGestureConfig));
 var NgxGalleryModule = /** @class */ (function () {
     function NgxGalleryModule() {
     }
-    NgxGalleryModule.decorators = [
-        { type: core.NgModule, args: [{
-                    imports: [
-                        common.CommonModule
-                    ],
-                    declarations: [
-                        NgxGalleryActionComponent,
-                        NgxGalleryArrowsComponent,
-                        NgxGalleryBulletsComponent,
-                        NgxGalleryImageComponent,
-                        NgxGalleryThumbnailsComponent,
-                        NgxGalleryPreviewComponent,
-                        NgxGalleryComponent
-                    ],
-                    exports: [
-                        NgxGalleryComponent
-                    ],
-                    providers: [
-                        { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }
-                    ]
-                },] },
-    ];
     /**
      * @nocollapse
      */
     NgxGalleryModule.ctorParameters = function () { return []; };
+NgxGalleryModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxGalleryModule });
+NgxGalleryModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxGalleryModule_Factory(t) { return new (t || NgxGalleryModule)(); }, providers: [
+        { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }
+    ], imports: [[
+            common.CommonModule
+        ]] });
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxGalleryModule, { declarations: [NgxGalleryActionComponent,
+        NgxGalleryArrowsComponent,
+        NgxGalleryBulletsComponent,
+        NgxGalleryImageComponent,
+        NgxGalleryThumbnailsComponent,
+        NgxGalleryPreviewComponent,
+        NgxGalleryComponent], imports: [ɵngcc1.CommonModule], exports: [NgxGalleryComponent] }); })();
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryModule, [{
+        type: core.NgModule,
+        args: [{
+                imports: [
+                    common.CommonModule
+                ],
+                declarations: [
+                    NgxGalleryActionComponent,
+                    NgxGalleryArrowsComponent,
+                    NgxGalleryBulletsComponent,
+                    NgxGalleryImageComponent,
+                    NgxGalleryThumbnailsComponent,
+                    NgxGalleryPreviewComponent,
+                    NgxGalleryComponent
+                ],
+                exports: [
+                    NgxGalleryComponent
+                ],
+                providers: [
+                    { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }
+                ]
+            }]
+    }], function () { return []; }, null); })();
     return NgxGalleryModule;
 }());
 
@@ -1958,3 +2730,5 @@ exports.NgxGalleryAction = NgxGalleryAction;
 Object.defineProperty(exports, '__esModule', { value: true });
 
 })));
+
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
diff --git a/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js.__ivy_ngcc_bak b/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..d3d3250
--- /dev/null
+++ b/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js.__ivy_ngcc_bak
@@ -0,0 +1,1960 @@
+(function (global, factory) {
+	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) :
+	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) :
+	(factory((global['ngx-gallery'] = {}),global.core,global.common,global.platformBrowser));
+}(this, (function (exports,core,common,platformBrowser) { 'use strict';
+
+var NgxGalleryActionComponent = /** @class */ (function () {
+    function NgxGalleryActionComponent() {
+        this.disabled = false;
+        this.titleText = '';
+        this.onClick = new core.EventEmitter();
+    }
+    /**
+     * @param {?} event
+     * @return {?}
+     */
+    NgxGalleryActionComponent.prototype.handleClick = function (event) {
+        if (!this.disabled) {
+            this.onClick.emit(event);
+        }
+        event.stopPropagation();
+        event.preventDefault();
+    };
+    NgxGalleryActionComponent.decorators = [
+        { type: core.Component, args: [{
+                    selector: 'ngx-gallery-action',
+                    template: "\n        <div class=\"ngx-gallery-icon\" [class.ngx-gallery-icon-disabled]=\"disabled\"\n            aria-hidden=\"true\"\n            title=\"{{ titleText }}\"\n            (click)=\"handleClick($event)\">\n                <i class=\"ngx-gallery-icon-content {{ icon }}\"></i>\n        </div>",
+                    changeDetection: core.ChangeDetectionStrategy.OnPush
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryActionComponent.ctorParameters = function () { return []; };
+    NgxGalleryActionComponent.propDecorators = {
+        'icon': [{ type: core.Input },],
+        'disabled': [{ type: core.Input },],
+        'titleText': [{ type: core.Input },],
+        'onClick': [{ type: core.Output },],
+    };
+    return NgxGalleryActionComponent;
+}());
+
+var NgxGalleryArrowsComponent = /** @class */ (function () {
+    function NgxGalleryArrowsComponent() {
+        this.onPrevClick = new core.EventEmitter();
+        this.onNextClick = new core.EventEmitter();
+    }
+    /**
+     * @return {?}
+     */
+    NgxGalleryArrowsComponent.prototype.handlePrevClick = function () {
+        this.onPrevClick.emit();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryArrowsComponent.prototype.handleNextClick = function () {
+        this.onNextClick.emit();
+    };
+    NgxGalleryArrowsComponent.decorators = [
+        { type: core.Component, args: [{
+                    selector: 'ngx-gallery-arrows',
+                    template: "\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handlePrevClick()\" [class.ngx-gallery-disabled]=\"prevDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowPrevIcon}}\"></i>\n            </div>\n        </div>\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handleNextClick()\" [class.ngx-gallery-disabled]=\"nextDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowNextIcon}}\"></i>\n            </div>\n        </div>\n    ",
+                    styles: [".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } "]
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryArrowsComponent.ctorParameters = function () { return []; };
+    NgxGalleryArrowsComponent.propDecorators = {
+        'prevDisabled': [{ type: core.Input },],
+        'nextDisabled': [{ type: core.Input },],
+        'arrowPrevIcon': [{ type: core.Input },],
+        'arrowNextIcon': [{ type: core.Input },],
+        'onPrevClick': [{ type: core.Output },],
+        'onNextClick': [{ type: core.Output },],
+    };
+    return NgxGalleryArrowsComponent;
+}());
+
+var NgxGalleryBulletsComponent = /** @class */ (function () {
+    function NgxGalleryBulletsComponent() {
+        this.active = 0;
+        this.onChange = new core.EventEmitter();
+    }
+    /**
+     * @return {?}
+     */
+    NgxGalleryBulletsComponent.prototype.getBullets = function () {
+        return Array(this.count);
+    };
+    /**
+     * @param {?} event
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryBulletsComponent.prototype.handleChange = function (event, index) {
+        this.onChange.emit(index);
+    };
+    NgxGalleryBulletsComponent.decorators = [
+        { type: core.Component, args: [{
+                    selector: 'ngx-gallery-bullets',
+                    template: "\n        <div class=\"ngx-gallery-bullet\" *ngFor=\"let bullet of getBullets(); let i = index;\" (click)=\"handleChange($event, i)\" [ngClass]=\"{ 'ngx-gallery-active': i == active }\"></div>\n    ",
+                    styles: [":host { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet:hover, .ngx-gallery-bullet.ngx-gallery-active { background: black; } "]
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryBulletsComponent.ctorParameters = function () { return []; };
+    NgxGalleryBulletsComponent.propDecorators = {
+        'count': [{ type: core.Input },],
+        'active': [{ type: core.Input },],
+        'onChange': [{ type: core.Output },],
+    };
+    return NgxGalleryBulletsComponent;
+}());
+
+var NgxGalleryHelperService = /** @class */ (function () {
+    /**
+     * @param {?} renderer
+     */
+    function NgxGalleryHelperService(renderer) {
+        this.renderer = renderer;
+        this.swipeHandlers = new Map();
+    }
+    /**
+     * @param {?} status
+     * @param {?} element
+     * @param {?} id
+     * @param {?} nextHandler
+     * @param {?} prevHandler
+     * @return {?}
+     */
+    NgxGalleryHelperService.prototype.manageSwipe = function (status, element, id, nextHandler, prevHandler) {
+        var /** @type {?} */ handlers = this.getSwipeHandlers(id);
+        // swipeleft and swiperight are available only if hammerjs is included
+        try {
+            if (status && !handlers) {
+                this.swipeHandlers.set(id, [
+                    this.renderer.listen(element.nativeElement, 'swipeleft', function () { return nextHandler(); }),
+                    this.renderer.listen(element.nativeElement, 'swiperight', function () { return prevHandler(); })
+                ]);
+            }
+            else if (!status && handlers) {
+                handlers.map(function (handler) { return handler(); });
+                this.removeSwipeHandlers(id);
+            }
+        }
+        catch (e) { }
+    };
+    /**
+     * @param {?} url
+     * @return {?}
+     */
+    NgxGalleryHelperService.prototype.validateUrl = function (url) {
+        if (url.replace) {
+            return url.replace(new RegExp(' ', 'g'), '%20')
+                .replace(new RegExp('\'', 'g'), '%27');
+        }
+        else {
+            return url;
+        }
+    };
+    /**
+     * @param {?} image
+     * @return {?}
+     */
+    NgxGalleryHelperService.prototype.getBackgroundUrl = function (image) {
+        return 'url(\'' + this.validateUrl(image) + '\')';
+    };
+    /**
+     * @param {?} id
+     * @return {?}
+     */
+    NgxGalleryHelperService.prototype.getSwipeHandlers = function (id) {
+        return this.swipeHandlers.get(id);
+    };
+    /**
+     * @param {?} id
+     * @return {?}
+     */
+    NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {
+        this.swipeHandlers.delete(id);
+    };
+    NgxGalleryHelperService.decorators = [
+        { type: core.Injectable },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryHelperService.ctorParameters = function () { return [
+        { type: core.Renderer, },
+    ]; };
+    return NgxGalleryHelperService;
+}());
+
+var NgxGalleryAnimation = /** @class */ (function () {
+    function NgxGalleryAnimation() {
+    }
+    NgxGalleryAnimation.Fade = 'fade';
+    NgxGalleryAnimation.Slide = 'slide';
+    NgxGalleryAnimation.Rotate = 'rotate';
+    NgxGalleryAnimation.Zoom = 'zoom';
+    return NgxGalleryAnimation;
+}());
+
+var NgxGalleryImageComponent = /** @class */ (function () {
+    /**
+     * @param {?} sanitization
+     * @param {?} elementRef
+     * @param {?} helperService
+     */
+    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {
+        this.sanitization = sanitization;
+        this.elementRef = elementRef;
+        this.helperService = helperService;
+        this.onClick = new core.EventEmitter();
+        this.onActiveChange = new core.EventEmitter();
+        this.canChangeImage = true;
+    }
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.ngOnInit = function () {
+        if (this.arrows && this.arrowsAutoHide) {
+            this.arrows = false;
+        }
+        if (this.autoPlay) {
+            this.startAutoPlay();
+        }
+    };
+    /**
+     * @param {?} changes
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {
+        var _this = this;
+        if (changes['swipe']) {
+            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () { return _this.showNext(); }, function () { return _this.showPrev(); });
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.onMouseEnter = function () {
+        if (this.arrowsAutoHide && !this.arrows) {
+            this.arrows = true;
+        }
+        if (this.autoPlay && this.autoPlayPauseOnHover) {
+            this.stopAutoPlay();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.onMouseLeave = function () {
+        if (this.arrowsAutoHide && this.arrows) {
+            this.arrows = false;
+        }
+        if (this.autoPlay && this.autoPlayPauseOnHover) {
+            this.startAutoPlay();
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.reset = function (index) {
+        this.selectedIndex = index;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.getImages = function () {
+        if (!this.images) {
+            return [];
+        }
+        if (this.lazyLoading) {
+            var /** @type {?} */ indexes_1 = [this.selectedIndex];
+            var /** @type {?} */ prevIndex = this.selectedIndex - 1;
+            if (prevIndex === -1 && this.infinityMove) {
+                indexes_1.push(this.images.length - 1);
+            }
+            else if (prevIndex >= 0) {
+                indexes_1.push(prevIndex);
+            }
+            var /** @type {?} */ nextIndex = this.selectedIndex + 1;
+            if (nextIndex == this.images.length && this.infinityMove) {
+                indexes_1.push(0);
+            }
+            else if (nextIndex < this.images.length) {
+                indexes_1.push(nextIndex);
+            }
+            return this.images.filter(function (img, i) { return indexes_1.indexOf(i) != -1; });
+        }
+        else {
+            return this.images;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.startAutoPlay = function () {
+        var _this = this;
+        this.stopAutoPlay();
+        this.timer = setInterval(function () {
+            if (!_this.showNext()) {
+                _this.selectedIndex = -1;
+                _this.showNext();
+            }
+        }, this.autoPlayInterval);
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.stopAutoPlay = function () {
+        if (this.timer) {
+            clearInterval(this.timer);
+        }
+    };
+    /**
+     * @param {?} event
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {
+        if (this.clickable) {
+            this.onClick.emit(index);
+            event.stopPropagation();
+            event.preventDefault();
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.show = function (index) {
+        this.selectedIndex = index;
+        this.onActiveChange.emit(this.selectedIndex);
+        this.setChangeTimeout();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.showNext = function () {
+        if (this.canShowNext() && this.canChangeImage) {
+            this.selectedIndex++;
+            if (this.selectedIndex === this.images.length) {
+                this.selectedIndex = 0;
+            }
+            this.onActiveChange.emit(this.selectedIndex);
+            this.setChangeTimeout();
+            return true;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.showPrev = function () {
+        if (this.canShowPrev() && this.canChangeImage) {
+            this.selectedIndex--;
+            if (this.selectedIndex < 0) {
+                this.selectedIndex = this.images.length - 1;
+            }
+            this.onActiveChange.emit(this.selectedIndex);
+            this.setChangeTimeout();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.setChangeTimeout = function () {
+        var _this = this;
+        this.canChangeImage = false;
+        var /** @type {?} */ timeout = 1000;
+        if (this.animation === NgxGalleryAnimation.Slide
+            || this.animation === NgxGalleryAnimation.Fade) {
+            timeout = 500;
+        }
+        setTimeout(function () {
+            _this.canChangeImage = true;
+        }, timeout);
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.canShowNext = function () {
+        if (this.images) {
+            return this.infinityMove || this.selectedIndex < this.images.length - 1
+                ? true : false;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.canShowPrev = function () {
+        if (this.images) {
+            return this.infinityMove || this.selectedIndex > 0 ? true : false;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @param {?} image
+     * @return {?}
+     */
+    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {
+        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));
+    };
+    NgxGalleryImageComponent.decorators = [
+        { type: core.Component, args: [{
+                    selector: 'ngx-gallery-image',
+                    template: "\n        <div class=\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\">\n            <div class=\"ngx-gallery-image\" *ngFor=\"let image of getImages(); let i = index;\" [ngClass]=\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\" [style.background-image]=\"getSafeUrl(image.src)\" (click)=\"handleClick($event, image.index)\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, image.index)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-image-text\" *ngIf=\"showDescription && descriptions[image.index]\" [innerHTML]=\"descriptions[image.index]\" (click)=\"$event.stopPropagation()\"></div>\n            </div>\n        </div>\n        <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"selectedIndex\" (onChange)=\"show($event)\"></ngx-gallery-bullets>\n        <ngx-gallery-arrows class=\"ngx-gallery-image-size-{{size}}\" *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    ",
+                    styles: [":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } "]
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryImageComponent.ctorParameters = function () { return [
+        { type: platformBrowser.DomSanitizer, },
+        { type: core.ElementRef, },
+        { type: NgxGalleryHelperService, },
+    ]; };
+    NgxGalleryImageComponent.propDecorators = {
+        'images': [{ type: core.Input },],
+        'clickable': [{ type: core.Input },],
+        'selectedIndex': [{ type: core.Input },],
+        'arrows': [{ type: core.Input },],
+        'arrowsAutoHide': [{ type: core.Input },],
+        'swipe': [{ type: core.Input },],
+        'animation': [{ type: core.Input },],
+        'size': [{ type: core.Input },],
+        'arrowPrevIcon': [{ type: core.Input },],
+        'arrowNextIcon': [{ type: core.Input },],
+        'autoPlay': [{ type: core.Input },],
+        'autoPlayInterval': [{ type: core.Input },],
+        'autoPlayPauseOnHover': [{ type: core.Input },],
+        'infinityMove': [{ type: core.Input },],
+        'lazyLoading': [{ type: core.Input },],
+        'actions': [{ type: core.Input },],
+        'descriptions': [{ type: core.Input },],
+        'showDescription': [{ type: core.Input },],
+        'bullets': [{ type: core.Input },],
+        'onClick': [{ type: core.Output },],
+        'onActiveChange': [{ type: core.Output },],
+        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],
+        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],
+    };
+    return NgxGalleryImageComponent;
+}());
+
+var NgxGalleryOrder = /** @class */ (function () {
+    function NgxGalleryOrder() {
+    }
+    NgxGalleryOrder.Column = 1;
+    NgxGalleryOrder.Row = 2;
+    NgxGalleryOrder.Page = 3;
+    return NgxGalleryOrder;
+}());
+
+var NgxGalleryThumbnailsComponent = /** @class */ (function () {
+    /**
+     * @param {?} sanitization
+     * @param {?} elementRef
+     * @param {?} helperService
+     */
+    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {
+        this.sanitization = sanitization;
+        this.elementRef = elementRef;
+        this.helperService = helperService;
+        this.minStopIndex = 0;
+        this.onActiveChange = new core.EventEmitter();
+        this.index = 0;
+    }
+    /**
+     * @param {?} changes
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {
+        var _this = this;
+        if (changes['selectedIndex']) {
+            this.validateIndex();
+        }
+        if (changes['swipe']) {
+            this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () { return _this.moveRight(); }, function () { return _this.moveLeft(); });
+        }
+        if (this.images) {
+            this.remainingCountValue = this.images.length - (this.rows * this.columns);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {
+        this.mouseenter = true;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {
+        this.mouseenter = false;
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.reset = function (index) {
+        this.selectedIndex = index;
+        this.setDefaultPosition();
+        this.index = 0;
+        this.validateIndex();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getImages = function () {
+        if (!this.images) {
+            return [];
+        }
+        if (this.remainingCount) {
+            return this.images.slice(0, this.rows * this.columns);
+        }
+        else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {
+            var /** @type {?} */ stopIndex = 0;
+            if (this.order === NgxGalleryOrder.Column) {
+                stopIndex = (this.index + this.columns + this.moveSize) * this.rows;
+            }
+            else if (this.order === NgxGalleryOrder.Page) {
+                stopIndex = this.index + ((this.columns * this.rows) * 2);
+            }
+            if (stopIndex <= this.minStopIndex) {
+                stopIndex = this.minStopIndex;
+            }
+            else {
+                this.minStopIndex = stopIndex;
+            }
+            return this.images.slice(0, stopIndex);
+        }
+        else {
+            return this.images;
+        }
+    };
+    /**
+     * @param {?} event
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {
+        if (!this.hasLink(index)) {
+            this.selectedIndex = index;
+            this.onActiveChange.emit(index);
+            event.stopPropagation();
+            event.preventDefault();
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.hasLink = function (index) {
+        if (this.links && this.links.length && this.links[index])
+            return true;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {
+        if (this.canMoveRight()) {
+            this.index += this.moveSize;
+            var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;
+            if (this.index > maxIndex) {
+                this.index = maxIndex;
+            }
+            this.setThumbnailsPosition();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {
+        if (this.canMoveLeft()) {
+            this.index -= this.moveSize;
+            if (this.index < 0) {
+                this.index = 0;
+            }
+            this.setThumbnailsPosition();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {
+        return this.index + this.columns < this.getMaxIndex() ? true : false;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {
+        return this.index !== 0 ? true : false;
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {
+        var /** @type {?} */ calculatedIndex;
+        if (this.order === NgxGalleryOrder.Column) {
+            calculatedIndex = Math.floor(index / this.rows);
+        }
+        else if (this.order === NgxGalleryOrder.Page) {
+            calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);
+        }
+        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {
+            calculatedIndex = index % this.columns;
+        }
+        else {
+            calculatedIndex = index % Math.ceil(this.images.length / this.rows);
+        }
+        return this.getThumbnailPosition(calculatedIndex, this.columns);
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {
+        var /** @type {?} */ calculatedIndex;
+        if (this.order === NgxGalleryOrder.Column) {
+            calculatedIndex = index % this.rows;
+        }
+        else if (this.order === NgxGalleryOrder.Page) {
+            calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);
+        }
+        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {
+            calculatedIndex = Math.floor(index / this.columns);
+        }
+        else {
+            calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));
+        }
+        return this.getThumbnailPosition(calculatedIndex, this.rows);
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {
+        return this.getThumbnailDimension(this.columns);
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {
+        return this.getThumbnailDimension(this.rows);
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {
+        this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';
+        this.thumbnailsMarginLeft = -((this.margin - (((this.columns - 1)
+            * this.margin) / this.columns)) * this.index) + 'px';
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {
+        this.thumbnailsLeft = '0px';
+        this.thumbnailsMarginLeft = '0px';
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {
+        if (this.remainingCount) {
+            return false;
+        }
+        else if (this.arrows && this.images && this.images.length > this.getVisibleCount()
+            && (!this.arrowsAutoHide || this.mouseenter)) {
+            return true;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {
+        if (this.images) {
+            var /** @type {?} */ newIndex = void 0;
+            if (this.order === NgxGalleryOrder.Column) {
+                newIndex = Math.floor(this.selectedIndex / this.rows);
+            }
+            else {
+                newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);
+            }
+            if (this.remainingCount) {
+                newIndex = 0;
+            }
+            if (newIndex < this.index || newIndex >= this.index + this.columns) {
+                var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;
+                this.index = newIndex > maxIndex ? maxIndex : newIndex;
+                this.setThumbnailsPosition();
+            }
+        }
+    };
+    /**
+     * @param {?} image
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {
+        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));
+    };
+    /**
+     * @param {?} index
+     * @param {?} count
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {
+        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '
+            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');
+    };
+    /**
+     * @param {?} count
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {
+        if (this.margin !== 0) {
+            return this.getSafeStyle('calc(' + (100 / count) + '% - '
+                + (((count - 1) * this.margin) / count) + 'px)');
+        }
+        else {
+            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {
+        if (this.order == NgxGalleryOrder.Page) {
+            var /** @type {?} */ maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);
+            if (this.images.length % this.getVisibleCount() > this.columns) {
+                maxIndex += this.columns;
+            }
+            else {
+                maxIndex += this.images.length % this.getVisibleCount();
+            }
+            return maxIndex;
+        }
+        else {
+            return Math.ceil(this.images.length / this.rows);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {
+        return this.columns * this.rows;
+    };
+    /**
+     * @param {?} value
+     * @return {?}
+     */
+    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {
+        return this.sanitization.bypassSecurityTrustStyle(value);
+    };
+    NgxGalleryThumbnailsComponent.decorators = [
+        { type: core.Component, args: [{
+                    selector: 'ngx-gallery-thumbnails',
+                    template: "\n    <div class=\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\">\n        <div class=\"ngx-gallery-thumbnails\" [style.transform]=\"'translateX(' + thumbnailsLeft + ')'\" [style.marginLeft]=\"thumbnailsMarginLeft\">\n            <a [href]=\"hasLink(i) ? links[i] : '#'\" [target]=\"linkTarget\" class=\"ngx-gallery-thumbnail\" *ngFor=\"let image of getImages(); let i = index;\" [style.background-image]=\"getSafeUrl(image)\" (click)=\"handleClick($event, i)\" [style.width]=\"getThumbnailWidth()\" [style.height]=\"getThumbnailHeight()\" [style.left]=\"getThumbnailLeft(i)\" [style.top]=\"getThumbnailTop(i)\" [ngClass]=\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\" [attr.aria-label]=\"labels[i]\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, i)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-remaining-count-overlay\" *ngIf=\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\">\n                    <span class=\"ngx-gallery-remaining-count\">+{{remainingCountValue}}</span>\n                </div>\n            </a>\n        </div>\n    </div>\n    <ngx-gallery-arrows *ngIf=\"canShowArrows()\" (onPrevClick)=\"moveLeft()\" (onNextClick)=\"moveRight()\" [prevDisabled]=\"!canMoveLeft()\" [nextDisabled]=\"!canMoveRight()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    ",
+                    styles: [":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } "]
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryThumbnailsComponent.ctorParameters = function () { return [
+        { type: platformBrowser.DomSanitizer, },
+        { type: core.ElementRef, },
+        { type: NgxGalleryHelperService, },
+    ]; };
+    NgxGalleryThumbnailsComponent.propDecorators = {
+        'images': [{ type: core.Input },],
+        'links': [{ type: core.Input },],
+        'labels': [{ type: core.Input },],
+        'linkTarget': [{ type: core.Input },],
+        'columns': [{ type: core.Input },],
+        'rows': [{ type: core.Input },],
+        'arrows': [{ type: core.Input },],
+        'arrowsAutoHide': [{ type: core.Input },],
+        'margin': [{ type: core.Input },],
+        'selectedIndex': [{ type: core.Input },],
+        'clickable': [{ type: core.Input },],
+        'swipe': [{ type: core.Input },],
+        'size': [{ type: core.Input },],
+        'arrowPrevIcon': [{ type: core.Input },],
+        'arrowNextIcon': [{ type: core.Input },],
+        'moveSize': [{ type: core.Input },],
+        'order': [{ type: core.Input },],
+        'remainingCount': [{ type: core.Input },],
+        'lazyLoading': [{ type: core.Input },],
+        'actions': [{ type: core.Input },],
+        'onActiveChange': [{ type: core.Output },],
+        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],
+        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],
+    };
+    return NgxGalleryThumbnailsComponent;
+}());
+
+var NgxGalleryPreviewComponent = /** @class */ (function () {
+    /**
+     * @param {?} sanitization
+     * @param {?} elementRef
+     * @param {?} helperService
+     * @param {?} renderer
+     * @param {?} changeDetectorRef
+     */
+    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService, renderer, changeDetectorRef) {
+        this.sanitization = sanitization;
+        this.elementRef = elementRef;
+        this.helperService = helperService;
+        this.renderer = renderer;
+        this.changeDetectorRef = changeDetectorRef;
+        this.showSpinner = false;
+        this.positionLeft = 0;
+        this.positionTop = 0;
+        this.zoomValue = 1;
+        this.loading = false;
+        this.rotateValue = 0;
+        this.index = 0;
+        this.onOpen = new core.EventEmitter();
+        this.onClose = new core.EventEmitter();
+        this.onActiveChange = new core.EventEmitter();
+        this.isOpen = false;
+        this.initialX = 0;
+        this.initialY = 0;
+        this.initialLeft = 0;
+        this.initialTop = 0;
+        this.isMove = false;
+    }
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.ngOnInit = function () {
+        if (this.arrows && this.arrowsAutoHide) {
+            this.arrows = false;
+        }
+    };
+    /**
+     * @param {?} changes
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {
+        var _this = this;
+        if (changes['swipe']) {
+            this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () { return _this.showNext(); }, function () { return _this.showPrev(); });
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.ngOnDestroy = function () {
+        if (this.keyDownListener) {
+            this.keyDownListener();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.onMouseEnter = function () {
+        if (this.arrowsAutoHide && !this.arrows) {
+            this.arrows = true;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.onMouseLeave = function () {
+        if (this.arrowsAutoHide && this.arrows) {
+            this.arrows = false;
+        }
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {
+        if (this.isOpen) {
+            if (this.keyboardNavigation) {
+                if (this.isKeyboardPrev(e)) {
+                    this.showPrev();
+                }
+                else if (this.isKeyboardNext(e)) {
+                    this.showNext();
+                }
+            }
+            if (this.closeOnEsc && this.isKeyboardEsc(e)) {
+                this.close();
+            }
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.open = function (index) {
+        var _this = this;
+        this.onOpen.emit();
+        this.index = index;
+        this.isOpen = true;
+        this.show(true);
+        if (this.forceFullscreen) {
+            this.manageFullscreen();
+        }
+        this.keyDownListener = this.renderer.listenGlobal("window", "keydown", function (e) { return _this.onKeyDown(e); });
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.close = function () {
+        this.isOpen = false;
+        this.closeFullscreen();
+        this.onClose.emit();
+        this.stopAutoPlay();
+        if (this.keyDownListener) {
+            this.keyDownListener();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.imageMouseEnter = function () {
+        if (this.autoPlay && this.autoPlayPauseOnHover) {
+            this.stopAutoPlay();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.imageMouseLeave = function () {
+        if (this.autoPlay && this.autoPlayPauseOnHover) {
+            this.startAutoPlay();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.startAutoPlay = function () {
+        var _this = this;
+        if (this.autoPlay) {
+            this.stopAutoPlay();
+            this.timer = setTimeout(function () {
+                if (!_this.showNext()) {
+                    _this.index = -1;
+                    _this.showNext();
+                }
+            }, this.autoPlayInterval);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.stopAutoPlay = function () {
+        if (this.timer) {
+            clearTimeout(this.timer);
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.showAtIndex = function (index) {
+        this.index = index;
+        this.show();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.showNext = function () {
+        if (this.canShowNext()) {
+            this.index++;
+            if (this.index === this.images.length) {
+                this.index = 0;
+            }
+            this.show();
+            return true;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.showPrev = function () {
+        if (this.canShowPrev()) {
+            this.index--;
+            if (this.index < 0) {
+                this.index = this.images.length - 1;
+            }
+            this.show();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.canShowNext = function () {
+        if (this.loading) {
+            return false;
+        }
+        else if (this.images) {
+            return this.infinityMove || this.index < this.images.length - 1 ? true : false;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {
+        if (this.loading) {
+            return false;
+        }
+        else if (this.images) {
+            return this.infinityMove || this.index > 0 ? true : false;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {
+        if (this.fullscreen || this.forceFullscreen) {
+            var /** @type {?} */ doc = (document);
+            if (!doc.fullscreenElement && !doc.mozFullScreenElement
+                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {
+                this.openFullscreen();
+            }
+            else {
+                this.closeFullscreen();
+            }
+        }
+    };
+    /**
+     * @param {?} image
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {
+        return image.substr(0, 10) === 'data:image' ?
+            image : this.sanitization.bypassSecurityTrustUrl(image);
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.zoomIn = function () {
+        if (this.canZoomIn()) {
+            this.zoomValue += this.zoomStep;
+            if (this.zoomValue > this.zoomMax) {
+                this.zoomValue = this.zoomMax;
+            }
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.zoomOut = function () {
+        if (this.canZoomOut()) {
+            this.zoomValue -= this.zoomStep;
+            if (this.zoomValue < this.zoomMin) {
+                this.zoomValue = this.zoomMin;
+            }
+            if (this.zoomValue <= 1) {
+                this.resetPosition();
+            }
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.rotateLeft = function () {
+        this.rotateValue -= 90;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.rotateRight = function () {
+        this.rotateValue += 90;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.getTransform = function () {
+        return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.canZoomIn = function () {
+        return this.zoomValue < this.zoomMax ? true : false;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.canZoomOut = function () {
+        return this.zoomValue > this.zoomMin ? true : false;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.canDragOnZoom = function () {
+        return this.zoom && this.zoomValue > 1;
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.mouseDownHandler = function (e) {
+        if (this.canDragOnZoom()) {
+            this.initialX = this.getClientX(e);
+            this.initialY = this.getClientY(e);
+            this.initialLeft = this.positionLeft;
+            this.initialTop = this.positionTop;
+            this.isMove = true;
+            e.preventDefault();
+        }
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.mouseUpHandler = function (e) {
+        this.isMove = false;
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.mouseMoveHandler = function (e) {
+        if (this.isMove) {
+            this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);
+            this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);
+        }
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.getClientX = function (e) {
+        return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.getClientY = function (e) {
+        return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.resetPosition = function () {
+        if (this.zoom) {
+            this.positionLeft = 0;
+            this.positionTop = 0;
+        }
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {
+        return e.keyCode === 39 ? true : false;
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {
+        return e.keyCode === 37 ? true : false;
+    };
+    /**
+     * @param {?} e
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {
+        return e.keyCode === 27 ? true : false;
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {
+        var /** @type {?} */ element = (document.documentElement);
+        if (element.requestFullscreen) {
+            element.requestFullscreen();
+        }
+        else if (element.msRequestFullscreen) {
+            element.msRequestFullscreen();
+        }
+        else if (element.mozRequestFullScreen) {
+            element.mozRequestFullScreen();
+        }
+        else if (element.webkitRequestFullscreen) {
+            element.webkitRequestFullscreen();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {
+        if (this.isFullscreen()) {
+            var /** @type {?} */ doc = (document);
+            if (doc.exitFullscreen) {
+                doc.exitFullscreen();
+            }
+            else if (doc.msExitFullscreen) {
+                doc.msExitFullscreen();
+            }
+            else if (doc.mozCancelFullScreen) {
+                doc.mozCancelFullScreen();
+            }
+            else if (doc.webkitExitFullscreen) {
+                doc.webkitExitFullscreen();
+            }
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.isFullscreen = function () {
+        var /** @type {?} */ doc = (document);
+        return doc.fullscreenElement || doc.webkitFullscreenElement
+            || doc.mozFullScreenElement || doc.msFullscreenElement;
+    };
+    /**
+     * @param {?=} first
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.show = function (first) {
+        var _this = this;
+        if (first === void 0) { first = false; }
+        this.loading = true;
+        this.stopAutoPlay();
+        this.onActiveChange.emit(this.index);
+        if (first || !this.animation) {
+            this._show();
+        }
+        else {
+            setTimeout(function () { return _this._show(); }, 600);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype._show = function () {
+        var _this = this;
+        this.zoomValue = 1;
+        this.rotateValue = 0;
+        this.resetPosition();
+        this.src = this.getSafeUrl(/** @type {?} */ (this.images[this.index]));
+        this.srcIndex = this.index;
+        this.description = this.descriptions[this.index];
+        this.changeDetectorRef.markForCheck();
+        setTimeout(function () {
+            if (_this.isLoaded(_this.previewImage.nativeElement)) {
+                _this.loading = false;
+                _this.startAutoPlay();
+                _this.changeDetectorRef.markForCheck();
+            }
+            else {
+                setTimeout(function () {
+                    if (_this.loading) {
+                        _this.showSpinner = true;
+                        _this.changeDetectorRef.markForCheck();
+                    }
+                });
+                _this.previewImage.nativeElement.onload = function () {
+                    _this.loading = false;
+                    _this.showSpinner = false;
+                    _this.previewImage.nativeElement.onload = null;
+                    _this.startAutoPlay();
+                    _this.changeDetectorRef.markForCheck();
+                };
+            }
+        });
+    };
+    /**
+     * @param {?} img
+     * @return {?}
+     */
+    NgxGalleryPreviewComponent.prototype.isLoaded = function (img) {
+        if (!img.complete) {
+            return false;
+        }
+        if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {
+            return false;
+        }
+        return true;
+    };
+    NgxGalleryPreviewComponent.decorators = [
+        { type: core.Component, args: [{
+                    selector: 'ngx-gallery-preview',
+                    template: "\n        <ngx-gallery-arrows *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n        <div class=\"ngx-gallery-preview-top\">\n            <div class=\"ngx-gallery-preview-icons\">\n                <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, index)\"></ngx-gallery-action>\n                <a *ngIf=\"download && src\" [href]=\"src\" class=\"ngx-gallery-icon\" aria-hidden=\"true\" download>\n                    <i class=\"ngx-gallery-icon-content {{ downloadIcon }}\"></i>\n                </a>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomOutIcon\" [disabled]=\"!canZoomOut()\" (onClick)=\"zoomOut()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomInIcon\" [disabled]=\"!canZoomIn()\" (onClick)=\"zoomIn()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateLeftIcon\" (onClick)=\"rotateLeft()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateRightIcon\" (onClick)=\"rotateRight()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"fullscreen\" [icon]=\"'ngx-gallery-fullscreen ' + fullscreenIcon\" (onClick)=\"manageFullscreen()\"></ngx-gallery-action>\n                <ngx-gallery-action [icon]=\"'ngx-gallery-close ' + closeIcon\" (onClick)=\"close()\"></ngx-gallery-action>\n            </div>\n        </div>\n        <div class=\"ngx-spinner-wrapper ngx-gallery-center\" [class.ngx-gallery-active]=\"showSpinner\">\n            <i class=\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\" aria-hidden=\"true\"></i>\n        </div>\n        <div class=\"ngx-gallery-preview-wrapper\" (click)=\"closeOnClick && close()\" (mouseup)=\"mouseUpHandler($event)\" (mousemove)=\"mouseMoveHandler($event)\" (touchend)=\"mouseUpHandler($event)\" (touchmove)=\"mouseMoveHandler($event)\">\n            <div class=\"ngx-gallery-preview-img-wrapper\">\n                <img *ngIf=\"src\" #previewImage class=\"ngx-gallery-preview-img ngx-gallery-center\" [src]=\"src\" (click)=\"$event.stopPropagation()\" (mouseenter)=\"imageMouseEnter()\" (mouseleave)=\"imageMouseLeave()\" (mousedown)=\"mouseDownHandler($event)\" (touchstart)=\"mouseDownHandler($event)\" [class.ngx-gallery-active]=\"!loading\" [class.animation]=\"animation\" [class.ngx-gallery-grab]=\"canDragOnZoom()\" [style.transform]=\"getTransform()\" [style.left]=\"positionLeft + 'px'\" [style.top]=\"positionTop + 'px'\"/>\n                <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"index\" (onChange)=\"showAtIndex($event)\"></ngx-gallery-bullets>\n            </div>\n            <div class=\"ngx-gallery-preview-text\" *ngIf=\"showDescription && description\" [innerHTML]=\"description\" (click)=\"$event.stopPropagation()\"></div>\n        </div>\n    ",
+                    styles: [":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } :host /deep/ ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } "]
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryPreviewComponent.ctorParameters = function () { return [
+        { type: platformBrowser.DomSanitizer, },
+        { type: core.ElementRef, },
+        { type: NgxGalleryHelperService, },
+        { type: core.Renderer, },
+        { type: core.ChangeDetectorRef, },
+    ]; };
+    NgxGalleryPreviewComponent.propDecorators = {
+        'images': [{ type: core.Input },],
+        'descriptions': [{ type: core.Input },],
+        'showDescription': [{ type: core.Input },],
+        'arrows': [{ type: core.Input },],
+        'arrowsAutoHide': [{ type: core.Input },],
+        'swipe': [{ type: core.Input },],
+        'fullscreen': [{ type: core.Input },],
+        'forceFullscreen': [{ type: core.Input },],
+        'closeOnClick': [{ type: core.Input },],
+        'closeOnEsc': [{ type: core.Input },],
+        'keyboardNavigation': [{ type: core.Input },],
+        'arrowPrevIcon': [{ type: core.Input },],
+        'arrowNextIcon': [{ type: core.Input },],
+        'closeIcon': [{ type: core.Input },],
+        'fullscreenIcon': [{ type: core.Input },],
+        'spinnerIcon': [{ type: core.Input },],
+        'autoPlay': [{ type: core.Input },],
+        'autoPlayInterval': [{ type: core.Input },],
+        'autoPlayPauseOnHover': [{ type: core.Input },],
+        'infinityMove': [{ type: core.Input },],
+        'zoom': [{ type: core.Input },],
+        'zoomStep': [{ type: core.Input },],
+        'zoomMax': [{ type: core.Input },],
+        'zoomMin': [{ type: core.Input },],
+        'zoomInIcon': [{ type: core.Input },],
+        'zoomOutIcon': [{ type: core.Input },],
+        'animation': [{ type: core.Input },],
+        'actions': [{ type: core.Input },],
+        'rotate': [{ type: core.Input },],
+        'rotateLeftIcon': [{ type: core.Input },],
+        'rotateRightIcon': [{ type: core.Input },],
+        'download': [{ type: core.Input },],
+        'downloadIcon': [{ type: core.Input },],
+        'bullets': [{ type: core.Input },],
+        'onOpen': [{ type: core.Output },],
+        'onClose': [{ type: core.Output },],
+        'onActiveChange': [{ type: core.Output },],
+        'previewImage': [{ type: core.ViewChild, args: ['previewImage',] },],
+        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],
+        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],
+    };
+    return NgxGalleryPreviewComponent;
+}());
+
+var NgxGalleryImageSize = /** @class */ (function () {
+    function NgxGalleryImageSize() {
+    }
+    NgxGalleryImageSize.Cover = 'cover';
+    NgxGalleryImageSize.Contain = 'contain';
+    return NgxGalleryImageSize;
+}());
+
+var NgxGalleryLayout = /** @class */ (function () {
+    function NgxGalleryLayout() {
+    }
+    NgxGalleryLayout.ThumbnailsTop = 'thumbnails-top';
+    NgxGalleryLayout.ThumbnailsBottom = 'thumbnails-bottom';
+    return NgxGalleryLayout;
+}());
+
+var NgxGalleryAction = /** @class */ (function () {
+    /**
+     * @param {?} action
+     */
+    function NgxGalleryAction(action) {
+        this.icon = action.icon;
+        this.disabled = action.disabled ? action.disabled : false;
+        this.titleText = action.titleText ? action.titleText : '';
+        this.onClick = action.onClick;
+    }
+    return NgxGalleryAction;
+}());
+
+var NgxGalleryOptions = /** @class */ (function () {
+    /**
+     * @param {?} obj
+     */
+    function NgxGalleryOptions(obj) {
+        var preventDefaults = obj.breakpoint === undefined ? false : true;
+        function use(source, defaultValue) {
+            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;
+        }
+        this.breakpoint = use(obj.breakpoint, undefined);
+        this.width = use(obj.width, '500px');
+        this.height = use(obj.height, '400px');
+        this.fullWidth = use(obj.fullWidth, false);
+        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);
+        this.startIndex = use(obj.startIndex, 0);
+        this.linkTarget = use(obj.linkTarget, '_blank');
+        this.lazyLoading = use(obj.lazyLoading, true);
+        this.image = use(obj.image, true);
+        this.imagePercent = use(obj.imagePercent, 75);
+        this.imageArrows = use(obj.imageArrows, true);
+        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);
+        this.imageSwipe = use(obj.imageSwipe, false);
+        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);
+        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);
+        this.imageAutoPlay = use(obj.imageAutoPlay, false);
+        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);
+        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);
+        this.imageInfinityMove = use(obj.imageInfinityMove, false);
+        if (obj && obj.imageActions && obj.imageActions.length) {
+            obj.imageActions = obj.imageActions.map(function (action) { return new NgxGalleryAction(action); });
+        }
+        this.imageActions = use(obj.imageActions, []);
+        this.imageDescription = use(obj.imageDescription, false);
+        this.imageBullets = use(obj.imageBullets, false);
+        this.thumbnails = use(obj.thumbnails, true);
+        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);
+        this.thumbnailsRows = use(obj.thumbnailsRows, 1);
+        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);
+        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);
+        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);
+        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);
+        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);
+        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);
+        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);
+        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);
+        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);
+        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);
+        this.thumbnailMargin = use(obj.thumbnailMargin, 10);
+        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);
+        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {
+            obj.thumbnailActions = obj.thumbnailActions.map(function (action) { return new NgxGalleryAction(action); });
+        }
+        this.thumbnailActions = use(obj.thumbnailActions, []);
+        this.preview = use(obj.preview, true);
+        this.previewDescription = use(obj.previewDescription, true);
+        this.previewArrows = use(obj.previewArrows, true);
+        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);
+        this.previewSwipe = use(obj.previewSwipe, false);
+        this.previewFullscreen = use(obj.previewFullscreen, false);
+        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);
+        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);
+        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);
+        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);
+        this.previewAnimation = use(obj.previewAnimation, true);
+        this.previewAutoPlay = use(obj.previewAutoPlay, false);
+        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);
+        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);
+        this.previewInfinityMove = use(obj.previewInfinityMove, false);
+        this.previewZoom = use(obj.previewZoom, false);
+        this.previewZoomStep = use(obj.previewZoomStep, 0.1);
+        this.previewZoomMax = use(obj.previewZoomMax, 2);
+        this.previewZoomMin = use(obj.previewZoomMin, 0.5);
+        this.previewRotate = use(obj.previewRotate, false);
+        this.previewDownload = use(obj.previewDownload, false);
+        this.previewCustom = use(obj.previewCustom, undefined);
+        this.previewBullets = use(obj.previewBullets, false);
+        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');
+        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');
+        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');
+        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');
+        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');
+        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');
+        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');
+        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');
+        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');
+        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');
+        if (obj && obj.actions && obj.actions.length) {
+            obj.actions = obj.actions.map(function (action) { return new NgxGalleryAction(action); });
+        }
+        this.actions = use(obj.actions, []);
+    }
+    return NgxGalleryOptions;
+}());
+
+var NgxGalleryOrderedImage = /** @class */ (function () {
+    /**
+     * @param {?} obj
+     */
+    function NgxGalleryOrderedImage(obj) {
+        this.src = obj.src;
+        this.index = obj.index;
+    }
+    return NgxGalleryOrderedImage;
+}());
+
+var NgxGalleryComponent = /** @class */ (function () {
+    /**
+     * @param {?} myElement
+     */
+    function NgxGalleryComponent(myElement) {
+        this.myElement = myElement;
+        this.imagesReady = new core.EventEmitter();
+        this.change = new core.EventEmitter();
+        this.previewOpen = new core.EventEmitter();
+        this.previewClose = new core.EventEmitter();
+        this.previewChange = new core.EventEmitter();
+        this.oldImagesLength = 0;
+        this.selectedIndex = 0;
+        this.breakpoint = undefined;
+        this.prevBreakpoint = undefined;
+    }
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.ngOnInit = function () {
+        this.options = this.options.map(function (opt) { return new NgxGalleryOptions(opt); });
+        this.sortOptions();
+        this.setBreakpoint();
+        this.setOptions();
+        this.checkFullWidth();
+        if (this.currentOptions) {
+            this.selectedIndex = /** @type {?} */ (this.currentOptions.startIndex);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.ngDoCheck = function () {
+        if (this.images !== undefined && (this.images.length !== this.oldImagesLength)
+            || (this.images !== this.oldImages)) {
+            this.oldImagesLength = this.images.length;
+            this.oldImages = this.images;
+            this.setOptions();
+            this.setImages();
+            if (this.images && this.images.length) {
+                this.imagesReady.emit();
+            }
+            if (this.image) {
+                this.image.reset(/** @type {?} */ (this.currentOptions.startIndex));
+            }
+            if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails
+                && this.images.length <= 1) {
+                this.currentOptions.thumbnails = false;
+                this.currentOptions.imageArrows = false;
+            }
+            this.resetThumbnails();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.ngAfterViewInit = function () {
+        this.checkFullWidth();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.onResize = function () {
+        var _this = this;
+        this.setBreakpoint();
+        if (this.prevBreakpoint !== this.breakpoint) {
+            this.setOptions();
+            this.resetThumbnails();
+        }
+        if (this.currentOptions && this.currentOptions.fullWidth) {
+            if (this.fullWidthTimeout) {
+                clearTimeout(this.fullWidthTimeout);
+            }
+            this.fullWidthTimeout = setTimeout(function () {
+                _this.checkFullWidth();
+            }, 200);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.getImageHeight = function () {
+        return (this.currentOptions && this.currentOptions.thumbnails) ?
+            this.currentOptions.imagePercent + '%' : '100%';
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.getThumbnailsHeight = function () {
+        if (this.currentOptions && this.currentOptions.image) {
+            return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '
+                + this.currentOptions.thumbnailsMargin + 'px)';
+        }
+        else {
+            return '100%';
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.getThumbnailsMarginTop = function () {
+        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {
+            return this.currentOptions.thumbnailsMargin + 'px';
+        }
+        else {
+            return '0px';
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.getThumbnailsMarginBottom = function () {
+        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {
+            return this.currentOptions.thumbnailsMargin + 'px';
+        }
+        else {
+            return '0px';
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.openPreview = function (index) {
+        if (this.currentOptions.previewCustom) {
+            this.currentOptions.previewCustom(index);
+        }
+        else {
+            this.previewEnabled = true;
+            this.preview.open(index);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.onPreviewOpen = function () {
+        this.previewOpen.emit();
+        if (this.image && this.image.autoPlay) {
+            this.image.stopAutoPlay();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.onPreviewClose = function () {
+        this.previewEnabled = false;
+        this.previewClose.emit();
+        if (this.image && this.image.autoPlay) {
+            this.image.startAutoPlay();
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.selectFromImage = function (index) {
+        this.select(index);
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.selectFromThumbnails = function (index) {
+        this.select(index);
+        if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview
+            && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {
+            this.openPreview(this.selectedIndex);
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.show = function (index) {
+        this.select(index);
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.showNext = function () {
+        this.image.showNext();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.showPrev = function () {
+        this.image.showPrev();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.canShowNext = function () {
+        if (this.images && this.currentOptions) {
+            return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)
+                ? true : false;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.canShowPrev = function () {
+        if (this.images && this.currentOptions) {
+            return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;
+        }
+        else {
+            return false;
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.previewSelect = function (index) {
+        this.previewChange.emit({ index: index, image: this.images[index] });
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.moveThumbnailsRight = function () {
+        this.thubmnails.moveRight();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.moveThumbnailsLeft = function () {
+        this.thubmnails.moveLeft();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.canMoveThumbnailsRight = function () {
+        return this.thubmnails.canMoveRight();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.canMoveThumbnailsLeft = function () {
+        return this.thubmnails.canMoveLeft();
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.resetThumbnails = function () {
+        if (this.thubmnails) {
+            this.thubmnails.reset(/** @type {?} */ (this.currentOptions.startIndex));
+        }
+    };
+    /**
+     * @param {?} index
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.select = function (index) {
+        this.selectedIndex = index;
+        this.change.emit({
+            index: index,
+            image: this.images[index]
+        });
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.checkFullWidth = function () {
+        if (this.currentOptions && this.currentOptions.fullWidth) {
+            this.width = document.body.clientWidth + 'px';
+            this.left = (-(document.body.clientWidth -
+                this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.setImages = function () {
+        this.smallImages = this.images.map(function (img) { /** @type {?} */ return (img.small); });
+        this.mediumImages = this.images.map(function (img, i) { return new NgxGalleryOrderedImage({
+            src: img.medium,
+            index: i
+        }); });
+        this.bigImages = this.images.map(function (img) { /** @type {?} */ return (img.big); });
+        this.descriptions = this.images.map(function (img) { /** @type {?} */ return (img.description); });
+        this.links = this.images.map(function (img) { /** @type {?} */ return (img.url); });
+        this.labels = this.images.map(function (img) { /** @type {?} */ return (img.label); });
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.setBreakpoint = function () {
+        this.prevBreakpoint = this.breakpoint;
+        var /** @type {?} */ breakpoints;
+        if (typeof window !== 'undefined') {
+            breakpoints = this.options.filter(function (opt) { return opt.breakpoint >= window.innerWidth; })
+                .map(function (opt) { return opt.breakpoint; });
+        }
+        if (breakpoints && breakpoints.length) {
+            this.breakpoint = breakpoints.pop();
+        }
+        else {
+            this.breakpoint = undefined;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.sortOptions = function () {
+        this.options = this.options.filter(function (a) { return a.breakpoint === undefined; }).concat(this.options
+            .filter(function (a) { return a.breakpoint !== undefined; })
+            .sort(function (a, b) { return b.breakpoint - a.breakpoint; }));
+    };
+    /**
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.setOptions = function () {
+        var _this = this;
+        this.currentOptions = new NgxGalleryOptions({});
+        this.options
+            .filter(function (opt) { return opt.breakpoint === undefined || opt.breakpoint >= _this.breakpoint; })
+            .map(function (opt) { return _this.combineOptions(_this.currentOptions, opt); });
+        this.width = /** @type {?} */ (this.currentOptions.width);
+        this.height = /** @type {?} */ (this.currentOptions.height);
+    };
+    /**
+     * @param {?} first
+     * @param {?} second
+     * @return {?}
+     */
+    NgxGalleryComponent.prototype.combineOptions = function (first, second) {
+        Object.keys(second).map(function (val) { return first[val] = second[val] !== undefined ? second[val] : first[val]; });
+    };
+    NgxGalleryComponent.decorators = [
+        { type: core.Component, args: [{
+                    selector: 'ngx-gallery',
+                    template: "\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n        <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n        <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n        <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n    ",
+                    styles: [":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } "],
+                    providers: [NgxGalleryHelperService]
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryComponent.ctorParameters = function () { return [
+        { type: core.ElementRef, },
+    ]; };
+    NgxGalleryComponent.propDecorators = {
+        'options': [{ type: core.Input },],
+        'images': [{ type: core.Input },],
+        'imagesReady': [{ type: core.Output },],
+        'change': [{ type: core.Output },],
+        'previewOpen': [{ type: core.Output },],
+        'previewClose': [{ type: core.Output },],
+        'previewChange': [{ type: core.Output },],
+        'preview': [{ type: core.ViewChild, args: [NgxGalleryPreviewComponent,] },],
+        'image': [{ type: core.ViewChild, args: [NgxGalleryImageComponent,] },],
+        'thubmnails': [{ type: core.ViewChild, args: [NgxGalleryThumbnailsComponent,] },],
+        'width': [{ type: core.HostBinding, args: ['style.width',] },],
+        'height': [{ type: core.HostBinding, args: ['style.height',] },],
+        'left': [{ type: core.HostBinding, args: ['style.left',] },],
+        'onResize': [{ type: core.HostListener, args: ['window:resize',] },],
+    };
+    return NgxGalleryComponent;
+}());
+
+var NgxGalleryImage = /** @class */ (function () {
+    /**
+     * @param {?} obj
+     */
+    function NgxGalleryImage(obj) {
+        this.small = obj.small;
+        this.medium = obj.medium;
+        this.big = obj.big;
+        this.description = obj.description;
+        this.url = obj.url;
+        this.label = obj.label;
+    }
+    return NgxGalleryImage;
+}());
+
+var __extends = (undefined && undefined.__extends) || (function () {
+    var extendStatics = Object.setPrototypeOf ||
+        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
+        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
+    return function (d, b) {
+        extendStatics(d, b);
+        function __() { this.constructor = d; }
+        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
+    };
+})();
+var CustomHammerConfig = /** @class */ (function (_super) {
+    __extends(CustomHammerConfig, _super);
+    function CustomHammerConfig() {
+        var _this = _super !== null && _super.apply(this, arguments) || this;
+        _this.overrides = ({
+            'pinch': { enable: false },
+            'rotate': { enable: false }
+        });
+        return _this;
+    }
+    return CustomHammerConfig;
+}(platformBrowser.HammerGestureConfig));
+var NgxGalleryModule = /** @class */ (function () {
+    function NgxGalleryModule() {
+    }
+    NgxGalleryModule.decorators = [
+        { type: core.NgModule, args: [{
+                    imports: [
+                        common.CommonModule
+                    ],
+                    declarations: [
+                        NgxGalleryActionComponent,
+                        NgxGalleryArrowsComponent,
+                        NgxGalleryBulletsComponent,
+                        NgxGalleryImageComponent,
+                        NgxGalleryThumbnailsComponent,
+                        NgxGalleryPreviewComponent,
+                        NgxGalleryComponent
+                    ],
+                    exports: [
+                        NgxGalleryComponent
+                    ],
+                    providers: [
+                        { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }
+                    ]
+                },] },
+    ];
+    /**
+     * @nocollapse
+     */
+    NgxGalleryModule.ctorParameters = function () { return []; };
+    return NgxGalleryModule;
+}());
+
+exports.CustomHammerConfig = CustomHammerConfig;
+exports.NgxGalleryModule = NgxGalleryModule;
+exports.NgxGalleryComponent = NgxGalleryComponent;
+exports.NgxGalleryActionComponent = NgxGalleryActionComponent;
+exports.NgxGalleryImageComponent = NgxGalleryImageComponent;
+exports.NgxGalleryThumbnailsComponent = NgxGalleryThumbnailsComponent;
+exports.NgxGalleryPreviewComponent = NgxGalleryPreviewComponent;
+exports.NgxGalleryArrowsComponent = NgxGalleryArrowsComponent;
+exports.NgxGalleryBulletsComponent = NgxGalleryBulletsComponent;
+exports.NgxGalleryOptions = NgxGalleryOptions;
+exports.NgxGalleryImage = NgxGalleryImage;
+exports.NgxGalleryAnimation = NgxGalleryAnimation;
+exports.NgxGalleryHelperService = NgxGalleryHelperService;
+exports.NgxGalleryImageSize = NgxGalleryImageSize;
+exports.NgxGalleryLayout = NgxGalleryLayout;
+exports.NgxGalleryOrder = NgxGalleryOrder;
+exports.NgxGalleryOrderedImage = NgxGalleryOrderedImage;
+exports.NgxGalleryAction = NgxGalleryAction;
+
+Object.defineProperty(exports, '__esModule', { value: true });
+
+})));
diff --git a/node_modules/ngx-gallery/ngx-gallery-helper.service.d.ts b/node_modules/ngx-gallery/ngx-gallery-helper.service.d.ts
index 65ff632..9c4e069 100644
--- a/node_modules/ngx-gallery/ngx-gallery-helper.service.d.ts
+++ b/node_modules/ngx-gallery/ngx-gallery-helper.service.d.ts
@@ -1,8 +1,8 @@
-import { ElementRef, Renderer } from '@angular/core';
+import { ElementRef, Renderer2 } from '@angular/core';
 export declare class NgxGalleryHelperService {
     private renderer;
     private swipeHandlers;
-    constructor(renderer: Renderer);
+    constructor(renderer: Renderer2);
     manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void;
     validateUrl(url: string): string;
     getBackgroundUrl(image: string): string;
diff --git a/node_modules/ngx-gallery/ngx-gallery-preview.component.d.ts b/node_modules/ngx-gallery/ngx-gallery-preview.component.d.ts
index 055a67b..061e38c 100644
--- a/node_modules/ngx-gallery/ngx-gallery-preview.component.d.ts
+++ b/node_modules/ngx-gallery/ngx-gallery-preview.component.d.ts
@@ -1,5 +1,5 @@
-import { ChangeDetectorRef, EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef, Renderer } from '@angular/core';
-import { SafeResourceUrl, DomSanitizer, SafeUrl, SafeStyle } from '@angular/platform-browser';
+import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
+import { DomSanitizer, SafeResourceUrl, SafeStyle, SafeUrl } from '@angular/platform-browser';
 import { NgxGalleryAction } from './ngx-gallery-action.model';
 import { NgxGalleryHelperService } from './ngx-gallery-helper.service';
 export declare class NgxGalleryPreviewComponent implements OnInit, OnChanges {
@@ -64,7 +64,7 @@ export declare class NgxGalleryPreviewComponent implements OnInit, OnChanges {
     private initialTop;
     private isMove;
     private keyDownListener;
-    constructor(sanitization: DomSanitizer, elementRef: ElementRef, helperService: NgxGalleryHelperService, renderer: Renderer, changeDetectorRef: ChangeDetectorRef);
+    constructor(sanitization: DomSanitizer, elementRef: ElementRef, helperService: NgxGalleryHelperService, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef);
     ngOnInit(): void;
     ngOnChanges(changes: SimpleChanges): void;
     ngOnDestroy(): void;
diff --git a/node_modules/ngx-gallery/ngx-gallery.d.ts b/node_modules/ngx-gallery/ngx-gallery.d.ts
index 67ff29a..2eee1ea 100644
--- a/node_modules/ngx-gallery/ngx-gallery.d.ts
+++ b/node_modules/ngx-gallery/ngx-gallery.d.ts
@@ -2,3 +2,5 @@
  * Generated bundle index. Do not edit.
  */
 export * from './index';
+
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWdhbGxlcnkuZC50cyIsInNvdXJjZXMiOlsibmd4LWdhbGxlcnkuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cclxuICovXHJcbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xyXG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-gallery/ngx-gallery.d.ts.__ivy_ngcc_bak b/node_modules/ngx-gallery/ngx-gallery.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..67ff29a
--- /dev/null
+++ b/node_modules/ngx-gallery/ngx-gallery.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,4 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './index';
