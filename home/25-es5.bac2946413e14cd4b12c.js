function _classCallCheck(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,a){for(var t=0;t<a.length;t++){var r=a[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,a,t){return a&&_defineProperties(e.prototype,a),t&&_defineProperties(e,t),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"+5OT":function(e,a,t){"use strict";t.r(a),a.default='<div fxLayout="row wrap">\r\n        <div fxFlex.gt-sm="100" fxFlex="100" id="viewroles">\r\n            <div fxFlex.gt-sm="100" fxFlex="100" class="viewrolesnew">\r\n                    <form class="example-form" [formGroup]="viewroleform">\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewroles.stactype\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="stkholdertype" value="OPAL Admin">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                        ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewroles.techevacen\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="techeval" value="Road Worthiness Assurance Standard (RAS)">                                \r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewroles.role\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="arrole" value="CEO">  \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                        ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewroles.highrrole\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="arrolehigh" value="Authority"> \r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter">\r\n                            {{\'viewroles.allomodulacce\' | translate}}\r\n                        </div>\r\n                    </div>\r\n    \r\n                    \x3c!--permission access table--\x3e\r\n                    <div fxLayout="row wrap" class="p-t-15">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="permissiontable">\r\n                            <table mat-table\r\n                            [dataSource]="dataSource" multiTemplateDataRows\r\n                            class="mat-elevation-z8">\r\n                                <ng-container matColumnDef="name">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewroles.modulname\' | translate}}  \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                            {{element.name}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="create">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewroles.cret\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label> {{element.create}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="update">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewroles.updat\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.update}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="delete">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewroles.dele\' | translate}}  \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.delete}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="approve">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewroles.approv\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.approve}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="download">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewroles.dowl\' | translate}}\r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox" disabled>\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.download}} \r\n                                        <span \r\n                                        class="example-element-row expandicon"\r\n                                        [class.example-expanded-row]="expandedElement === element"\r\n                                        (click)="expandedElement = expandedElement === element ? null : element"><mat-icon>{{expandedElement === element? \'remove\' : \'add\'}}</mat-icon></span>\r\n                                    </td>\r\n                                </ng-container>\r\n                                \x3c!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns --\x3e\r\n                                <ng-container matColumnDef="expandedDetail">\r\n                                    <td class="nopaddingtd" mat-cell *matCellDef="let element" [attr.colspan]="columnsToDisplay.length">\r\n                                    <div class="example-element-detail"\r\n                                            [@detailExpand]="element == expandedElement ? \'expanded\' : \'collapsed\'">\r\n                                            <table #innerTables class="subtable" mat-table [dataSource]="element.submodule">\r\n                                                    <ng-container matColumnDef="sname">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> <span class="p-l-30">{{element.sname}} </span></td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="screate">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label> \r\n                                                                {{element.screate}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="supdate">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.supdate}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="sdelete">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.sdelete}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="sapprove">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element">\r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.sapprove}}\r\n                                                             </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="sdownload">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.sdownload}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                <tr mat-header-row *matHeaderRowDef="innerDisplayedColumns"></tr>\r\n                                                <tr mat-row *matRowDef="let row; columns: innerDisplayedColumns;"></tr>\r\n                                            </table>\r\n                                    </div>\r\n                                    </td>\r\n                                </ng-container>\r\n                                \r\n                                <tr mat-header-row *matHeaderRowDef="columnsToDisplay"></tr>\r\n                                <tr mat-row *matRowDef="let element; columns: columnsToDisplay;">\r\n                                </tr>\r\n                                <tr mat-row *matRowDef="let row; columns: [\'expandedDetail\']" class="example-detail-row"></tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>                \r\n                    \x3c!--permission access table--\x3e\r\n                    <div fxLayout="row wrap" class="m-t-30" fxLayoutAlign="end">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-end center">\r\n                            <button mat-raised-button type="button" color="secondary"\r\n                                class="filterbtn height-45">{{\'viewroles.clos\' | translate}}</button>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    </form>\r\n            </div>\r\n        </div>\r\n    </div>'},"3Q/B":function(e,a,t){"use strict";t.r(a),a.default='#viewroles .viewrolesnew {\n  padding: 0 30px;\n  margin-bottom: 50px;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #d9d9d9;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border-radius: 3px 0 0 3px;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border-radius: 0 3px 3px 0;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: #6ba5ec;\n  background-color: #f8f8f8;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #0c4b9a;\n  background-color: #f8f8f8;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline.mat-focused.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  color: #0c4b9a;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  background-color: #f8f8f8;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #dc4c64;\n  background-color: #f8f8f8;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  transform: translateY(-0.9rem) scale(0.75);\n  color: #848484;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#viewroles .viewrolesnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap {\n  width: 0px !important;\n}\n#viewroles .viewrolesnew .mat-form-field-readonly .mat-form-field-flex .mat-form-field-outline {\n  background: #eaedf2;\n}\n#viewroles .viewrolesnew .aligncenter {\n  display: flex;\n  align-items: center;\n}\n#viewroles .viewrolesnew .aligncenter .mat-icon {\n  width: 16px;\n  height: 16px;\n  color: #666;\n  cursor: pointer;\n  font-size: 20px;\n  margin-top: 5px;\n}\n#viewroles .viewrolesnew .permissiontable {\n  width: 100%;\n  /* Hide the browser\'s default checkbox */\n  /* Create a custom checkbox */\n  /* On mouse-over, add a grey background color */\n  /* When the checkbox is checked, add a blue background */\n  /* When the checkbox is disabled, add a blue background */\n  /* Create the checkmark/indicator (hidden when not checked) */\n  /* Show the checkmark when checked */\n  /* Style the checkmark/indicator */\n}\n#viewroles .viewrolesnew .permissiontable table {\n  width: 100%;\n  box-shadow: none;\n}\n#viewroles .viewrolesnew .permissiontable tr.example-detail-row {\n  height: 0;\n}\n#viewroles .viewrolesnew .permissiontable tr.example-element-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n#viewroles .viewrolesnew .permissiontable tr.example-element-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n#viewroles .viewrolesnew .permissiontable .example-element-row td {\n  border-bottom-width: 0;\n}\n#viewroles .viewrolesnew .permissiontable .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#viewroles .viewrolesnew .permissiontable .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#viewroles .viewrolesnew .permissiontable .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#viewroles .viewrolesnew .permissiontable .example-element-description {\n  padding: 16px;\n}\n#viewroles .viewrolesnew .permissiontable .example-element-description-attribution {\n  opacity: 0.5;\n}\n#viewroles .viewrolesnew .permissiontable table th {\n  background: #eaedf2;\n  font-size: 14px;\n  color: #333;\n  font-weight: 600;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#viewroles .viewrolesnew .permissiontable table th:first-child {\n  text-align: left;\n  min-width: 250px;\n}\n#viewroles .viewrolesnew .permissiontable table td {\n  position: relative;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#viewroles .viewrolesnew .permissiontable table td:first-child {\n  text-align: left;\n  min-width: 250px;\n  color: #0c4b9a;\n}\n#viewroles .viewrolesnew .permissiontable table td .expandicon {\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n}\n#viewroles .viewrolesnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n#viewroles .viewrolesnew .permissiontable table td .subtable tr th, #viewroles .viewrolesnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n#viewroles .viewrolesnew .permissiontable table td .subtable tr td {\n  position: relative;\n  text-align: center;\n  min-width: 72px;\n  max-width: 72px;\n}\n#viewroles .viewrolesnew .permissiontable table td .subtable tr td:first-child {\n  max-width: 240px;\n  min-width: 240px;\n  text-align: left;\n  color: #333333;\n}\n#viewroles .viewrolesnew .permissiontable .checkcontainer {\n  display: inline-block;\n  position: relative;\n  margin-bottom: 12px;\n  padding-left: 25px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n#viewroles .viewrolesnew .permissiontable .checkcontainer input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n#viewroles .viewrolesnew .permissiontable .checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 16px;\n  width: 16px;\n  background-color: #fff;\n  border: 1px solid #bbb;\n}\n#viewroles .viewrolesnew .permissiontable .checkcontainer:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n#viewroles .viewrolesnew .permissiontable .checkcontainer input:checked ~ .checkmark {\n  background-color: #0c4b9a;\n}\n#viewroles .viewrolesnew .permissiontable .checkcontainer input:disabled ~ .checkmark {\n  background-color: #ddd;\n  cursor: no-drop;\n}\n#viewroles .viewrolesnew .permissiontable .checkmark:after {\n  content: "";\n  position: absolute;\n  display: none;\n}\n#viewroles .viewrolesnew .permissiontable .checkcontainer input:checked ~ .checkmark:after {\n  display: block;\n}\n#viewroles .viewrolesnew .permissiontable .checkcontainer .checkmark:after {\n  left: 4px;\n  top: 1px;\n  width: 4px;\n  height: 7px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n#viewroles .viewrolesnew .permissiontable .nopaddingtd {\n  padding: 0px !important;\n}\n@media (max-width: 768px) {\n  #viewroles .viewrolesnew .paddingspacing {\n    padding-right: 0px !important;\n    padding-left: 0px !important;\n  }\n  #viewroles .viewrolesnew .permissiontable {\n    overflow: auto;\n  }\n}\n[dir=rtl] #viewroles .viewrolesnew .permissiontable table th:first-child, .rtl #viewroles .viewrolesnew .permissiontable table th:first-child {\n  text-align: right;\n}\n[dir=rtl] #viewroles .viewrolesnew .permissiontable table td:first-child, .rtl #viewroles .viewrolesnew .permissiontable table td:first-child {\n  text-align: right;\n}\n[dir=rtl] #viewroles .viewrolesnew .permissiontable table td .expandicon, .rtl #viewroles .viewrolesnew .permissiontable table td .expandicon {\n  position: absolute;\n  left: 20px;\n  right: auto;\n  top: 50%;\n  transform: translateY(-50%);\n}\n[dir=rtl] #viewroles .viewrolesnew .permissiontable table td .expandicon .mat-icon, .rtl #viewroles .viewrolesnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n[dir=rtl] #viewroles .viewrolesnew .permissiontable table td .subtable tr th, [dir=rtl] #viewroles .viewrolesnew .permissiontable table td .subtable thead, .rtl #viewroles .viewrolesnew .permissiontable table td .subtable tr th, .rtl #viewroles .viewrolesnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n[dir=rtl] #viewroles .viewrolesnew .permissiontable table td .subtable tr td:first-child, .rtl #viewroles .viewrolesnew .permissiontable table td .subtable tr td:first-child {\n  text-align: right;\n}\n[dir=rtl] #viewroles .viewrolesnew .permissiontable .checkcontainer, .rtl #viewroles .viewrolesnew .permissiontable .checkcontainer {\n  padding-right: 25px;\n  padding-left: 0px;\n}'},"8OYX":function(e,a,t){"use strict";var r=t("lJxs");t.d(a,"a",(function(){return r.a}))},AFte:function(e,a,t){"use strict";t.r(a),t.d(a,"createTranslateLoader",(function(){return le})),t.d(a,"NewenterpriseadminModule",(function(){return se}));var r=t("mrSG"),n=t("8Y7J"),l=t("SVse"),s=t("9urI"),o=t("iInd"),i=t("s7LF"),d=t("UhP/"),c=t("GS7A"),m=t("OaSA"),u=t("fWzN"),p=t("TSSN"),f=t("z4EA"),h=t("xCVs"),g=t("mSR1"),b=t("fgD+"),x=t("GUC0"),v=t.n(x),w=t("KNwP"),k=t("IheW"),y=t("EApP"),C=t("AytR"),D=t("Kxyj"),_=t("YEzn"),I=t("LUZP"),F=t("OM4V"),O=t("EHPe"),S=t("8OYX"),L=t("toQo"),A=t("5QHs"),j=t("AQhQ"),V=t("BmmT"),N=t("wd/R"),P=t.n(N),M=t("ZTz/"),U=t("jtHE"),T=function(){function e(a,t,r,l,s,o,c,m,u,p,f,h){_classCallCheck(this,e),this.formBuilder=a,this.translate=t,this.router=r,this.routeid=l,this.enterprise=s,this.encrypt=o,this.remoteService=c,this.cookieService=m,this.http=u,this.localstorage=p,this.toastr=f,this.appservice=h,this.centre_array_tech=[],this.certificationmanditory=!1,this.coursemanditory=!1,this.certification_array_tech=[],this.userdeleteaccess=!1,this.userreadaccess=!1,this.usercreateaccess=!1,this.userupdateaccess=!1,this.rolecreateaccess=!1,this.rolereadaccess=!1,this.roleupdateaccess=!1,this.roledeleteaccess=!1,this.certification_array_insert=[],this.batchread=!1,this.userroleallocation=!1,this.addrolecreationpage=!1,this.addrolecreation=new n.y,this.rolegridlistdata=new n.y,this.change=new n.y,this.showrole=!1,this.addUserFromType=1,this.allSelected=!1,this.datachecked=2,this.roledatapatch=[],this.userdatapatch=[],this.centrepatch=[],this.userdataL=[],this.userCenter=[],this.staffuser=[],this.stkpk=1,this.tblplaceholder=!1,this.moduleicon=!0,this.moduleaccess=!1,this.showhighrole=!1,this.rolefiltersts=!0,this.userfiltersts=!0,this.centrefiltersts=!0,this.showhighupdate=!1,this.showevaltech=!1,this.opaladmindatashow=!1,this.opaladmincentreshow=!1,this.opaladminshowapproval=!1,this.showstandardcourse=!1,this.focalPoint=!1,this.nonEditPart=!1,this.userdata=[],this.managenaming="",this.assignModule="",this.closeText="",this.add_btn=!0,this.rolesrecordcolumn=["omrm_stkholdertypmst_fk","omrm_companyname_en","oum_idnumber","oum_firstname","oum_emailid","oum_mobno","oum_isfocalpoint","rm_rolename_en","oum_isthirdpartyagent","oum_status","oum_createdon","oum_updatedon","action"],this.centerrecordcolumn=["oum_idnumber","oum_firstname","oum_emailid","oum_mobno","role","oum_status","oum_createdon","oum_updatedon","action"],this.centredatashow=!1,this.centredatashowtech=!1,this.thirdaprtyshowopal=!1,this.userrecordcolumn=["rm_opalstkholdertypmst_fk","pm_projectname_en","rm_rolename_en","higherRole","rm_status","rm_createdon","rm_updatedon","action"],this.filtername="Hide Filter",this.hidefilder=!0,this.page=10,this.matcher=new d.d,this.requiredtag=!1,this.role_stktype=[],this.role_project=[],this.user_stktype=[],this.user_role=[],this.higherrolefilter=[],this.rolereDirection="",this.centre_array=[],this.stktypesearch=new i.f(""),this.projectsearch=new i.f(""),this.rolesearch=new i.f(""),this.highrolesearch=new i.f(""),this.statussearch=new i.f(""),this.addedonsearch=new i.f(""),this.updatedonsearch=new i.f(""),this.stafName=new i.f(""),this.emailid=new i.f(""),this.focal_point=new i.f(""),this.stakeholdertype=new i.f(""),this.companynm=new i.f(""),this.civilNo=new i.f(""),this.mobilno=new i.f(""),this.roleName_en=new i.f(""),this.status=new i.f(""),this.addedOn=new i.f(""),this.lastUpdateOn=new i.f(""),this.isthirdPartyAgent=new i.f(""),this.showrolegrid=!1,this.viewRoleUserdis=!1,this.viewUserdis=!1,this.viewCenterUserdis=!1,this.viewBackBackbutton=!1,this.hidegrid=!0,this.usergrid=!1,this.hideusergrid=!0,this.hidecentergrid=!0,this.apptype="new",this.staffslist=[],this.staffslistcentre=[],this.ifarabic=!1,this.cert_typelist=[],this.standard_list=[],this.highrolelist=[],this.today=new Date,this.columnsToDisplay=["name","create","update","delete","approve","download"],this.innerDisplayedColumns=["sname","screate","supdate","sdelete","sapprove","sdownload"],this.selectFormControl=new i.f,this.moduleFilter=new i.f,this.highFilter=new i.f,this.selectedValues=[],this.filteredmoduleData=new U.a(1),this.filterhighrole=new U.a(1),this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr",this.arrolesControl=new i.f,this.role_mstlist=[],this.userPermission=[],this.updated=!1,this.roledata=[],this.currentUserPk="",this.userPermissionsActivityLogs=[],this.toggledata=!1,this.centregrid=!1,this.hidecentregrid=!0,this.noData="",this.stkholdertype=this.localstorage.getInLocal("omrm_stkholdertypmst_fk")}return _createClass(e,[{key:"i18n",value:function(e){return this.translate.instant(e)}},{key:"ngOnInit",value:function(){var e=this;if(this.stktype=this.localstorage.getInLocal("stktype"),this.routeid.queryParams.subscribe((function(a){if(e.refname=e.encrypt.decrypt(a.type),3==e.refname&&1==e.stktype?e.router.navigate(["dashboard/portaladmin"]):1!=e.refname&&2!=e.refname||2!=e.stktype||e.router.navigate(["dashboard/centre"]),e.rolereDirection=a.id,"rd"==e.rolereDirection){var t=e.encrypt.decrypt(a.role);e.roleName_en.setValue(t),e.status.setValue("A")}})),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){var a=this.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));this.translate.setDefaultLang(a.languagecode),this.dir=a.dir,"en"==a.languagecode?this.filtername="Hide Filter":this.filtername="\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0635\u0641\u064a\u0629"}else{var t=this.languagelist.find((function(e){return"1"==e.id}));this.translate.setDefaultLang(t.languagecode),this.dir=t.dir,this.filtername="Hide Filter"}this.remoteService.getLanguageCookie().subscribe((function(a){if(e.translate.setDefaultLang(e.cookieService.get("languageCode")),e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")){var t=e.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));e.translate.setDefaultLang(t.languagecode),e.dir=t.dir,"en"==t.languagecode?e.filtername="Hide Filter":e.filtername="\u0625\u062e\u0641\u0627\u0621 \u0627\u0644\u062a\u0635\u0641\u064a\u0629",e.cookieService.get("languageCode")&&"en"==e.cookieService.get("languageCode")?e.ifarabic=!1:e.ifarabic=!0}else{var r=e.languagelist.find((function(e){return"1"==e.id}));e.translate.setDefaultLang(r.languagecode),e.dir=r.dir,e.filtername="Hide Filter",e.cookieService.get("languageCode")&&"en"==e.cookieService.get("languageCode")?e.ifarabic=!1:e.ifarabic=!0}})),this.isfocalpoint=this.localstorage.getInLocal("isfocalpoint"),2==this.isfocalpoint?(this.useraccess=this.localstorage.getInLocal("uerpermission"),this.SetUseraccess()):(this.userdeleteaccess=!0,this.userreadaccess=!0,this.usercreateaccess=!0,this.userupdateaccess=!0,this.rolecreateaccess=!0,this.rolereadaccess=!0,this.roleupdateaccess=!0,this.roledeleteaccess=!0),1!=this.refname&&2!=this.refname&&3!=this.refname||!this.rolereadaccess&&!this.userreadaccess?1!=this.refname&&2!=this.refname&&3!=this.refname||this.rolereadaccess||this.userreadaccess?this.router.navigate(["admin/login"]):this.noaccess():(this.initializeForm(),1==this.refname&&this.rolereadaccess?(this.adduserroleform.controls.emailid.valueChanges.debounceTime(400).subscribe((function(a){var t,r;null!=(null===(t=e.adduserroleform.controls.emailid.errors)||void 0===t?void 0:t.pattern)&&null!=(null===(r=e.adduserroleform.controls.emailid.errors)||void 0===r?void 0:r.pattern)||e.chkValidemailId(a)})),this.stktypesearch.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.projectsearch.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.rolesearch.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.highrolesearch.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.statussearch.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.addedonsearch.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.updatedonsearch.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.addroleform.controls.arrolehigh.valueChanges.subscribe((function(a){if(a){var t=e.highrolelist.findIndex((function(e){return e.rolemst_pk==a[0]}));-1!==t&&(e.highrollist=e.highrolelist[t].rm_rolename_en)}else e.highrollist=""}))):2!=this.refname&&3!=this.refname||!this.userreadaccess?(2!=this.refname&&3!=this.refname||this.userreadaccess)&&(1!=this.refname||this.rolereadaccess)||this.noaccess():(3==this.refname&&(this.stkpk=2,this.cntreform.emailidcentre.disable(),this.cntreform.civilnocentre.disable(),this.cntreform.rolescentre.disable(),this.cntreform.staffcentrerepopk.disable()),this.stafName.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.emailid.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.stakeholdertype.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.companynm.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.civilNo.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.mobilno.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.focal_point.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.roleName_en.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.status.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.addedOn.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.lastUpdateOn.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.isthirdPartyAgent.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageRolesDtls())})),this.adduserroleform.controls.arroles.valueChanges.subscribe((function(a){if(a){var t=e.role_mstlist.findIndex((function(e){return e.rolemst_pk==a[0]}));-1!==t&&(e.rollist=e.role_mstlist[t].rm_rolename_en)}else e.rollist=""})),this.adduserroleform.controls.arproject.valueChanges.subscribe((function(a){if(a){var t=e.cert_typelist.findIndex((function(e){return e.projectmst_pk==a[0]}));-1!==t&&(e.projist=e.cert_typelist[t].pm_certificationname_en)}else e.projist=""})),this.adduserroleform.controls.arcourse.valueChanges.subscribe((function(a){if(a){var t=e.standard_list.findIndex((function(e){return e.standardcoursemst_pk==a[0]}));-1!==t&&(e.courseist=e.standard_list[t].scm_coursename_en)}else e.courseist=""}))),this.roledatas(),this.gethigerroledata(),this.userdatas(),this.highroledata(),2==this.refname?(this.managenaming="Users",this.centredata()):3==this.refname?(this.managenaming="Center users",this.staffdatalist()):this.managenaming="Roles",this.rolesmstata(),this.standardmstdata()),this.moduleFilter.valueChanges.subscribe((function(){e.moduleFilters()})),this.highFilter.valueChanges.subscribe((function(){e.highRolesFilters()}))}},{key:"moduleFilters",value:function(){if(this.role_mstlist){var e=this.moduleFilter.value;e?(e=e.toLowerCase(),this.filteredmoduleData.next(this.role_mstlist.filter((function(a){return a.rm_rolename_en.toLowerCase().indexOf(e)>-1})))):this.filteredmoduleData.next(this.role_mstlist.slice())}}},{key:"highRolesFilters",value:function(){if(this.highrolelist){var e=this.highFilter.value;e?(e=e.toLowerCase(),this.filterhighrole.next(this.highrolelist.filter((function(a){return a.rm_rolename_en.toLowerCase().indexOf(e)>-1})))):this.filterhighrole.next(this.highrolelist.slice())}}},{key:"noaccess",value:function(){var e=this;v()({title:"You do not have the privilege to access this module. Kindly reach out to your Organisation's Administrator for assistance.",icon:"warning",closeOnClickOutside:!1,closeOnEsc:!1}).then((function(a){a&&(1==e.stktype?e.router.navigate(["dashboard/portaladmin"]):e.router.navigate(["dashboard/centre"]))}))}},{key:"gethigerroledata",value:function(){var e=this;this.enterprise.gethigherrolesdtls().subscribe((function(a){e.higherrolefilter=a.data.data}))}},{key:"ngAfterViewInit",value:function(){this.getManageRolesDtls()}},{key:"SetUseraccess",value:function(){var e=this.localstorage.getaccessmoduleid(this.stktype,"Manage Users"),a=1==this.stktype?3:20;this.useraccess[e]&&this.useraccess[e][a]&&"Y"==this.useraccess[e][a].delete&&(this.userdeleteaccess=!0),this.useraccess[e]&&this.useraccess[e][a]&&"Y"==this.useraccess[e][a].read&&(this.userreadaccess=!0),this.useraccess[e]&&this.useraccess[e][a]&&"Y"==this.useraccess[e][a].create&&(this.usercreateaccess=!0),this.useraccess[e]&&this.useraccess[e][a]&&"Y"==this.useraccess[e][a].update&&(this.userupdateaccess=!0);var t=this.localstorage.getaccessmoduleid(this.stktype,"Manage Roles");this.useraccess[t]&&this.useraccess[t][2]&&"Y"==this.useraccess[t][2].create&&(this.rolecreateaccess=!0),this.useraccess[t]&&this.useraccess[t][2]&&"Y"==this.useraccess[t][2].read&&(this.rolereadaccess=!0),this.useraccess[t]&&this.useraccess[t][2]&&"Y"==this.useraccess[t][2].update&&(this.roleupdateaccess=!0),this.useraccess[t]&&this.useraccess[t][2]&&"Y"==this.useraccess[t][2].delete&&(this.roledeleteaccess=!0)}},{key:"initializeForm",value:function(){this.addroleform=this.formBuilder.group({stkholdertype:[null,i.x.required],techeval:[null,""],arrole:[null,i.x.required],rolearbic:[null,i.x.required],arrolehigh:[null,i.x.required],useraccess:[null,null],addusertypecontrol:[null,null],userPk:[null,null],rolerelpk:[null,null],arrolehighupdate:[null,null]}),this.adduserroleform=this.formBuilder.group({stkholdertypeuser:[null,i.x.required],techevaluser:[null,""],civilno:[null,i.x.required],stafName:[null,i.x.required],emailid:[null,i.x.required],mobilenumber:[null,i.x.required],arroles:[null,i.x.required],centrename:[null,""],slider:[null,i.x.required],rolecentre:[null],stafnamecentre:[null,""],staffrepopk:[null],opalusermstpk:[null,null],username:[null,null],password:[null,null],arproject:[null,null],arcourse:[null,null],arprojectpk:[null,null]}),this.centreform=this.formBuilder.group({staffsnamecentre:[null,i.x.required],civilnocentre:["",""],emailidcentre:["",""],mobilenumbercentre:["",""],rolescentre:["",""],rolescentreid:["",""],staffsnamecentrename:["",""],staffcentrerepopk:[null],opalusermstpk:[null,null],username:[null,null],password:[null,null]})}},{key:"adduserform",get:function(){return this.adduserroleform.controls}},{key:"addrolform",get:function(){return this.addroleform.controls}},{key:"cntreform",get:function(){return this.centreform.controls}},{key:"chkValidemailId",value:function(e){var a=this,t={emailid:e,usrid:this.adduserroleform.controls.userPk.value,stktype:this.stkholdertype};this.enterprise.checkEmailExistOrNot("ea/enterpriseadmin/check-email-exist",t).subscribe((function(e){var t;(null==e?void 0:e.success)&&((null===(t=null==e?void 0:e.data)||void 0===t?void 0:t.data)?a.adduserroleform.controls.emailid.setErrors({alreadyExist:!0}):a.adduserroleform.controls.emailid.setErrors(null))}))}},{key:"adduserdatasave",value:function(){var e=this;if(this.adduserroleform.valid){if(this.adduserroleform.enable(),this.disableSubmitButton=!0,this.project_str=this.adduserroleform.controls.arproject.value,this.batchread&&-1===this.project_str.indexOf("2"))return this.disableSubmitButton=!1,v()({title:this.i18n("You are allocating Batch Management access to this User. It is mandatory to select the 'Certification Type' as 'Standard Course Certification'."),text:"",icon:"warning",buttons:[!1,this.i18n("Ok")],dangerMode:!0,className:"ltr"==this.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then((function(e){})),this.moduleAllocation(this.adduserroleform.value.arroles,1),!1;this.enterprise.saveuserdata(this.adduserroleform.value,this.apptype).subscribe((function(a){if("failed"==a.data)return e.disableSubmitButton=!1,v()({title:e.i18n("The user cannot be added to the following Certification Type with Approval access, as the role is not mapped in the Approval workflow."),text:"",icon:"warning",buttons:[!1,e.i18n("Ok")],dangerMode:!0,className:"ltr"==e.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then((function(e){})),e.moduleAllocation(e.adduserroleform.value.arroles,1),!1;"new"==a.data?e.toastr.success(e.i18n("addroles.theuserhasbeen"),""):e.toastr.success(e.i18n("addroles.theuserhasupda"),""),e.disableSubmitButton=!1,e.usergrid=!1,e.hideusergrid=!0,e.adduserroleform.reset(),setTimeout((function(){e.getManageRolesDtls()}),500)}))}}},{key:"update",value:function(e,a){var t=this,r="",n="";2==a||"I"==a?(r="Do you want to Activate this Role?",n="Do you want to Activate this User?"):(r="Do you want to Deactivate this Role?",n="Do you want to Deactivate this User?");var l=this.encrypt.encrypt(e);this.postParams={userPk:l,status:a},v()({title:1==this.refname?r:n,icon:"warning",buttons:["No","Yes"],dangerMode:!0,closeOnClickOutside:!1,closeOnEsc:!1}).then((function(e){e&&(1==t.refname?t.postUrl="ea/enterpriseadmin/update-stakholder-users":t.postUrl="ea/enterpriseadmin/update-manageorcenter-users",t.enterprise.enterpriseService(t.postParams,t.postUrl).subscribe((function(e){this.getManageRolesDtls(),200==e.data.status?v()({title:"",icon:"success",closeOnClickOutside:!1,closeOnEsc:!1}):v()({title:e.data.msg,icon:"success",closeOnClickOutside:!1,closeOnEsc:!1})}).bind(t)))}))}},{key:"addcentredatasave",value:function(){var e=this;this.centreform.valid&&(this.centreform.enable(),this.enterprise.savecentredata(this.centreform.value,this.apptype).subscribe((function(a){200==a.status&&e.getManageRolesDtls()})),this.centregrid=!1,this.hidecentregrid=!0,this.adduserroleform.reset())}},{key:"isFormValid",get:function(){var e=!0;return(this.adduserroleform.valid||!this.previousFormValue||this.previousFormValue&&this.isFormsValueChanged)&&(e=this.adduserroleform.invalid),e}},{key:"isFormsValueChanged",get:function(){return JSON.stringify(this.previousFormValue)!==JSON.stringify(this.adduserroleform.value)}},{key:"isFormroleValid",get:function(){var e=!0;return(this.add_btn&&this.addroleform.valid&&this.userPermission.length>0||!this.add_btn&&this.previousFormValue&&this.isFormsroleValueChanged&&this.userPermission.length>0)&&(e=!1),e}},{key:"isFormsroleValueChanged",get:function(){return this.previousFormValue!==JSON.stringify(this.addroleform.value)}},{key:"addrolesave",value:function(){var e=this;console.log(this.userPermission,"this.userPermission"),this.scrollTo("addrolesnew"),this.addUpdateAccess.savemodulepermissionallocation(),this.disableSubmitButton=!0,this.addroleform.controls.useraccess.setValue(this.userPermission),this.addroleform.valid&&this.enterprise.saverolesdata(this.addroleform.value,this.apptype).subscribe((function(a){if("failed"==a.data)return e.userPermission=[],e.disableSubmitButton=!1,v()({title:e.i18n("You cannot give the Approval Access for a new role. Please remove and proceed."),text:"",icon:"warning",buttons:[!1,e.i18n("Ok")],dangerMode:!0,className:"ltr"==e.dir?"swalEng":"swalAr",closeOnClickOutside:!1}).then((function(e){})),!1;e.disableSubmitButton=!1,"new"==a.data?e.toastr.success(e.i18n("addroles.therolhascred"),""):e.toastr.success(e.i18n("addroles.therolhasupdat"),""),e.showrolegrid=!1,e.hidegrid=!0,e.addroleform.reset(),e.gethigerroledata(),e.getuserroledata(),e.getManageRolesDtls(),e.userPermission=[]}))}},{key:"roledatas",value:function(){var e=this;this.enterprise.getrolestktypedata().subscribe((function(a){e.role_stktype=a.data.stktypedata,e.role_project=a.data.projectdata}))}},{key:"rolesmstata",value:function(){var e=this;this.enterprise.getroledtls(1).subscribe((function(a){e.role_mstlist=a.data,e.relopk=a.data.rolemst_pk,e.filteredmoduleData.next(e.role_mstlist.slice())}))}},{key:"projectmstdata",value:function(){var e=this;this.enterprise.getprojectdtls(this.certification_array_tech).subscribe((function(a){console.log(a.data.projectList,"projectlist"),e.cert_typelist=a.data.projectList,e.cert_typelist||(e.opaladminshowapproval=!1),e.cert_typelist&&(e.opaladminshowapproval=!0),e.relopk=a.data.rolemst_pk}))}},{key:"standardmstdata",value:function(){var e=this;this.enterprise.getcoursetls().subscribe((function(a){console.log(a.data.courseList,"courselist"),e.standard_list=a.data.courseList}))}},{key:"userdatas",value:function(){var e=this;this.enterprise.getstktypeuserddtls().subscribe((function(a){e.user_stktype=a.data.stktypeuserdata,e.centre_array=a.data.userdatafetchlist,e.centre_array_tech_ras=a.data.userdatafetchlisttechras,e.centre_array_tech_ivms=a.data.userdatafetchlisttechivms}))}},{key:"selectCentrelist",value:function(e){this.centre_array_tech=null,4==e&&(this.centre_array_tech=this.centre_array_tech_ras),5==e&&(this.centre_array_tech=this.centre_array_tech_ivms),null==this.centre_array_tech&&v()({title:this.i18n("No Centres Available"),icon:"warning",dangerMode:!0,closeOnClickOutside:!1})}},{key:"centredata",value:function(){var e=this;this.enterprise.getcentrelistdtls().subscribe((function(a){e.staffslist=a.data.stafffcentretchdata}))}},{key:"staffdatalist",value:function(){var e=this;this.enterprise.getstafflistdata().subscribe((function(a){e.staffslistcentre=a.data}))}},{key:"staffdatalist1",value:function(e){var a=this;this.enterprise.getstafflistdata1(e).subscribe((function(e){a.staffslistcentre=e.data}))}},{key:"selectciviliddata",value:function(e){var a=this;this.adduserroleform.controls.stafName.enable(),this.adduserroleform.controls.civilno.enable(),this.adduserroleform.controls.mobilenumber.enable(),this.adduserroleform.controls.emailid.enable(),this.adduserroleform.controls.rolecentre.enable(),this.adduserroleform.controls.slider.enable(),this.adduserroleform.controls.stafnamecentre.enable(),this.enterprise.stafffetchdata(e).subscribe((function(e){a.staffslist=e.data,0==a.staffslist.length&&v()({title:a.i18n("addroles.nostafavail"),icon:"warning",dangerMode:!0,closeOnClickOutside:!1}),a.adduserroleform.controls.civilno.reset(),a.adduserroleform.controls.emailid.reset(),a.adduserroleform.controls.mobilenumber.reset(),a.adduserroleform.controls.rolecentre.reset()}))}},{key:"selectciviliddata1",value:function(e){var a=this;this.enterprise.stafffetchdata1(e).subscribe((function(e){a.staffslist=e.data}))}},{key:"highroledata",value:function(){var e=this;this.enterprise.gethighrolefetchlist(this.relopk).subscribe((function(a){e.highrolelist=a.data.highroledata,e.filterhighrole.next(e.highrolelist.slice())}))}},{key:"selectcivilid",value:function(e){var a=this;this.enterprise.checkstaffuser(e).subscribe((function(t){a.staffuser=t.data.data,a.staffuser?(v()({title:a.i18n("addroles.theuserisalredcred"),icon:"warning",closeOnClickOutside:!1,closeOnEsc:!1}),a.adduserform.stafnamecentre.reset(),a.adduserform.emailid.reset(),a.adduserform.civilno.reset(),a.adduserform.rolecentre.reset(),a.adduserform.arroles.reset(),a.adduserform.mobilenumber.reset(),a.adduserform.stafName.reset()):a.staffslist.forEach((function(t){t.staffinforepo_pk==e&&(a.moduleAllocation(t.appsim_roleforcourse,2),a.adduserform.emailid.setValue(t.sir_emailid),a.adduserform.civilno.setValue(t.sir_idnumber),a.adduserform.rolecentre.setValue(t.rm_rolename_en),a.adduserform.arroles.setValue(null!==t.appsim_roleforcourse?t.appsim_roleforcourse.split(","):null),a.adduserform.mobilenumber.setValue(t.sir_mobnum),a.adduserform.staffrepopk.setValue(t.staffinforepo_pk),a.adduserform.stafName.setValue(t.sir_name_en),a.updated=!0)}))}))}},{key:"selectcivilidcentre",value:function(e){var a=this;this.userroleallocation=!0,this.enterprise.checkstaffuser(e).subscribe((function(t){a.staffuser=t.data.data,a.staffuser?(v()({title:a.i18n("addroles.thisuseralredmap"),icon:"warning",closeOnClickOutside:!1,closeOnEsc:!1}),a.cntreform.staffsnamecentre.reset(),a.cntreform.emailidcentre.reset(),a.cntreform.civilnocentre.reset(),a.cntreform.rolescentre.reset(),a.cntreform.rolescentreid.reset(),a.cntreform.staffcentrerepopk.reset(),a.cntreform.staffsnamecentrename.reset(),a.cntreform.mobilenumbercentre.reset()):a.staffslistcentre.forEach((function(t){t.staffinforepo_pk==e&&(a.moduleAllocation(t.appsim_roleforcourse,2),a.cntreform.emailidcentre.setValue(t.sir_emailid),a.cntreform.civilnocentre.setValue(t.sir_idnumber),a.cntreform.rolescentre.setValue(t.rm_rolename_en),a.cntreform.rolescentreid.setValue(null!==t.appsim_roleforcourse?t.appsim_roleforcourse.split(","):null),a.cntreform.staffcentrerepopk.setValue(t.staffinforepo_pk),a.cntreform.staffsnamecentrename.setValue(t.sir_name_en),a.cntreform.mobilenumbercentre.setValue(t.sir_mobnum),a.updated=!0)}))}))}},{key:"gotoback",value:function(){this.rolegridlistdata.emit(!0),this.addrolecreation.emit(!1)}},{key:"scrollTo",value:function(e){try{document.querySelectorAll("."+e)[0].scrollIntoView({behavior:"smooth"})}catch(a){}}},{key:"getuserroledata",value:function(){var e=this;this.enterprise.getrolegriddtls().subscribe((function(a){200==a.status&&(e.roledata.data=a.data.roleList,e.resultsLength=e.roledata.data.length)}))}},{key:"selectedStktype",value:function(e){this.addroleform.controls.arrole.reset(),this.addroleform.controls.rolearbic.reset(),this.addUpdateAccess.getuseraccess(e),1==e?(this.showrole=!0,this.stkpk=1,this.showhighrole=!0,this.showevaltech=!1,this.addroleform.controls.techeval.reset(),this.addroleform.controls.techeval.setValidators(null),this.addroleform.controls.techeval.updateValueAndValidity(),this.addroleform.controls.arrolehigh.setValidators([i.x.required]),this.addroleform.controls.arrolehigh.updateValueAndValidity()):2==e?(this.stkpk=2,this.showrole=!0,this.showhighrole=!1,this.showevaltech=!1,this.addroleform.controls.arrolehigh.reset(),this.addroleform.controls.arrolehigh.setValidators(null),this.addroleform.controls.arrolehigh.updateValueAndValidity(),this.addroleform.controls.techeval.reset(),this.addroleform.controls.techeval.setValidators(null),this.addroleform.controls.techeval.updateValueAndValidity()):(this.stkpk=2,this.showrole=!0,this.showhighrole=!1,this.showevaltech=!0,this.addroleform.controls.arrolehigh.reset(),this.addroleform.controls.arrolehigh.setValidators(null),this.addroleform.controls.arrolehigh.updateValueAndValidity(),this.addroleform.controls.techeval.setValidators([i.x.required]),this.addroleform.controls.techeval.updateValueAndValidity())}},{key:"selectedStktypeuser",value:function(e){console.log(this.adduserroleform.controls.arroles.value),this.addUpdateAccess.getuseraccess(e),1==e?(this.stkpk=1,this.opaladmindatashow=!0,this.thirdaprtyshowopal=!0,this.showevaltechuser=!1,this.opaladmincentreshow=!0,this.centredatashow=!1,this.centredatashowtech=!1,this.requiredtag=!0,this.userroleallocation=!0,this.updated=!1,this.adduserroleform.controls.stafName.enable(),this.adduserroleform.controls.civilno.enable(),this.adduserroleform.controls.mobilenumber.enable(),this.adduserroleform.controls.emailid.enable(),this.adduserroleform.controls.rolecentre.enable(),this.adduserroleform.controls.slider.enable(),this.adduserroleform.controls.stafnamecentre.enable(),this.adduserroleform.controls.stafName.reset(),this.adduserroleform.controls.civilno.reset(),this.adduserroleform.controls.mobilenumber.reset(),this.adduserroleform.controls.emailid.reset(),this.adduserroleform.controls.stafnamecentre.setValidators(null),this.adduserroleform.controls.stafnamecentre.updateValueAndValidity(),this.adduserroleform.controls.stafnamecentre.reset(),this.adduserroleform.controls.centrename.setValidators(null),this.adduserroleform.controls.centrename.updateValueAndValidity(),this.adduserroleform.controls.centrename.reset(),this.adduserroleform.controls.rolecentre.reset(),this.adduserroleform.controls.rolecentre.setValidators(null),this.adduserroleform.controls.rolecentre.updateValueAndValidity(),this.addroleform.controls.techevaluser.reset(),this.addroleform.controls.techevaluser.setValidators(null),this.addroleform.controls.techevaluser.updateValueAndValidity()):(this.stkpk=2,this.opaladmindatashow=!0,this.opaladmincentreshow=!1,3==e?(this.centredatashowtech=!0,this.showevaltechuser=!0,this.centredatashow=!1,this.addroleform.controls.techevaluser.reset(),this.addroleform.controls.techevaluser.setValidators([i.x.required]),this.addroleform.controls.techevaluser.updateValueAndValidity()):(this.centredatashow=!0,this.centredatashowtech=!1,this.showevaltechuser=!1,this.addroleform.controls.techevaluser.reset(),this.addroleform.controls.techevaluser.setValidators(null),this.addroleform.controls.techevaluser.updateValueAndValidity()),this.thirdaprtyshowopal=!1,this.userroleallocation=!0,this.requiredtag=!1,this.adduserroleform.controls.stafnamecentre.disable(),this.adduserroleform.controls.civilno.disable(),this.adduserroleform.controls.mobilenumber.disable(),this.adduserroleform.controls.emailid.disable(),this.adduserroleform.controls.rolecentre.disable(),this.adduserroleform.controls.slider.disable(),this.adduserroleform.controls.centrename.setValidators([i.x.required]),this.adduserroleform.controls.centrename.updateValueAndValidity(),this.adduserroleform.controls.stafName.setValidators(null),this.adduserroleform.controls.stafName.updateValueAndValidity(),this.adduserroleform.controls.stafName.reset(),this.adduserroleform.controls.emailid.setValidators(null),this.adduserroleform.controls.emailid.updateValueAndValidity(),this.adduserroleform.controls.emailid.reset(),this.adduserroleform.controls.mobilenumber.setValidators(null),this.adduserroleform.controls.mobilenumber.updateValueAndValidity(),this.adduserroleform.controls.mobilenumber.reset(),this.adduserroleform.controls.civilno.setValidators(null),this.adduserroleform.controls.civilno.updateValueAndValidity(),this.adduserroleform.controls.civilno.reset(),this.adduserroleform.controls.slider.setValidators(null),this.adduserroleform.controls.slider.updateValueAndValidity(),this.adduserroleform.controls.slider.reset(),this.adduserroleform.controls.arroles.setValidators(null),this.adduserroleform.controls.arroles.updateValueAndValidity(),this.adduserroleform.controls.arroles.reset(),this.adduserroleform.controls.stafnamecentre.setValidators([i.x.required]),this.adduserroleform.controls.stafnamecentre.updateValueAndValidity(),this.opaladminshowapproval=!1)}},{key:"isFormValueChanged",get:function(){return JSON.stringify(this.previousFormValue)!==JSON.stringify(this.addroleform.value)}},{key:"ismoduleValueChanged",get:function(){return 1!=this.addUserFromType||this.userPermission.length>0&&JSON.stringify(this.previousmoduleValue)!==JSON.stringify(this.userPermission)}},{key:"editData",value:function(e,a){this.closeText="updating",this.moduleaccess=!0,this.nonEditPart=!0,this.hidegrid=!1,this.showrolegrid=!0,this.apptype="edit",this.userroleallocation=!0,this.addUpdateAccess&&(this.addUpdateAccess.dataSourceforpermission=[]);var t=this.encrypt.encrypt(a);this.postParams={rolepk:t,stkpk:e.stakeholdertype},this.currentUserPk=a,this.postUrl="ea/enterpriseadmin/stk-update-user-details",this.enterprise.enterpriseService(this.postParams,this.postUrl).subscribe((function(e){var a,t;0==e.data.status?this.showWSuccess(e.data.msg):(null===(a=this.addUpdateAccess)||void 0===a||a.userAccessModification(null===(t=e.data)||void 0===t?void 0:t.data),this.previousmoduleValue=e.data.data.baseModulesAccess,this.userPermission=e.data.data.checkedAccess)}).bind(this)),this.add_btn=!1,1==e.stakeholdertype?(this.showrole=!0,this.showevaltech=!1,this.showhighrole=!0):2==e.stakeholdertype&&null==e.rm_projectmst_fk||2==e.stakeholdertype&&null!=e.rm_projectmst_fk?(this.showrole=!0,this.showevaltech=!1,this.showhighrole=!1):(this.showhighrole=!1,this.showrole=!0,this.showevaltech=!0),1==e.stakeholdertype?this.addroleform.patchValue({stkholdertype:1,arrole:e.rolename_en,rolearbic:e.rolename_ar,arrolehigh:e.higherRolearr,rolerelpk:e.rolemst_pk}):4==e.projecttype||5==e.projecttype?(this.addroleform.controls.arrolehigh.setValidators(null),this.addroleform.controls.arrolehigh.updateValueAndValidity(),this.addroleform.patchValue({stkholdertype:3,techeval:null!=e.projectname_en?"Roadworthiness Assurance Standards (RAS)"==e.projectname_en?"4":"5":null,arrole:e.rolename_en,rolearbic:e.rolename_ar,rolerelpk:e.rolemst_pk}),this.showevaltech=!0):(this.addroleform.controls.arrolehigh.setValidators(null),this.addroleform.controls.arrolehigh.updateValueAndValidity(),this.addroleform.patchValue({stkholdertype:2,arrole:e.rolename_en,rolearbic:e.rolename_ar,rolerelpk:e.rolemst_pk}),this.showevaltech=!1),this.previousFormValue=JSON.stringify(this.addroleform.value)}},{key:"moduleAllocation",value:function(e,a){this.userroleallocation=!0,this.addUpdateAccess&&(this.addUpdateAccess.dataSourceforpermission=[]);var t=this.encrypt.encrypt(e);this.postParams={rolepk:t,stkpk:a},this.currentUserPk=e,this.postUrl="ea/enterpriseadmin/stk-update-user-details",this.enterprise.enterpriseService(this.postParams,this.postUrl).subscribe((function(e){var a,t;0==e.data.status?this.showWSuccess(e.data.msg):(null===(a=this.addUpdateAccess)||void 0===a||a.userAccessModification(null===(t=e.data)||void 0===t?void 0:t.data),this.previousmoduleValue=e.data.data.baseModulesAccess,this.userPermission=e.data.data.checkedAccess,this.setcertificationoption(this.previousmoduleValue))}).bind(this))}},{key:"setcertificationoption",value:function(e){var a=this;this.batchread=!1,this.certificationmanditory=!1,this.adduserroleform.controls.arproject.clearValidators(),this.certification_array_tech=[],this.certification_array_insert=[],console.log(e,"userpermission"),null!=this.userPermission&&0!=e.length&&e.forEach((function(e){"6_10"!=e.module_id||"Y"!=e.read&&"Y"!=e.approval||("Y"==e.approval&&a.certification_array_insert.push(1),a.certificationmanditory=!0,a.certification_array_tech.push(1),a.adduserroleform.controls.arproject.setValidators([i.x.required])),"6_11"!=e.module_id||"Y"!=e.read&&"Y"!=e.approval||("Y"==e.approval&&(a.certification_array_insert.push(2),a.certification_array_insert.push(3)),a.certification_array_tech.push(2),a.certification_array_tech.push(3),a.certificationmanditory=!0,a.adduserroleform.controls.arproject.setValidators([i.x.required])),"6_12"!=e.module_id||"Y"!=e.read&&"Y"!=e.approval||("Y"==e.approval&&a.certification_array_insert.push(4),a.certification_array_tech.push(4),a.certificationmanditory=!0,a.adduserroleform.controls.arproject.setValidators([i.x.required])),"4_4"==e.module_id&&"Y"==e.read&&(a.certification_array_tech.push(2),a.certificationmanditory=!0,a.batchread=!0,a.adduserroleform.controls.arproject.setValidators([i.x.required]))})),this.adduserroleform.controls.arprojectpk.setValue(this.certification_array_insert),this.projectmstdata(),this.adduserroleform.controls.arproject.updateValueAndValidity()}},{key:"moduleClear",value:function(){var e;this.addUpdateAccess&&(null===(e=this.addUpdateAccess)||void 0===e||e.fullMOduleCheck(),this.addUpdateAccess.finalpermissiontempinitialarray=[],this.addUpdateAccess.finalpermissiontemparray=[],this.addUpdateAccess.finalpermissionarray=[],this.userPermission=[],this.userPermissionsActivityLogs=[])}},{key:"userPermData",value:function(e){this.userPermission=e,this.userPermissionsActivityLogs=[],this.userPermissionsActivityLogs.push(this.userPermission),this.addroleform.controls.useraccess.setValue(this.userPermission)}},{key:"ngOnChanges",value:function(e){this.userPermissionsActivityLogs=[]}},{key:"edituserData",value:function(e){var a=this;this.moduleicon=!0,this.nonEditPart=!0,this.closeText="updating",this.assignModule="Assigned Module Access",this.adduserroleform.controls.civilno.disable(),this.adduserroleform.controls.stafName.disable(),this.hideusergrid=!1,this.usergrid=!0,this.apptype="edit",this.add_btn=!1,this.userroleallocation=!0,this.alloc_project=e.oum_allocatedproject,this.alloc_project&&(this.certification_array_tech=this.alloc_project.split(",")),this.projectmstdata(),1==e.stakeholdertype||""==e.stakeholdertype||null==e.stakeholdertype?(1==e.oum_isfocalpoint?(this.opaladmindatashow=!0,this.thirdaprtyshowopal=!0,this.opaladmincentreshow=!0,this.centredatashow=!1,this.requiredtag=!0,this.toggledata="1"==e.thirdPartyAgent,this.adduserroleform.patchValue({stkholdertypeuser:1,civilno:e.civilNo,stafName:e.stafName,emailid:e.emailid,mobilenumber:e.mobilno,arroles:"Focal Point",opalusermstpk:e.opalusermst_pk,username:e.oum_loginId,password:null!==e.oum_password?this.encrypt.aesdecrypt(e.oum_password):"Yet to set"})):(this.opaladmindatashow=!0,this.thirdaprtyshowopal=!0,this.opaladmincentreshow=!0,this.centredatashow=!1,this.requiredtag=!0,this.toggledata="1"==e.thirdPartyAgent,this.adduserroleform.controls.stafnamecentre.setValidators(null),this.adduserroleform.controls.stafnamecentre.updateValueAndValidity(),this.adduserroleform.controls.centrename.setValidators(null),this.adduserroleform.controls.centrename.updateValueAndValidity(),this.adduserroleform.patchValue({stkholdertypeuser:1,civilno:e.civilNo,stafName:e.stafName,emailid:e.emailid,mobilenumber:e.mobilno,arroles:null!==e.oum_rolemst_fk?e.oum_rolemst_fk.split(","):null,opalusermstpk:e.opalusermst_pk,username:e.oum_loginId,password:null!==e.oum_password?this.encrypt.aesdecrypt(e.oum_password):"Yet to set",arproject:null!==e.oum_allocatedproject?e.oum_allocatedproject.split(","):null,arcourse:null!==e.oum_standcoursemst_fk?e.oum_standcoursemst_fk.split(","):null})),this.moduleAllocation(e.oum_rolemst_fk,1),e.oum_allocatedproject&&(this.opaladminshowapproval=!0,e.oum_allocatedproject.split(",").includes("2")?(this.coursemanditory=!0,this.showstandardcourse=!0,this.adduserroleform.controls.arcourse.setValidators([i.x.required])):(this.showstandardcourse=!1,this.coursemanditory=!1,this.adduserform.arcourse.setValue(""),this.adduserroleform.controls.arcourse.clearValidators()),this.adduserroleform.controls.arcourse.updateValueAndValidity())):(1==e.oum_isfocalpoint?(this.opaladmindatashow=!0,this.centredatashow=!0,this.thirdaprtyshowopal=!1,this.opaladmincentreshow=!1,this.requiredtag=!1,this.adduserroleform.controls.centrename.setValidators([i.x.required]),this.adduserroleform.controls.centrename.updateValueAndValidity(),this.adduserroleform.controls.stafName.setValidators(null),this.adduserroleform.controls.stafName.updateValueAndValidity(),this.adduserroleform.controls.emailid.setValidators(null),this.adduserroleform.controls.emailid.updateValueAndValidity(),this.adduserroleform.controls.mobilenumber.setValidators(null),this.adduserroleform.controls.mobilenumber.updateValueAndValidity(),this.adduserroleform.controls.civilno.setValidators(null),this.adduserroleform.controls.civilno.updateValueAndValidity(),this.adduserroleform.controls.slider.setValidators(null),this.adduserroleform.controls.slider.updateValueAndValidity(),this.adduserroleform.controls.arroles.setValidators(null),this.adduserroleform.controls.arroles.updateValueAndValidity(),this.adduserroleform.controls.stafnamecentre.setValidators([i.x.required]),this.adduserroleform.controls.stafnamecentre.updateValueAndValidity(),this.adduserroleform.patchValue({stkholdertypeuser:2,civilno:e.oum_idnumber,stafnamecentre:e.stafName,arroles:null!==e.oum_rolemst_fk?e.oum_rolemst_fk.split(","):null,centrename:e.omrm_companyname_en,emailid:e.emailid,mobilenumber:e.mobilno,rolecentre:"Focal Point",stafName:e.oum_firstname,opalusermstpk:e.opalusermst_pk,username:e.oum_loginId,password:null!==e.oum_password?this.encrypt.aesdecrypt(e.oum_password):"Yet to set",arproject:null!==e.oum_allocatedproject?e.oum_allocatedproject.split(","):null,arcourse:null!==e.oum_standcoursemst_fk?e.oum_standcoursemst_fk.split(","):null})):(this.enterprise.stafffetchdata(e.opalmemberregmst_pk).subscribe((function(e){a.staffslist=e.data})),this.opaladmindatashow=!0,this.centredatashow=!0,this.thirdaprtyshowopal=!1,this.opaladmincentreshow=!1,this.requiredtag=!1,this.adduserroleform.controls.centrename.setValidators([i.x.required]),this.adduserroleform.controls.centrename.updateValueAndValidity(),this.adduserroleform.controls.stafName.setValidators(null),this.adduserroleform.controls.stafName.updateValueAndValidity(),this.adduserroleform.controls.emailid.setValidators(null),this.adduserroleform.controls.emailid.updateValueAndValidity(),this.adduserroleform.controls.mobilenumber.setValidators(null),this.adduserroleform.controls.mobilenumber.updateValueAndValidity(),this.adduserroleform.controls.civilno.setValidators(null),this.adduserroleform.controls.civilno.updateValueAndValidity(),this.adduserroleform.controls.slider.setValidators(null),this.adduserroleform.controls.slider.updateValueAndValidity(),this.adduserroleform.controls.arroles.setValidators(null),this.adduserroleform.controls.arroles.updateValueAndValidity(),this.adduserroleform.controls.stafnamecentre.setValidators([i.x.required]),this.adduserroleform.controls.stafnamecentre.updateValueAndValidity(),this.centredatashow=!0,this.adduserroleform.patchValue({stkholdertypeuser:2,civilno:e.sir_idnumber,stafnamecentre:e.staffinforepo_pk,arroles:null!==e.oum_rolemst_fk?e.oum_rolemst_fk.split(","):null,centrename:e.opalmemberregmst_pk,emailid:e.sir_emailid,mobilenumber:e.mobilno,rolecentre:e.roleName_en,stafName:e.stafName,opalusermstpk:e.opalusermst_pk,username:e.oum_loginId,password:null!==e.oum_password?this.encrypt.aesdecrypt(e.oum_password):"Yet to set",arproject:null!==e.oum_allocatedproject?e.oum_allocatedproject.split(","):null,arcourse:null!==e.oum_standcoursemst_fk?e.oum_standcoursemst_fk.split(","):null})),this.moduleAllocation(e.oum_rolemst_fk,2))}},{key:"centreclearFilter",value:function(){this.stafName.setValue(""),this.emailid.setValue(""),this.civilNo.setValue(""),this.mobilno.setValue(""),this.lastUpdateOn.setValue(""),this.status.setValue(""),this.addedOn.setValue(""),this.roleName_en.setValue(""),this.getManageRolesDtls()}},{key:"userclearFilter",value:function(){this.stakeholdertype.setValue(""),this.stafName.setValue(""),this.emailid.setValue(""),this.civilNo.setValue(""),this.companynm.setValue(""),this.mobilno.setValue(""),this.lastUpdateOn.setValue(""),this.status.setValue(""),this.isthirdPartyAgent.setValue(""),this.focal_point.setValue(""),this.addedOn.setValue(""),this.roleName_en.setValue(""),this.getManageRolesDtls()}},{key:"roleclearFilter",value:function(){this.stktypesearch.setValue(""),this.projectsearch.setValue(""),this.rolesearch.setValue(""),this.highrolesearch.setValue(""),this.statussearch.setValue(""),this.addedonsearch.setValue(""),this.updatedonsearch.setValue(""),this.getManageRolesDtls()}},{key:"syncPrimaryPaginator",value:function(e){this.paginator.pageIndex=e.pageIndex,this.paginator.pageSize=e.pageSize,this.page=e.pageSize,this.getManageRolesDtls()}},{key:"evenadddata",value:function(){this.nonEditPart=!1,this.closeText="adding",this.assignModule="Assign Module Access",this.showrolegrid=!0,this.hidegrid=!1,this.apptype="new",this.add_btn=!0,this.showrole=!0,this.showhighrole=!0,this.userroleallocation=!0,this.stkpk=1,this.showevaltech=!1}},{key:"gotobackgrid",value:function(){var e=this;this.addroleform.touched&&!this.viewRoleUserdis||this.previousFormValue!==JSON.stringify(this.addroleform.value)&&!this.viewRoleUserdis?v()({title:this.i18n("addroles.doyouwantcan")+this.closeText+this.i18n("addroles.thisrol"),text:this.i18n("addroles.isyesany"),icon:"warning",buttons:[this.i18n("addroles.no"),this.i18n("addroles.yes")],closeOnClickOutside:!1,closeOnEsc:!1}).then((function(a){a&&(e.closeview(),e.showrolegrid=!1,e.hidegrid=!0,e.addroleform.reset())})):(this.viewRoleUserdis,this.closeview(),this.showrolegrid=!1,this.hidegrid=!0,this.addroleform.reset())}},{key:"evenuseradddata",value:function(){this.closeText="adding",this.nonEditPart=!1,this.assignModule="Assign Module Access",this.usergrid=!0,this.hideusergrid=!1,this.apptype="new",this.add_btn=!0,this.opaladmindatashow=!0,this.thirdaprtyshowopal=!0,this.opaladmincentreshow=!0,this.centredatashow=!1,this.requiredtag=!0,this.userroleallocation=!0,this.opaladminshowapproval=!1,this.showstandardcourse=!1}},{key:"evenusercentredata",value:function(){this.closeText="adding",this.centregrid=!0,this.hidecentregrid=!1,this.apptype="new",this.add_btn=!0}},{key:"gotocentrebackgrid",value:function(){var e=this;this.centreform.touched?v()({title:this.i18n("addroles.doyouwantcan")+this.closeText+this.i18n("addroles.thisuser"),text:this.i18n("addroles.isyesany"),icon:"warning",buttons:["No","Yes"],closeOnClickOutside:!1,closeOnEsc:!1}).then((function(a){a&&(e.closeview(),e.centregrid=!1,e.hidecentregrid=!0,e.centreform.reset())})):(this.closeview(),this.centregrid=!1,this.hidecentregrid=!0,this.centreform.reset())}},{key:"gotouserbackgrid",value:function(){var e=this;this.adduserroleform.touched?v()({title:this.i18n("addroles.doyouwantcan")+this.closeText+this.i18n("addroles.thisuser"),text:this.i18n("addroles.isyesany"),icon:"warning",buttons:[this.i18n("addroles.no"),this.i18n("addroles.yes")],closeOnClickOutside:!1,closeOnEsc:!1}).then((function(a){a&&(e.closeview(),e.usergrid=!1,e.hideusergrid=!0,e.adduserroleform.reset())})):(this.closeview(),this.usergrid=!1,this.hideusergrid=!0,this.adduserroleform.reset())}},{key:"closeview",value:function(){this.viewBackBackbutton=!1,1==this.refname?(this.viewRoleUserdis=!1,this.addroleform.controls.arrole.enable(),this.addroleform.controls.rolearbic.enable(),this.addroleform.controls.rolearbic.enable()):2==this.refname?(this.focalPoint=!1,this.viewUserdis=!1,this.adduserroleform.controls.civilno.enable(),this.adduserroleform.controls.stafName.enable(),this.adduserroleform.controls.emailid.enable(),this.adduserroleform.controls.mobilenumber.enable(),this.adduserroleform.controls.rolecentre.enable(),this.adduserroleform.controls.slider.enable(),this.adduserroleform.controls.centrename.enable(),this.adduserroleform.controls.stafnamecentre.enable()):3==this.refname&&(this.viewCenterUserdis=!1,this.centreform.controls.civilnocentre.enable(),this.centreform.controls.emailidcentre.enable(),this.centreform.controls.rolescentre.enable(),this.centreform.controls.mobilenumbercentre.enable())}},{key:"clickEvent",value:function(){this.hidefilder=!this.hidefilder,this.hidefilder?(this.filtername=this.i18n("course.hidefilt"),document.getElementById("searchrow").style.display="flex"):(this.filtername=this.i18n("course.showfilt"),document.getElementById("searchrow").style.display="none")}},{key:"editcentreData",value:function(e){this.closeText="updating",this.hidecentregrid=!1,this.centregrid=!0,this.apptype="edit",this.add_btn=!1,this.userroleallocation=!0,this.centreform.patchValue({civilnocentre:e.sir_idnumber,staffsnamecentre:e.staffinforepo_pk,emailidcentre:e.sir_emailid,mobilenumbercentre:e.sir_mobnum,password:null!==e.oum_password?this.encrypt.aesdecrypt(e.oum_password):"",rolescentre:e.roleName_en,opalusermstpk:e.opalusermst_pk}),this.moduleAllocation(e.oum_rolemst_fk,2)}},{key:"getusercentergriddata",value:function(){var e=this;this.enterprise.getUserCenterlistDtls().subscribe((function(a){200==a.status&&(e.userCenter.data=a.data.centerList,e.resultsLength=e.userCenter.data.length)}))}},{key:"getManageRolesDtls",value:function(){var e=this;this.UsersGridDatas=new H(this.http),this.sort.sortChange.debounceTime(400).subscribe((function(){return e.paginator.pageIndex=0}));var a={};1==this.refname?(this.tblplaceholder=!0,a={stktypesearch:this.stktypesearch.value,projectsearch:this.projectsearch.value,rolesearch:this.rolesearch.value,highrolesearch:this.highrolesearch.value,statussearch:this.statussearch.value,addedonsearch:this.addedonsearch.value?P()(this.addedonsearch.value).format("YYYY-MM-DD").toString():this.addedonsearch.value,updatedonsearch:this.updatedonsearch.value?P()(this.updatedonsearch.value).format("YYYY-MM-DD").toString():this.updatedonsearch.value},Object(_.a)(this.sort.sortChange).pipe(Object(F.a)({}),Object(O.a)((function(){return e.UsersGridDatas.rolesGridList(e.sort.active,e.sort.direction,e.paginator.pageIndex-1,e.page,JSON.stringify(a),e.refname)})),Object(S.a)((function(a){return e.resultsLength=a.data.data.totalcount,a.data.data.data})),Object(L.a)((function(){return Object(D.a)([])}))).subscribe((function(a){e.Usersrecord=new m.b(a),e.rolefiltersts=!0,e.Usersrecord.filterPredicate=e.createFilter(),e.noData=e.Usersrecord.connect().pipe(Object(S.a)((function(e){return 0===e.length}))),e.tblplaceholder=!1}))):2==this.refname?(a={stafName:this.stafName.value,emailid:this.emailid.value,stakeholdertype:this.stakeholdertype.value,oum_idnumber:this.civilNo.value,omrm_companyname_en:this.companynm.value,mobilno:this.mobilno.value,roleName_en:this.roleName_en.value,status:this.status.value,isthirdPartyAgent:this.isthirdPartyAgent.value,isfocalpoint:this.focal_point.value,addedOn:this.addedOn.value?P()(this.addedOn.value).format("YYYY-MM-DD").toString():this.addedOn.value,lastUpdateOn:this.lastUpdateOn.value?P()(this.lastUpdateOn.value).format("YYYY-MM-DD").toString():this.lastUpdateOn.value},Object(_.a)(this.sort.sortChange).pipe(Object(F.a)({}),Object(O.a)((function(){return e.UsersGridDatas.usersGridList(e.sort.active,e.sort.direction,e.paginator.pageIndex-1,e.page,JSON.stringify(a,e.refname))})),Object(S.a)((function(a){return e.resultsLength=a.data.data.totalcount,a.data.data.data})),Object(L.a)((function(){return Object(D.a)([])}))).subscribe((function(a){e.Usersrecord=new m.b(a),e.userfiltersts=!0,e.Usersrecord.filterPredicate=e.createFilter(),e.noData=e.Usersrecord.connect().pipe(Object(S.a)((function(e){return 0===e.length})))}))):3==this.refname&&(a={stafName:this.stafName.value,emailid:this.emailid.value,oum_idnumber:this.civilNo.value,mobilno:this.mobilno.value,roleName_en:this.roleName_en.value,status:this.status.value,addedOn:this.addedOn.value?P()(this.addedOn.value).format("YYYY-MM-DD").toString():this.addedOn.value,lastUpdateOn:this.lastUpdateOn.value?P()(this.lastUpdateOn.value).format("YYYY-MM-DD").toString():this.lastUpdateOn.value},Object(_.a)(this.sort.sortChange).pipe(Object(F.a)({}),Object(O.a)((function(){return e.UsersGridDatas.usersCenterGridList(e.sort.active,e.sort.direction,e.paginator.pageIndex-1,e.page,JSON.stringify(a,e.refname))})),Object(S.a)((function(a){return e.resultsLength=a.data.data.totalcount,a.data.data.data})),Object(L.a)((function(){return Object(D.a)([])}))).subscribe((function(a){e.Usersrecord=new m.b(a),e.centrefiltersts=!0,e.Usersrecord.filterPredicate=e.createFilter(),e.noData=e.Usersrecord.connect().pipe(Object(S.a)((function(e){return 0===e.length})))})))}},{key:"createFilter",value:function(){return function(e,a){if(1==this.refname){var t=JSON.parse(a);return-1!==e.stakeholdertype.toLowerCase().indexOf(t.stakeholdertype)&&-1!==e.projectname_en.toLowerCase().indexOf(t.projectname_en)&&-1!==e.rolename_en.toLowerCase().indexOf(t.rolename_en)&&-1!==e.higherRole.toLowerCase().indexOf(t.higherRole)&&-1!==e.status.toLowerCase().indexOf(t.status)&&-1!==e.addedOn.toLowerCase().indexOf(t.addedOn)&&-1!==e.updatedOn.toLowerCase().indexOf(t.updatedOn)}if(2==this.refname){var r=JSON.parse(a);return-1!==e.stafName.toLowerCase().indexOf(r.stafName)&&-1!==e.emailid.toLowerCase().indexOf(r.emailid)&&-1!==e.stakeholdertype.toLowerCase().indexOf(r.stakeholdertype)&&-1!==e.civilNo.toLowerCase().indexOf(r.civilNo)&&-1!==e.companynm.toLowerCase().indexOf(r.companynm)&&-1!==e.mobilno.toLowerCase().indexOf(r.mobilno)&&-1!==e.roleName_en.toLowerCase().indexOf(r.roleName_en)&&-1!==e.status.toLowerCase().indexOf(r.status)&&-1!==e.isthirdPartyAgent.toLowerCase().indexOf(r.isthirdPartyAgent)&&-1!==e.isfocalpoint.toLowerCase().indexOf(r.isfocalpoint)&&-1!==e.addedOn.toLowerCase().indexOf(r.addedOn)&&-1!==e.lastUpdateOn.toLowerCase().indexOf(r.lastUpdateOn)}if(3==this.refname){var n=JSON.parse(a);return-1!==e.stafName.toLowerCase().indexOf(n.stafName)&&-1!==e.emailid.toLowerCase().indexOf(n.emailid)&&-1!==e.oum_idnumber.toLowerCase().indexOf(n.oum_idnumber)&&-1!==e.mobilno.toLowerCase().indexOf(n.mobilno)&&-1!==e.roleName_en.toLowerCase().indexOf(n.roleName_en)&&-1!==e.status.toLowerCase().indexOf(n.status)&&-1!==e.addedOn.toLowerCase().indexOf(n.addedOn)&&-1!==e.lastUpdateOn.toLowerCase().indexOf(n.lastUpdateOn)}}}},{key:"viewRoleuser",value:function(e,a){this.moduleicon=!1,this.viewBackBackbutton=!0,1==this.refname?(this.editData(e,a),this.viewRoleUserdis=!0,this.viewRoleUserdis&&(this.addroleform.controls.arrole.disable(),this.addroleform.controls.rolearbic.disable())):2==this.refname?(this.edituserData(e),1==e.oum_isfocalpoint?(this.userroleallocation=!1,this.focalPoint=!0):(this.focalPoint=!1,this.userroleallocation=!0),this.viewUserdis=!0,this.viewUserdis?(this.adduserroleform.controls.civilno.disable(),this.adduserroleform.controls.stafName.disable(),this.adduserroleform.controls.emailid.disable(),this.adduserroleform.controls.mobilenumber.disable(),this.adduserroleform.controls.rolecentre.disable(),this.adduserroleform.controls.slider.disable(),this.adduserroleform.controls.username.disable(),this.adduserroleform.controls.password.disable(),this.adduserroleform.controls.stafnamecentre.disable(),this.adduserroleform.controls.centrename.disable()):(this.adduserroleform.controls.civilno.enable(),this.adduserroleform.controls.stafName.enable(),this.adduserroleform.controls.emailid.enable(),this.adduserroleform.controls.mobilenumber.enable(),this.adduserroleform.controls.rolecentre.enable(),this.adduserroleform.controls.slider.enable(),this.adduserroleform.controls.username.enable(),this.adduserroleform.controls.password.enable(),this.adduserroleform.controls.stafnamecentre.enable(),this.adduserroleform.controls.centrename.enable())):(this.editcentreData(e),this.viewCenterUserdis=!0,this.viewCenterUserdis&&(this.centreform.controls.civilnocentre.disable(),this.centreform.controls.emailidcentre.disable(),this.centreform.controls.rolescentre.disable(),this.centreform.controls.mobilenumbercentre.disable(),this.adduserroleform.controls.password.disable()))}},{key:"ifchange",value:function(){this.change.emit()}},{key:"checkByRole",value:function(e,a){var t=this;switch(a){case"arrole":this.enterprise.checkRoleName(e,this.addrolform.stkholdertype.value,"arrole").subscribe((function(e){if(e.data.available)return t.addroleform.controls[a].setErrors({alreadyavailable:!0}),!1}));break;case"rolearbic":this.enterprise.checkRoleName(e,this.addrolform.stkholdertype.value,"rolearbic").subscribe((function(e){if(e.data.available)return t.addroleform.controls[a].setErrors({alreadyavailable:!0}),!1}))}}},{key:"checkBycivilIdOrEmail",value:function(e,a){var t=this;switch(a){case"civilno":this.enterprise.checkUserscivilOremailId(e,this.adduserform.stkholdertypeuser.value,"civilno").subscribe((function(e){if(e.data.available)return t.adduserroleform.controls[a].setErrors({alreadyavailable:!0}),!1}));break;case"emailid":this.enterprise.checkUserscivilOremailId(e,this.adduserform.stkholdertypeuser.value,"emailid").subscribe((function(e){if(e.data.available)return t.adduserroleform.controls[a].setErrors({alreadyavailable:!0}),!1}))}}},{key:"fetchByRole",value:function(e,a){this.adduserroleform.controls.arproject.setValue(""),this.adduserroleform.controls.arcourse.setValue(""),this.showstandardcourse=!1;var t=e.value;t&&this.refname,this.moduleAllocation(t,a)}},{key:"showcourse",value:function(e){e.includes("2")?(this.coursemanditory=!0,this.showstandardcourse=!0,this.adduserroleform.controls.arcourse.setValidators([i.x.required])):(this.coursemanditory=!1,this.showstandardcourse=!1,this.adduserform.arcourse.setValue(""),this.adduserroleform.controls.arcourse.clearValidators()),this.adduserroleform.controls.arcourse.updateValueAndValidity()}},{key:"optionClick",value:function(){var e=!0;this.selectbox.options.forEach((function(a){a.selected||(e=!1)})),this.allSelected=e}},{key:"toggleAllSelection",value:function(){this.allSelected?this.selectbox.options.forEach((function(e){return e.select()})):this.selectbox.options.forEach((function(e){return e.deselect()}))}},{key:"_filter",value:function(e){var a=e.toLowerCase();return this.setSelectedValues(),this.adduserroleform.controls.arroles.patchValue(this.selectedValues),this.role_mstlist.filter((function(e){return e.rm_rolename_en.toLowerCase().includes(a)}))}},{key:"setSelectedValues",value:function(){var e=this;console.log("selectFormControl",this.adduserroleform.controls.arroles.value),this.adduserroleform.controls.arroles.value&&this.adduserroleform.controls.arroles.value.length>0&&this.adduserroleform.controls.arroles.value.forEach((function(a){-1==e.selectedValues.indexOf(a)&&e.selectedValues.push(a)}))}}]),e}();T.ctorParameters=function(){return[{type:i.e},{type:p.c},{type:o.g},{type:o.a},{type:h.a},{type:w.a},{type:u.a},{type:f.a},{type:k.b},{type:V.a},{type:y.b},{type:j.a}]},Object(r.c)([Object(n.mb)("addUpdateAccess"),Object(r.e)("design:type",g.a)],T.prototype,"addUpdateAccess",void 0),Object(r.c)([Object(n.mb)("paginator"),Object(r.e)("design:type",A.a)],T.prototype,"paginator",void 0),Object(r.c)([Object(n.mb)(I.a),Object(r.e)("design:type",I.a)],T.prototype,"sort",void 0),Object(r.c)([Object(n.mb)("selectbox"),Object(r.e)("design:type",M.a)],T.prototype,"selectbox",void 0),Object(r.c)([Object(n.T)(),Object(r.e)("design:type",Object)],T.prototype,"addrolecreation",void 0),Object(r.c)([Object(n.T)(),Object(r.e)("design:type",Object)],T.prototype,"rolegridlistdata",void 0),Object(r.c)([Object(n.T)(),Object(r.e)("design:type",Object)],T.prototype,"change",void 0),Object(r.c)([Object(n.H)(),Object(r.e)("design:type",String)],T.prototype,"popupContentPrefix",void 0),Object(r.c)([Object(n.mb)("search"),Object(r.e)("design:type",n.v)],T.prototype,"searchTextBox",void 0),T=Object(r.c)([Object(n.n)({selector:"app-addroles",template:Object(r.d)(t("qarE")).default,encapsulation:n.pb.None,providers:[{provide:d.c,useClass:b.b,deps:[d.f]},{provide:d.e,useValue:{parse:{dateInput:"DD-MM-YYYY"},display:{dateInput:"DD-MM-YYYY",monthYearLabel:"MMM YYYY",dateA11yLabel:"LL",monthYearA11yLabel:"MMMM YYYY"}}}],animations:[Object(c.p)("detailExpand",[Object(c.m)("collapsed",Object(c.n)({height:"0px",minHeight:"0"})),Object(c.m)("expanded",Object(c.n)({height:"*"})),Object(c.o)("expanded <=> collapsed",Object(c.e)("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])],styles:[Object(r.d)(t("eQ86")).default]}),Object(r.e)("design:paramtypes",[i.e,p.c,o.g,o.a,h.a,w.a,u.a,f.a,k.b,V.a,y.b,j.a])],T);var H=function(){function e(a){_classCallCheck(this,e),this.http=a}return _createClass(e,[{key:"rolesGridList",value:function(e,a,t,r,n,l){var s="".concat(C.a.baseUrl+"ea/enterpriseadmin/getrolesdtls","?sort=").concat("desc"===a?"-":"").concat(e,"&order=").concat(a,"&page=").concat(t+1,"&size=").concat(r,"&gridsearchValues=").concat(n);return this.http.get(s,{headers:{Authorization:"Bearer "+localStorage.getItem("v3logindata")}})}},{key:"usersGridList",value:function(e,a,t,r,n,l){var s="".concat(C.a.baseUrl+"ea/enterpriseadmin/getusersdtls","?sort=").concat("desc"===a?"-":"").concat(e,"&order=").concat(a,"&page=").concat(t+1,"&size=").concat(r,"&gridsearchValues=").concat(n);return this.http.get(s,{headers:{Authorization:"Bearer "+localStorage.getItem("v3logindata")}})}},{key:"usersCenterGridList",value:function(e,a,t,r,n,l){var s="".concat(C.a.baseUrl+"ea/enterpriseadmin/getusercenterlist","?sort=").concat("desc"===a?"-":"").concat(e,"&order=").concat(a,"&page=").concat(t+1,"&size=").concat(r,"&gridsearchValues=").concat(n);return this.http.get(s,{headers:{Authorization:"Bearer "+localStorage.getItem("v3logindata")}})}}]),e}(),q=t("P+IX"),z=[{path:"",children:[{path:"manageroles",component:T,data:{title:"Manage Roles",formid:1,urls:[{title:"Manage Roles",url:"/manageroles"}]},canActivate:[q.a]},{path:"manageusers",component:T,data:{title:"Manage Users",urls:[{title:"Manage Users",url:"/manageusers"}]},canActivate:[q.a]}]}],E=function e(){_classCallCheck(this,e)};E=Object(r.c)([Object(n.M)({imports:[o.i.forChild(z)],exports:[o.i]})],E);var B=function(){function e(a,t,r,n,l,s,o,d){_classCallCheck(this,e),this.translate=a,this.remoteService=t,this.cookieService=r,this.enterprise=n,this.router=l,this.routeid=s,this.http=o,this.appservice=d,this.stktypesearch=new i.f(""),this.projectsearch=new i.f(""),this.rolesearch=new i.f(""),this.highrolesearch=new i.f(""),this.statussearch=new i.f(""),this.addedonsearch=new i.f(""),this.updatedonsearch=new i.f(""),this.filterValues={stktypesearch:"",projectsearch:"",rolesearch:"",highrolesearch:"",statussearch:"",addedonsearch:"",updatedonsearch:""},this.rolesrecordcolumn=["stakeholdertype","projectname_en","rolename_en","higherRole","status","addedOn","updatedOn","action"],this.filtername="Hide Filter",this.hidefilder=!0,this.page=10,this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr",this.addrolecreationpage=!1,this.rolegridlistpage=!0,this.roledata=[]}return _createClass(e,[{key:"i18n",value:function(e){return this.translate.instant(e)}},{key:"ngOnInit",value:function(){var e=this;if(this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){var a=this.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));this.translate.setDefaultLang(a.languagecode),this.dir=a.dir}else{var t=this.languagelist.find((function(e){return"1"==e.id}));this.translate.setDefaultLang(t.languagecode),this.dir=t.dir}this.remoteService.getLanguageCookie().subscribe((function(a){if(e.translate.setDefaultLang(e.cookieService.get("languageCode")),e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")){var t=e.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));e.translate.setDefaultLang(t.languagecode),e.dir=t.dir}else{var r=e.languagelist.find((function(e){return"1"==e.id}));e.translate.setDefaultLang(r.languagecode),e.dir=r.dir}})),this.getuserroledata()}},{key:"routeToroledata",value:function(){this.addrolecreationpage=!0}},{key:"viewroute",value:function(){this.router.navigate(["newenterpriseadmin/viewroles"])}},{key:"gridlistdata",value:function(e){this.rolegridlistpage=e}},{key:"addrolecreationdata",value:function(e){this.addrolecreationpage=e}},{key:"clickEvent",value:function(){this.hidefilder=!this.hidefilder,this.hidefilder?(this.filtername="Hide Filter",document.getElementById("searchrow").style.display="flex"):(this.filtername="Show Filter",document.getElementById("searchrow").style.display="none")}},{key:"syncPrimaryPaginator",value:function(e){this.paginator.pageIndex=e.pageIndex,this.paginator.pageSize=e.pageSize,this.page=e.pageSize}},{key:"editBusinessSourceList",value:function(){this.router.navigate(["/newenterpriseadmin/addroles"],{queryParams:{type:1}})}},{key:"scrollTo",value:function(e){try{document.querySelectorAll("."+e)[0].scrollIntoView({behavior:"smooth"}),console.log("page-content")}catch(a){}}},{key:"onPaginateChange",value:function(e){this.page=e.pageSize}},{key:"getuserroledata",value:function(){var e=this;this.enterprise.getrolegriddtls().subscribe((function(a){e.roledata.data=a.data.roleList,e.resultsLength=e.roledata.data.length}))}},{key:"editData",value:function(e){this.roledata.forEach((function(a){a.id==e.id&&console.log("sdfsdsd"+e.id)}))}},{key:"getManageUserDtls",value:function(){var e=this;this.UsersGridDatas=new R(this.http),this.sort.sortChange.debounceTime(400).subscribe((function(){return e.paginator.pageIndex=0}));var a={};console.log(a,"Archana12"),Object(_.a)(this.sort.sortChange).pipe(Object(F.a)({}),Object(O.a)((function(){return e.UsersGridDatas.rolesGridList(e.sort.active,e.sort.direction,e.paginator.pageIndex-1,e.page,JSON.stringify(a))})),Object(S.a)((function(a){return e.resultsLength=a.data.data.totalcount,console.log(a.data.data.data,"data.data.data123"),a.data.data.data})),Object(L.a)((function(){return Object(D.a)([])}))).subscribe((function(a){e.rolesrecord=new m.b(a)}))}}]),e}();B.ctorParameters=function(){return[{type:p.c},{type:u.a},{type:f.a},{type:h.a},{type:o.g},{type:o.a},{type:k.b},{type:j.a}]},Object(r.c)([Object(n.mb)("MatPaginator"),Object(r.e)("design:type",A.a)],B.prototype,"paginator",void 0),Object(r.c)([Object(n.mb)(I.a),Object(r.e)("design:type",I.a)],B.prototype,"sort",void 0),B=Object(r.c)([Object(n.n)({selector:"app-manageroles",template:Object(r.d)(t("krck")).default,encapsulation:n.pb.None,providers:[{provide:d.c,useClass:b.b,deps:[d.f]},{provide:d.e,useValue:{parse:{dateInput:"DD-MM-YYYY"},display:{dateInput:"DD-MM-YYYY",monthYearLabel:"MMM YYYY",dateA11yLabel:"LL",monthYearA11yLabel:"MMMM YYYY"}}}],styles:[Object(r.d)(t("ZV6k")).default]}),Object(r.e)("design:paramtypes",[p.c,u.a,f.a,h.a,o.g,o.a,k.b,j.a])],B);var R=function(){function e(a){_classCallCheck(this,e),this.http=a}return _createClass(e,[{key:"rolesGridList",value:function(e,a,t,r,n){var l="".concat(C.a.baseUrl+"ea/enterpriseadmin/getrolesdtls","?sort=").concat("desc"===a?"-":"").concat(e,"&order=").concat(a,"&page=").concat(t+1,"&size=").concat(r,"&gridsearchValues=").concat(n);return this.http.get(l,{headers:{Authorization:"Bearer "+localStorage.getItem("v3logindata")}})}}]),e}(),Y=function(){function e(a,t,r,n,l,s,o){_classCallCheck(this,e),this.translate=a,this.remoteService=t,this.cookieService=r,this.enterprise=n,this.routeid=l,this.http=s,this.appservice=o,this.addrolecreationpage=!1,this.rolegridlistpage=!0,this.userdata=[],this.userCenter=[],this.refnameCenter=!0,this.rolesrecordcolumn=["oshm_stakeholdertype","oum_idnumber","stafname","emailid","mobilenumber","role","thirdpartyagent","status","added_on","lastupdated","action"],this.hidefilder=!0,this.filtername="Hide Filter",this.page=10,this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr",this.noData=""}return _createClass(e,[{key:"i18n",value:function(e){return this.translate.instant(e)}},{key:"ngOnInit",value:function(){var e=this;if(this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){var a=this.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));this.translate.setDefaultLang(a.languagecode),this.dir=a.dir}else{var t=this.languagelist.find((function(e){return"1"==e.id}));this.translate.setDefaultLang(t.languagecode),this.dir=t.dir}this.remoteService.getLanguageCookie().subscribe((function(a){if(e.translate.setDefaultLang(e.cookieService.get("languageCode")),e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")){var t=e.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));e.translate.setDefaultLang(t.languagecode),e.dir=t.dir}else{var r=e.languagelist.find((function(e){return"1"==e.id}));e.translate.setDefaultLang(r.languagecode),e.dir=r.dir}})),3==this.refname&&this.getusercentergriddata(),this.stafName=new i.f(""),this.emailid=new i.f(""),this.stakeholdertype=new i.f(""),this.civilNo=new i.f(""),this.mobilno=new i.f(""),this.roleName_en=new i.f(""),this.status=new i.f(""),this.addedOn=new i.f(""),this.lastUpdateOn=new i.f(""),this.isthirdPartyAgent=new i.f(""),this.stafName.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.emailid.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.stakeholdertype.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.civilNo.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.mobilno.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.roleName_en.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.status.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.addedOn.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.lastUpdateOn.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())})),this.isthirdPartyAgent.valueChanges.debounceTime(400).subscribe((function(a){(null!=a||""==a)&&(e.paginator.pageIndex=0,e.getManageUserDtls())}))}},{key:"ngAfterViewInit",value:function(){this.getManageUserDtls(),this.Usersrecord.sort=this.sort,this.Usersrecord.paginator=this.paginator}},{key:"syncPrimaryPaginator",value:function(e){this.paginator.pageIndex=e.pageIndex,this.paginator.pageSize=e.pageSize,this.page=e.pageSize}},{key:"gridlistdata",value:function(e){this.rolegridlistpage=e}},{key:"addrolecreationdata",value:function(e){this.addrolecreationpage=e}},{key:"routeToadduser",value:function(){this.addrolecreationpage=!0}},{key:"scrollTo",value:function(e){try{document.querySelectorAll("."+e)[0].scrollIntoView({behavior:"smooth"}),console.log("page-content")}catch(a){}}},{key:"clickEvent",value:function(){this.hidefilder=!this.hidefilder,this.hidefilder?(this.filtername="Hide Filter",document.getElementById("searchrow").style.display="flex"):(this.filtername="Show Filter",document.getElementById("searchrow").style.display="none")}},{key:"getusercentergriddata",value:function(){var e=this;this.enterprise.getUserCenterlistDtls().subscribe((function(a){e.userCenter.data=a.data.centerList,e.resultsLength=e.userCenter.data.length}))}},{key:"getManageUserDtls",value:function(){var e,a=this;this.UsersGridDatas=new $(this.http),this.sort.sortChange.debounceTime(400).subscribe((function(){return a.paginator.pageIndex=0})),e={stafName:this.stafName.value,emailid:this.emailid.value,oshm_stakeholdertype:this.stakeholdertype.value,oum_idnumber:this.civilNo.value,mobilno:this.mobilno.value,roleName_en:this.roleName_en.value,status:this.status.value,isthirdPartyAgent:this.isthirdPartyAgent.value,addedOn:this.status.value,lastUpdateOn:this.status.value},Object(_.a)(this.sort.sortChange).pipe(Object(F.a)({}),Object(O.a)((function(){return a.UsersGridDatas.usersGridList(a.sort.active,a.sort.direction,a.paginator.pageIndex-1,a.page,JSON.stringify(e))})),Object(S.a)((function(e){return a.resultsLength=e.data.data.totalcount,e.data.data.data})),Object(L.a)((function(){return Object(D.a)([])}))).subscribe((function(e){a.Usersrecord=new m.b(e),a.Usersrecord.filterPredicate=a.createFilter(),a.noData=a.Usersrecord.connect().pipe(Object(S.a)((function(e){return 0===e.length}))),console.log(a.noData)}))}},{key:"createFilter",value:function(){return function(e,a){var t=JSON.parse(a);return-1!==e.stafName.toLowerCase().indexOf(t.stafName)&&-1!==e.emailid.toLowerCase().indexOf(t.emailid)&&-1!==e.stakeholdertype.toLowerCase().indexOf(t.stakeholdertype)&&-1!==e.civilNo.toLowerCase().indexOf(t.civilNo)&&-1!==e.mobilno.toLowerCase().indexOf(t.mobilno)&&-1!==e.roleName_en.toLowerCase().indexOf(t.roleName_en)&&-1!==e.status.toLowerCase().indexOf(t.status)&&-1!==e.isthirdPartyAgent.toLowerCase().indexOf(t.isthirdPartyAgent)&&-1!==e.addedOn.toLowerCase().indexOf(t.addedOn)&&-1!==e.lastUpdateOn.toLowerCase().indexOf(t.lastUpdateOn)}}}]),e}();Y.ctorParameters=function(){return[{type:p.c},{type:u.a},{type:f.a},{type:h.a},{type:o.a},{type:k.b},{type:j.a}]},Object(r.c)([Object(n.mb)("paginator"),Object(r.e)("design:type",A.a)],Y.prototype,"paginator",void 0),Object(r.c)([Object(n.mb)(I.a),Object(r.e)("design:type",I.a)],Y.prototype,"sort",void 0),Y=Object(r.c)([Object(n.n)({selector:"app-manageusers",template:Object(r.d)(t("zaBI")).default,encapsulation:n.pb.None,styles:[Object(r.d)(t("gKzc")).default]}),Object(r.e)("design:paramtypes",[p.c,u.a,f.a,h.a,o.a,k.b,j.a])],Y);var $=function(){function e(a){_classCallCheck(this,e),this.http=a}return _createClass(e,[{key:"usersGridList",value:function(e,a,t,r,n){var l="".concat(C.a.baseUrl+"ea/enterpriseadmin/getusersdtls","?sort=").concat("desc"===a?"-":"").concat(e,"&order=").concat(a,"&page=").concat(t+1,"&size=").concat(r,"&gridsearchValues=").concat(n);return this.http.get(l,{headers:{Authorization:"Bearer "+localStorage.getItem("v3logindata")}})}}]),e}(),G=t("M9ds"),J=t("nHpv"),W=t("u9T3"),Q=[{id:1,name:"Module - 1",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:11,sname:"SubModule - 1",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:12,sname:"SubModule - 2",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:13,sname:"SubModule - 3",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:2,name:"Module - 2",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:21,sname:"SubModule - 5",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:22,sname:"SubModule - 6",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:23,sname:"SubModule - 7",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:3,name:"Module - 3",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:31,sname:"SubModule - 7",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:32,sname:"SubModule - 8",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:4,name:"Module - 4",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:41,sname:"SubModule - 9",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:42,sname:"SubModule - 10",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]}],Z=function(){function e(a,t,r,l,s){_classCallCheck(this,e),this.formBuilder=a,this.translate=t,this.remoteService=r,this.cookieService=l,this.enterprise=s,this.addrolecreation=new n.y,this.rolegridlistdata=new n.y,this.Submitted=!0,this.showrole=!1,this.civilno=new i.f(""),this.stafname=new i.f(""),this.emailid=new i.f(""),this.mobilenumber=new i.f(""),this.filterValues={civilno:"",stafname:"",emailid:"",mobilenumber:""},this.matcher=new d.d,this.dataSource=Q,this.opaladmindatashow=!1,this.centredatashow=!1,this.thirdaprtyshowopal=!1,this.columnsToDisplay=["name","create","update","delete","approve","download"],this.innerDisplayedColumns=["sname","screate","supdate","sdelete","sapprove","sdownload"],this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr"}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;if(this.initializeForm(),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){var a=this.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));this.translate.setDefaultLang(a.languagecode),this.dir=a.dir}else{var t=this.languagelist.find((function(e){return"1"==e.id}));this.translate.setDefaultLang(t.languagecode),this.dir=t.dir}this.remoteService.getLanguageCookie().subscribe((function(a){if(e.translate.setDefaultLang(e.cookieService.get("languageCode")),e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")){var t=e.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));e.translate.setDefaultLang(t.languagecode),e.dir=t.dir}else{var r=e.languagelist.find((function(e){return"1"==e.id}));e.translate.setDefaultLang(r.languagecode),e.dir=r.dir}}))}},{key:"initializeForm",value:function(){this.adduserroleform=this.formBuilder.group({stkholdertype:[null,i.x.required],civilno:[null,i.x.required],stafname:[null,i.x.required],emailid:[null,i.x.required],mobilenumber:[null,i.x.required],thirdpartyagent:[null,i.x.required],arrole:[null,i.x.required],arrolehigh:[null,i.x.required],centrename:[null,i.x.required]})}},{key:"selectedStktype",value:function(e){1==e?(this.opaladmindatashow=!0,this.thirdaprtyshowopal=!0,this.centredatashow=!1):2==e||3==e?(this.opaladmindatashow=!0,this.centredatashow=!0,this.thirdaprtyshowopal=!1):(this.opaladmindatashow=!1,this.centredatashow=!1,this.thirdaprtyshowopal=!1)}},{key:"scrollTo",value:function(e){try{document.querySelectorAll("."+e)[0].scrollIntoView({behavior:"smooth"}),console.log("page-content")}catch(a){}}},{key:"gotoback",value:function(){this.rolegridlistdata.emit(!0),this.addrolecreation.emit(!1)}},{key:"addrolform",get:function(){return this.adduserroleform.controls}}]),e}();Z.ctorParameters=function(){return[{type:i.e},{type:p.c},{type:u.a},{type:f.a},{type:h.a}]},Object(r.c)([Object(n.T)(),Object(r.e)("design:type",Object)],Z.prototype,"addrolecreation",void 0),Object(r.c)([Object(n.T)(),Object(r.e)("design:type",Object)],Z.prototype,"rolegridlistdata",void 0),Z=Object(r.c)([Object(n.n)({selector:"app-addusers",template:Object(r.d)(t("rQ2U")).default,encapsulation:n.pb.None,animations:[Object(c.p)("detailExpand",[Object(c.m)("collapsed",Object(c.n)({height:"0px",minHeight:"0"})),Object(c.m)("expanded",Object(c.n)({height:"*"})),Object(c.o)("expanded <=> collapsed",Object(c.e)("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])],styles:[Object(r.d)(t("ssP3")).default]}),Object(r.e)("design:paramtypes",[i.e,p.c,u.a,f.a,h.a])],Z);var K=[{id:1,name:"Module - 1",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:11,sname:"SubModule - 1",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:12,sname:"SubModule - 2",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:13,sname:"SubModule - 3",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:2,name:"Module - 2",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:21,sname:"SubModule - 5",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:22,sname:"SubModule - 6",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:23,sname:"SubModule - 7",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:3,name:"Module - 3",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:31,sname:"SubModule - 7",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:32,sname:"SubModule - 8",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:4,name:"Module - 4",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:41,sname:"SubModule - 9",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:42,sname:"SubModule - 10",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]}],X=function(){function e(a,t,r,n){_classCallCheck(this,e),this.formBuilder=a,this.translate=t,this.remoteService=r,this.cookieService=n,this.matcher=new d.d,this.dataSource=K,this.columnsToDisplay=["name","create","update","delete","approve","download"],this.innerDisplayedColumns=["sname","screate","supdate","sdelete","sapprove","sdownload"],this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr"}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;if(this.initializeForm(),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){var a=this.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));this.translate.setDefaultLang(a.languagecode),this.dir=a.dir}else{var t=this.languagelist.find((function(e){return"1"==e.id}));this.translate.setDefaultLang(t.languagecode),this.dir=t.dir}this.remoteService.getLanguageCookie().subscribe((function(a){if(e.translate.setDefaultLang(e.cookieService.get("languageCode")),e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")){var t=e.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));e.translate.setDefaultLang(t.languagecode),e.dir=t.dir}else{var r=e.languagelist.find((function(e){return"1"==e.id}));e.translate.setDefaultLang(r.languagecode),e.dir=r.dir}}))}},{key:"initializeForm",value:function(){this.viewroleform=this.formBuilder.group({stkholdertype:[null],techeval:[null],arrole:[null],arrolehigh:[null]})}},{key:"viewrolform",get:function(){return this.viewroleform.controls}}]),e}();X.ctorParameters=function(){return[{type:i.e},{type:p.c},{type:u.a},{type:f.a}]},X=Object(r.c)([Object(n.n)({selector:"app-viewroles",template:Object(r.d)(t("+5OT")).default,encapsulation:n.pb.None,animations:[Object(c.p)("detailExpand",[Object(c.m)("collapsed",Object(c.n)({height:"0px",minHeight:"0"})),Object(c.m)("expanded",Object(c.n)({height:"*"})),Object(c.o)("expanded <=> collapsed",Object(c.e)("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])],styles:[Object(r.d)(t("3Q/B")).default]}),Object(r.e)("design:paramtypes",[i.e,p.c,u.a,f.a])],X);var ee=[{id:1,name:"Module - 1",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:11,sname:"SubModule - 1",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:12,sname:"SubModule - 2",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:13,sname:"SubModule - 3",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:2,name:"Module - 2",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:21,sname:"SubModule - 5",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:22,sname:"SubModule - 6",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:23,sname:"SubModule - 7",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:3,name:"Module - 3",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:31,sname:"SubModule - 7",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:32,sname:"SubModule - 8",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]},{id:4,name:"Module - 4",create:"",update:"",delete:"",approve:"",download:"",submodule:[{sid:41,sname:"SubModule - 9",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""},{sid:42,sname:"SubModule - 10",screate:"",supdate:"",sdelete:"",sapprove:"",sdownload:""}]}],ae=function(){function e(a,t,r,n){_classCallCheck(this,e),this.formBuilder=a,this.translate=t,this.remoteService=r,this.cookieService=n,this.matcher=new d.d,this.dataSource=ee,this.columnsToDisplay=["name","create","update","delete","approve","download"],this.innerDisplayedColumns=["sname","screate","supdate","sdelete","sapprove","sdownload"],this.languagelist=[{id:"1",languageName:"English",languagecode:"en",CountryMst_Pk:"136",dir:"ltr"},{id:"2",languageName:"Arabic",languagecode:"ar",CountryMst_Pk:"31",dir:"rtl"}],this.dir="ltr"}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;if(this.initializeForm(),this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")&&null!=this.cookieService.get("languageCookieId")){var a=this.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));this.translate.setDefaultLang(a.languagecode),this.dir=a.dir}else{var t=this.languagelist.find((function(e){return"1"==e.id}));this.translate.setDefaultLang(t.languagecode),this.dir=t.dir}this.remoteService.getLanguageCookie().subscribe((function(a){if(e.translate.setDefaultLang(e.cookieService.get("languageCode")),e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")&&null!=e.cookieService.get("languageCookieId")){var t=e.languagelist.find((function(a){return a.id===e.cookieService.get("languageCookieId")}));e.translate.setDefaultLang(t.languagecode),e.dir=t.dir}else{var r=e.languagelist.find((function(e){return"1"==e.id}));e.translate.setDefaultLang(r.languagecode),e.dir=r.dir}}))}},{key:"initializeForm",value:function(){this.viewuserform=this.formBuilder.group({stkholdertype:[null],centrename:[null],staffname:[null],civilnumber:[null],emailid:[null],mobileno:[null],role:[null],username:[null],passwrd:[null]})}},{key:"viewusrform",get:function(){return this.viewuserform.controls}}]),e}();ae.ctorParameters=function(){return[{type:i.e},{type:p.c},{type:u.a},{type:f.a}]},ae=Object(r.c)([Object(n.n)({selector:"app-viewusers",template:Object(r.d)(t("VO3B")).default,encapsulation:n.pb.None,animations:[Object(c.p)("detailExpand",[Object(c.m)("collapsed",Object(c.n)({height:"0px",minHeight:"0"})),Object(c.m)("expanded",Object(c.n)({height:"*"})),Object(c.o)("expanded <=> collapsed",Object(c.e)("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])],styles:[Object(r.d)(t("Tx3U")).default]}),Object(r.e)("design:paramtypes",[i.e,p.c,u.a,f.a])],ae);var te=t("Dxy4"),re=t("l00h"),ne=t("+uca");function le(e){return new J.a(e,"./assets/i18n/certificationapproval/",".json")}var se=function e(){_classCallCheck(this,e)};se=Object(r.c)([Object(n.M)({declarations:[B,Y,T,Z,X,ae],imports:[l.c,s.a,E,G.b,W.a,i.u,i.k,te.b,re.b,ne.a,p.b.forChild({loader:{provide:p.a,useFactory:le,deps:[k.b]}})]})],se)},Tx3U:function(e,a,t){"use strict";t.r(a),a.default='#viewusers .viewusersnew {\n  padding: 0 30px;\n  margin-bottom: 50px;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #d9d9d9;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border-radius: 3px 0 0 3px;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border-radius: 0 3px 3px 0;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: #6ba5ec;\n  background-color: #f8f8f8;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #0c4b9a;\n  background-color: #f8f8f8;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline.mat-focused.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  color: #0c4b9a;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  background-color: #f8f8f8;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #dc4c64;\n  background-color: #f8f8f8;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  transform: translateY(-0.9rem) scale(0.75);\n  color: #848484;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#viewusers .viewusersnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap {\n  width: 0px !important;\n}\n#viewusers .viewusersnew .mat-form-field-readonly .mat-form-field-flex .mat-form-field-outline {\n  background: #eaedf2;\n}\n#viewusers .viewusersnew .aligncenter {\n  display: flex;\n  align-items: center;\n}\n#viewusers .viewusersnew .aligncenter .mat-icon {\n  width: 16px;\n  height: 16px;\n  color: #666;\n  cursor: pointer;\n  font-size: 20px;\n  margin-top: 5px;\n}\n#viewusers .viewusersnew .permissiontable {\n  width: 100%;\n  /* Hide the browser\'s default checkbox */\n  /* Create a custom checkbox */\n  /* On mouse-over, add a grey background color */\n  /* When the checkbox is checked, add a blue background */\n  /* When the checkbox is disabled, add a blue background */\n  /* Create the checkmark/indicator (hidden when not checked) */\n  /* Show the checkmark when checked */\n  /* Style the checkmark/indicator */\n}\n#viewusers .viewusersnew .permissiontable table {\n  width: 100%;\n  box-shadow: none;\n}\n#viewusers .viewusersnew .permissiontable tr.example-detail-row {\n  height: 0;\n}\n#viewusers .viewusersnew .permissiontable tr.example-element-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n#viewusers .viewusersnew .permissiontable tr.example-element-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n#viewusers .viewusersnew .permissiontable .example-element-row td {\n  border-bottom-width: 0;\n}\n#viewusers .viewusersnew .permissiontable .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#viewusers .viewusersnew .permissiontable .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#viewusers .viewusersnew .permissiontable .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#viewusers .viewusersnew .permissiontable .example-element-description {\n  padding: 16px;\n}\n#viewusers .viewusersnew .permissiontable .example-element-description-attribution {\n  opacity: 0.5;\n}\n#viewusers .viewusersnew .permissiontable table th {\n  background: #eaedf2;\n  font-size: 14px;\n  color: #333;\n  font-weight: 600;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#viewusers .viewusersnew .permissiontable table th:first-child {\n  text-align: left;\n  min-width: 250px;\n}\n#viewusers .viewusersnew .permissiontable table td {\n  position: relative;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#viewusers .viewusersnew .permissiontable table td:first-child {\n  text-align: left;\n  min-width: 250px;\n  color: #0c4b9a;\n}\n#viewusers .viewusersnew .permissiontable table td .expandicon {\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n}\n#viewusers .viewusersnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n#viewusers .viewusersnew .permissiontable table td .subtable tr th, #viewusers .viewusersnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n#viewusers .viewusersnew .permissiontable table td .subtable tr td {\n  position: relative;\n  text-align: center;\n  min-width: 72px;\n  max-width: 72px;\n}\n#viewusers .viewusersnew .permissiontable table td .subtable tr td:first-child {\n  max-width: 240px;\n  min-width: 240px;\n  text-align: left;\n  color: #333333;\n}\n#viewusers .viewusersnew .permissiontable .checkcontainer {\n  display: inline-block;\n  position: relative;\n  margin-bottom: 12px;\n  padding-left: 25px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n#viewusers .viewusersnew .permissiontable .checkcontainer input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n#viewusers .viewusersnew .permissiontable .checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 16px;\n  width: 16px;\n  background-color: #fff;\n  border: 1px solid #bbb;\n}\n#viewusers .viewusersnew .permissiontable .checkcontainer:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n#viewusers .viewusersnew .permissiontable .checkcontainer input:checked ~ .checkmark {\n  background-color: #0c4b9a;\n}\n#viewusers .viewusersnew .permissiontable .checkcontainer input:disabled ~ .checkmark {\n  background-color: #ddd;\n  cursor: no-drop;\n}\n#viewusers .viewusersnew .permissiontable .checkmark:after {\n  content: "";\n  position: absolute;\n  display: none;\n}\n#viewusers .viewusersnew .permissiontable .checkcontainer input:checked ~ .checkmark:after {\n  display: block;\n}\n#viewusers .viewusersnew .permissiontable .checkcontainer .checkmark:after {\n  left: 4px;\n  top: 1px;\n  width: 4px;\n  height: 7px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n#viewusers .viewusersnew .permissiontable .nopaddingtd {\n  padding: 0px !important;\n}\n@media (max-width: 768px) {\n  #viewusers .viewusersnew .paddingspacing {\n    padding-right: 0px !important;\n    padding-left: 0px !important;\n  }\n  #viewusers .viewusersnew .permissiontable {\n    overflow: auto;\n  }\n}\n[dir=rtl] #viewusers .viewusersnew .permissiontable table th:first-child, .rtl #viewusers .viewusersnew .permissiontable table th:first-child {\n  text-align: right;\n}\n[dir=rtl] #viewusers .viewusersnew .permissiontable table td:first-child, .rtl #viewusers .viewusersnew .permissiontable table td:first-child {\n  text-align: right;\n}\n[dir=rtl] #viewusers .viewusersnew .permissiontable table td .expandicon, .rtl #viewusers .viewusersnew .permissiontable table td .expandicon {\n  position: absolute;\n  left: 20px;\n  right: auto;\n  top: 50%;\n  transform: translateY(-50%);\n}\n[dir=rtl] #viewusers .viewusersnew .permissiontable table td .expandicon .mat-icon, .rtl #viewusers .viewusersnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n[dir=rtl] #viewusers .viewusersnew .permissiontable table td .subtable tr th, [dir=rtl] #viewusers .viewusersnew .permissiontable table td .subtable thead, .rtl #viewusers .viewusersnew .permissiontable table td .subtable tr th, .rtl #viewusers .viewusersnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n[dir=rtl] #viewusers .viewusersnew .permissiontable table td .subtable tr td:first-child, .rtl #viewusers .viewusersnew .permissiontable table td .subtable tr td:first-child {\n  text-align: right;\n}\n[dir=rtl] #viewusers .viewusersnew .permissiontable .checkcontainer, .rtl #viewusers .viewusersnew .permissiontable .checkcontainer {\n  padding-right: 25px;\n  padding-left: 0px;\n}'},VO3B:function(e,a,t){"use strict";t.r(a),a.default='<div fxLayout="row wrap">\r\n        <div fxFlex.gt-sm="100" fxFlex="100" id="viewusers">\r\n            <div fxFlex.gt-sm="100" fxFlex="100" class="viewusersnew">\r\n                    <form class="example-form" [formGroup]="viewuserform">\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label> {{\'viewusers.stactyp\' | translate}} </mat-label>\r\n                                <input matInput readonly="true" formControlName="stkholdertype" value="Project">\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewusers.centrnam\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="centrename" value="United Nations Industrial Development Organization (UNIDO)">                                \r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewusers.stafnam\' | translate}}`</mat-label>\r\n                                <input matInput readonly="true" formControlName="staffname" value="Saleh Abdullah Kamel">  \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                        ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewusers.civilnam\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="civilnumber" value="CVN007896"> \r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewusers.emaiid\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="emailid" value="salehabdullahkamel@gmail.com">  \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                        ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                <mat-label>{{\'viewusers.mobnum\' | translate}}</mat-label>\r\n                                <input matInput readonly="true" formControlName="mobileno" value="+968 2487 7683"> \r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                    <mat-label>{{\'viewusers.role\' | translate}}</mat-label>\r\n                                    <input matInput readonly="true" formControlName="role" value="Auditor">  \r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    <div fxLayout="row wrap" class="p-t-15">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter">\r\n                            {{\'viewusers.allomoduacc\' | translate}}\r\n                        </div>\r\n                    </div>\r\n    \r\n                    \x3c!--permission access table--\x3e\r\n                    <div fxLayout="row wrap" class="p-t-15">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="permissiontable">\r\n                            <table mat-table\r\n                            [dataSource]="dataSource" multiTemplateDataRows\r\n                            class="mat-elevation-z8">\r\n                                <ng-container matColumnDef="name">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewusers.modunam\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                            {{element.name}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="create">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewusers.cret\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label> {{element.create}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="update">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewusers.upda\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.update}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="delete">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewusers.dele\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.delete}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="approve">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewusers.appro\' | translate}}\r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox">\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.approve}} \r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="download">\r\n                                    <th mat-header-cell *matHeaderCellDef> \r\n                                        {{\'viewusers.down\' | translate}} \r\n                                    </th>\r\n                                    <td mat-cell *matCellDef="let element"> \r\n                                        <label class="checkcontainer">\r\n                                            <input type="checkbox" disabled>\r\n                                            <span class="checkmark"></span>\r\n                                        </label>\r\n                                        {{element.download}} \r\n                                        <span \r\n                                        class="example-element-row expandicon"\r\n                                        [class.example-expanded-row]="expandedElement === element"\r\n                                        (click)="expandedElement = expandedElement === element ? null : element"><mat-icon>{{expandedElement === element? \'remove\' : \'add\'}}</mat-icon></span>\r\n                                    </td>\r\n                                </ng-container>\r\n                                \x3c!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns --\x3e\r\n                                <ng-container matColumnDef="expandedDetail">\r\n                                    <td class="nopaddingtd" mat-cell *matCellDef="let element" [attr.colspan]="columnsToDisplay.length">\r\n                                    <div class="example-element-detail"\r\n                                            [@detailExpand]="element == expandedElement ? \'expanded\' : \'collapsed\'">\r\n                                            <table #innerTables class="subtable" mat-table [dataSource]="element.submodule">\r\n                                                    <ng-container matColumnDef="sname">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> <span class="p-l-30">{{element.sname}} </span></td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="screate">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label> \r\n                                                                {{element.screate}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="supdate">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.supdate}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="sdelete">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.sdelete}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="sapprove">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element">\r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.sapprove}}\r\n                                                             </td>\r\n                                                        </ng-container>\r\n                                                        <ng-container matColumnDef="sdownload">\r\n                                                            <th mat-header-cell *matHeaderCellDef></th>\r\n                                                            <td mat-cell *matCellDef="let element"> \r\n                                                                <label class="checkcontainer">\r\n                                                                    <input type="checkbox">\r\n                                                                    <span class="checkmark"></span>\r\n                                                                </label>\r\n                                                                {{element.sdownload}} \r\n                                                            </td>\r\n                                                        </ng-container>\r\n                                                <tr mat-header-row *matHeaderRowDef="innerDisplayedColumns"></tr>\r\n                                                <tr mat-row *matRowDef="let row; columns: innerDisplayedColumns;"></tr>\r\n                                            </table>\r\n                                    </div>\r\n                                    </td>\r\n                                </ng-container>\r\n                                \r\n                                <tr mat-header-row *matHeaderRowDef="columnsToDisplay"></tr>\r\n                                <tr mat-row *matRowDef="let element; columns: columnsToDisplay;">\r\n                                </tr>\r\n                                <tr mat-row *matRowDef="let row; columns: [\'expandedDetail\']" class="example-detail-row"></tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>                \r\n                    \x3c!--permission access table--\x3e\r\n                    <div fxLayout="row wrap" class="p-t-30" fxLayoutAlign="space-between center">\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                    <mat-label>{{\'viewusers.usernm\' | translate}}</mat-label>\r\n                                    <input matInput readonly="true" formControlName="username" value="saleh">\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                            ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width mat-form-field-readonly" appearance="outline">\r\n                                    <mat-label>{{\'viewusers.passw\' | translate}}</mat-label>\r\n                                    <input matInput readonly="true" formControlName="passwrd" value="opal@5678">                                \r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    <div fxLayout="row wrap" class="m-t-30" fxLayoutAlign="end">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-end center">\r\n                            <button mat-raised-button type="button" color="secondary"\r\n                                class="filterbtn height-45">{{\'viewusers.clos\' | translate}}</button>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    </form>\r\n            </div>\r\n        </div>\r\n    </div>'},ZV6k:function(e,a,t){"use strict";t.r(a),a.default="#manageroles tr.mat-row,\n#manageroles tr.mat-footer-row {\n  height: auto !important;\n  border-bottom: 1px solid #ddd;\n}\n#manageroles tr.mat-row:last-child,\n#manageroles tr.mat-footer-row:last-child {\n  border-bottom: none !important;\n}\n#manageroles th.mat-header-cell,\n#manageroles td.mat-cell,\n#manageroles td.mat-footer-cell {\n  border-bottom-style: none !important;\n}\n#manageroles .example-element-row td {\n  border-bottom-width: 0;\n}\n#manageroles .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#manageroles .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#manageroles .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#manageroles .example-element-description {\n  padding: 16px;\n}\n#manageroles .example-element-description-attribution {\n  opacity: 0.5;\n}\n#manageroles .documentheader h4 {\n  color: #0c4b9a;\n}\n#manageroles .mat-paginator-page-size-label {\n  margin: 0px !important;\n}\n#manageroles .mat-paginator-container {\n  padding: 0px !important;\n}\n#manageroles .viewtextcolor {\n  color: #0c4b9a;\n}\n#manageroles .addbtn {\n  background: #ed1c27;\n  color: #fff;\n}\n#manageroles #searchrow,\n#manageroles #filtershow {\n  background: #fff !important;\n  border: none;\n}\n#manageroles #searchrow .serachrow,\n#manageroles #filtershow .serachrow {\n  background: #fff !important;\n  min-height: 73px !important;\n  padding-right: 15px;\n  padding-top: 10px;\n}\n#manageroles .paginationwithfilter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#manageroles .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n  width: calc(100% - 186px);\n  color: #0c4b9a;\n}\n#manageroles .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions .mat-paginator-range-label {\n  width: calc(100% - 186px);\n}\n#manageroles .masterPageTop .mat-paginator-range-actions button {\n  display: none;\n}\n#manageroles .showtextcolor {\n  color: #262626;\n}\n#manageroles .redTxt {\n  color: #626366;\n  cursor: pointer;\n}\n#manageroles .viewhaderpdf img {\n  width: 40px;\n}\n#manageroles .viewhaderpdf p {\n  color: #262626;\n}\n#manageroles .print, #manageroles .cancelled, #manageroles .requestedback, #manageroles .requestedaccess, #manageroles .assessment, #manageroles .qualitycheck, #manageroles .teaching, #manageroles .newtag {\n  color: #00a551;\n  font-size: 0.9375rem;\n}\n#manageroles .newtag {\n  color: #ed1c27 !important;\n}\n#manageroles .teaching {\n  color: #f4811f !important;\n}\n#manageroles .qualitycheck {\n  color: #0c4b9a !important;\n}\n#manageroles .flexaligntag {\n  display: flex;\n  align-items: center;\n}\n#manageroles .assessment {\n  color: #C330CE;\n}\n#manageroles .requestedaccess {\n  color: #109d98;\n}\n#manageroles .requestedaccess {\n  color: #109d98;\n}\n#manageroles .requestedback {\n  color: #b14428;\n}\n#manageroles .cancelled {\n  color: #ed1c27;\n}\n#manageroles .update {\n  color: #0c4b9a;\n}\n#manageroles .declined {\n  color: #ed1c27;\n}\n#manageroles .new {\n  color: #f4811f;\n}\n#manageroles .approcedtagalign {\n  display: flex;\n  align-items: center;\n}\n#manageroles .approcedtagalign img {\n  padding-left: 15px;\n}\n#manageroles .scrolldata {\n  position: relative;\n  z-index: 1;\n  display: block;\n  overflow-x: auto;\n  background-color: #fff;\n  scroll-behavior: smooth;\n}\n#manageroles .scrolldata::-webkit-scrollbar {\n  width: 6px;\n  height: 5px;\n}\n#manageroles .scrolldata::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n#manageroles .scrolldata::-webkit-scrollbar-thumb {\n  background: #ccc;\n  border-radius: 2px;\n}\n#manageroles .scrolldata::-webkit-scrollbar-thumb:hover {\n  background: #ccc;\n}\n#manageroles .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: #d9d9d9 !important;\n}\n#manageroles .mat-sort-header-arrow {\n  color: #ED1C27;\n}\n#manageroles .nofound {\n  margin-top: 5%;\n}\n#manageroles .mat-paginator-container .mat-paginator-page-size-label {\n  color: #999;\n  font-size: 15px;\n}\n#manageroles .mat-paginator-container .mat-select-value {\n  color: #626366;\n  font-size: 15px;\n}\n#manageroles .mat-paginator-container .mat-paginator-range-label {\n  color: #999;\n  font-size: 15px;\n  margin: 0px 10px !important;\n}\n#manageroles .awaredtable {\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #fff;\n  margin: 10px 0px;\n}\n#manageroles .awaredtable .manageoptions {\n  padding-right: 15px;\n}\n#manageroles .awaredtable .mat-row:hover {\n  background-color: #f5f5f5 !important;\n}\n#manageroles .awaredtable .mat-cell {\n  color: #262626;\n}\n#manageroles .awaredtable .mat-header-cell {\n  color: #626366 !important;\n  background-color: #eaedf2;\n  font-size: 15px;\n}\n#manageroles .statustags {\n  background-color: #0c4b9a;\n  color: #fff;\n  border-radius: 2px;\n  padding: 3px 6px;\n}\n#manageroles .cancelbtn {\n  min-width: 110px;\n  background-color: #fff;\n  color: #333;\n  border: 1px solid #c4c4c4;\n  padding-left: 0px;\n  padding-right: 0px;\n  height: 45px;\n  box-shadow: none;\n}\n#manageroles .submit_btn {\n  background-color: #ED1C27 !important;\n  color: #fff !important;\n  min-width: 110px;\n  height: 45px;\n  box-shadow: none;\n}\n#manageroles .declinecmd {\n  border: 1px solid #ED1C27;\n  border-radius: 3px;\n  padding: 15px 15px 10px 15px;\n  background-color: #fff8f8;\n  height: auto;\n  width: 100%;\n}\n#manageroles .declinecmd .comment {\n  color: #ED1C27 !important;\n}\n#manageroles .declinecmd p {\n  color: #262626;\n}\n.actionmatmenu {\n  background: #666;\n  border-radius: 0px;\n  min-width: 100px;\n}\n.actionmatmenu .mat-menu-content button.mat-menu-item {\n  height: 28px;\n  color: #fff;\n  line-height: 28px;\n}\n@media (max-width: 768px) {\n  #manageroles .masterPageTop {\n    display: block !important;\n    justify-content: flex-start !important;\n  }\n  #manageroles .masterPageTop .mat-paginator-page-size-label {\n    margin: 0px !important;\n  }\n  #manageroles .masterPageTop .mat-paginator-container {\n    padding: 0px !important;\n    justify-content: flex-start !important;\n  }\n}\n@media (max-width: 767px) {\n  #manageroles .footerpaginator .mat-paginator-container {\n    display: block !important;\n  }\n  #manageroles .footerpaginator .mat-paginator-range-actions {\n    width: auto !important;\n  }\n}"},eQ86:function(e,a,t){"use strict";t.r(a),a.default='#addroles .mat-raised-button {\n  box-shadow: none;\n  border-radius: 2px;\n  font-size: 16px;\n  min-width: 120px;\n}\n#addroles .canclebtn, #addroles .filterbtn {\n  background-color: #fff;\n  border: 1px solid #e8e8e8;\n  color: #262626;\n}\n#addroles .disabledsubmit {\n  background: #ececec !important;\n  border: 1px solid #ececec !important;\n  color: #999 !important;\n  pointer-events: none;\n}\n#addroles .arabiclanguage input,\n#addroles .arabiclanguage .mat-form-field-label {\n  text-align: right;\n}\n#addroles .arabiclanguage .mat-form-field-label {\n  text-align: right;\n}\n#addroles .arabiclanguage .mat-error {\n  text-align: right;\n}\n#addroles .addrolesnew {\n  padding: 0 30px;\n  margin-bottom: 50px;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #d9d9d9;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border-radius: 3px 0 0 3px;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border-radius: 0 3px 3px 0;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: #6ba5ec;\n  background-color: #f8f8f8;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #0c4b9a;\n  background-color: #f8f8f8;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline.mat-focused.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  color: #0c4b9a;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  background-color: #f8f8f8;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #dc4c64;\n  background-color: #f8f8f8;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  transform: translateY(-0.9rem) scale(0.75);\n  color: #848484;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap {\n  width: 0px !important;\n}\n#addroles .addrolesnew .mat-form-field-appearance-outline .mat-form-field-suffix .mat-icon {\n  color: #888;\n}\n#addroles .addrolesnew .aligncenter {\n  display: flex;\n  align-items: center;\n}\n#addroles .addrolesnew .aligncenter .mat-icon {\n  width: 16px;\n  height: 16px;\n  color: #666;\n  cursor: pointer;\n  font-size: 20px;\n  margin-top: 5px;\n}\n#addroles .addrolesnew .permissiontable {\n  width: 100%;\n  /* Hide the browser\'s default checkbox */\n  /* Create a custom checkbox */\n  /* On mouse-over, add a grey background color */\n  /* When the checkbox is checked, add a blue background */\n  /* When the checkbox is disabled, add a blue background */\n  /* Create the checkmark/indicator (hidden when not checked) */\n  /* Show the checkmark when checked */\n  /* Style the checkmark/indicator */\n}\n#addroles .addrolesnew .permissiontable table {\n  width: 100%;\n  box-shadow: none;\n}\n#addroles .addrolesnew .permissiontable tr.example-detail-row {\n  height: 0;\n}\n#addroles .addrolesnew .permissiontable tr.example-element-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n#addroles .addrolesnew .permissiontable tr.example-element-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n#addroles .addrolesnew .permissiontable .example-element-row td {\n  border-bottom-width: 0;\n}\n#addroles .addrolesnew .permissiontable .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#addroles .addrolesnew .permissiontable .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#addroles .addrolesnew .permissiontable .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#addroles .addrolesnew .permissiontable .example-element-description {\n  padding: 16px;\n}\n#addroles .addrolesnew .permissiontable .example-element-description-attribution {\n  opacity: 0.5;\n}\n#addroles .addrolesnew .permissiontable table th {\n  background: #eaedf2;\n  font-size: 14px;\n  color: #333;\n  font-weight: 600;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#addroles .addrolesnew .permissiontable table th:first-child {\n  text-align: left;\n  min-width: 250px;\n}\n#addroles .addrolesnew .permissiontable table td {\n  position: relative;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#addroles .addrolesnew .permissiontable table td:first-child {\n  text-align: left;\n  min-width: 250px;\n  color: #0c4b9a;\n}\n#addroles .addrolesnew .permissiontable table td .expandicon {\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n}\n#addroles .addrolesnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n#addroles .addrolesnew .permissiontable table td .subtable tr th, #addroles .addrolesnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n#addroles .addrolesnew .permissiontable table td .subtable tr td {\n  position: relative;\n  text-align: center;\n  min-width: 72px;\n  max-width: 72px;\n}\n#addroles .addrolesnew .permissiontable table td .subtable tr td:first-child {\n  max-width: 240px;\n  min-width: 240px;\n  text-align: left;\n  color: #333333;\n}\n#addroles .addrolesnew .permissiontable .checkcontainer {\n  display: inline-block;\n  position: relative;\n  margin-bottom: 12px;\n  padding-left: 25px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n#addroles .addrolesnew .permissiontable .checkcontainer input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n#addroles .addrolesnew .permissiontable .checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 16px;\n  width: 16px;\n  background-color: #fff;\n  border: 1px solid #bbb;\n}\n#addroles .addrolesnew .permissiontable .checkcontainer:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n#addroles .addrolesnew .permissiontable .checkcontainer input:checked ~ .checkmark {\n  background-color: #0c4b9a;\n}\n#addroles .addrolesnew .permissiontable .checkcontainer input:disabled ~ .checkmark {\n  background-color: #ddd;\n  cursor: no-drop;\n}\n#addroles .addrolesnew .permissiontable .checkmark:after {\n  content: "";\n  position: absolute;\n  display: none;\n}\n#addroles .addrolesnew .permissiontable .checkcontainer input:checked ~ .checkmark:after {\n  display: block;\n}\n#addroles .addrolesnew .permissiontable .checkcontainer .checkmark:after {\n  left: 4px;\n  top: 1px;\n  width: 4px;\n  height: 7px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n#addroles .addrolesnew .permissiontable .nopaddingtd {\n  padding: 0px !important;\n}\n#addroles .addrolesnew .addbtn, #addroles .addrolesnew .filterbtn {\n  min-width: 100px;\n}\n#addroles .addrolesnew .addbtn {\n  background: #ed1c27;\n  color: #fff;\n}\n@media (max-width: 768px) {\n  #addroles .addrolesnew .paddingspacing {\n    padding-right: 0px !important;\n    padding-left: 0px !important;\n  }\n  #addroles .addrolesnew .permissiontable {\n    overflow: auto;\n  }\n}\n[dir=rtl] #addroles .addrolesnew .permissiontable table th:first-child, .rtl #addroles .addrolesnew .permissiontable table th:first-child {\n  text-align: right;\n}\n[dir=rtl] #addroles .addrolesnew .permissiontable table td:first-child, .rtl #addroles .addrolesnew .permissiontable table td:first-child {\n  text-align: right;\n}\n[dir=rtl] #addroles .addrolesnew .permissiontable table td .expandicon, .rtl #addroles .addrolesnew .permissiontable table td .expandicon {\n  position: absolute;\n  left: 20px;\n  right: auto;\n  top: 50%;\n  transform: translateY(-50%);\n}\n[dir=rtl] #addroles .addrolesnew .permissiontable table td .expandicon .mat-icon, .rtl #addroles .addrolesnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n[dir=rtl] #addroles .addrolesnew .permissiontable table td .subtable tr th, [dir=rtl] #addroles .addrolesnew .permissiontable table td .subtable thead, .rtl #addroles .addrolesnew .permissiontable table td .subtable tr th, .rtl #addroles .addrolesnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n[dir=rtl] #addroles .addrolesnew .permissiontable table td .subtable tr td:first-child, .rtl #addroles .addrolesnew .permissiontable table td .subtable tr td:first-child {\n  text-align: right;\n}\n[dir=rtl] #addroles .addrolesnew .permissiontable .checkcontainer, .rtl #addroles .addrolesnew .permissiontable .checkcontainer {\n  padding-right: 25px;\n  padding-left: 0px;\n}\n.select_with_search {\n  overflow: hidden !important;\n  max-height: 100% !important;\n  margin-top: 50px !important;\n  margin-bottom: 15px !important;\n}\n.select_with_option {\n  overflow: hidden !important;\n  max-height: 100% !important;\n  margin-top: 49px !important;\n  margin-bottom: 15px !important;\n}\n.searchinmultiselect {\n  display: flex;\n  align-items: center;\n  padding: 10px 10px;\n  background: #e9edf0;\n  margin: 10px;\n}\n.searchselect {\n  width: calc(100% - 25px) !important;\n  padding-left: 10px;\n}\n.reseticon:hover {\n  cursor: pointer !important;\n}\n.mat-option.mat-active {\n  background: #fff;\n  color: rgba(0, 0, 0, 0.87);\n}\n.option-listing {\n  overflow-x: auto;\n  overflow-y: auto;\n  max-height: 290px;\n}\n.option-listing::-webkit-scrollbar {\n  width: 7px;\n}\n.numberandcode .mat-form-field-infix {\n  display: flex !important;\n}\n/* Track */\n.option-listing::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n/* Handle */\n.option-listing::-webkit-scrollbar-thumb {\n  background: #ED1C27;\n}\n/* hover */\n.option-listing::-webkit-scrollbar-thumb:hover {\n  background: #ED1C27;\n}\n.myPanelClass {\n  margin: 36px 0px;\n}\n#manageroles tr.mat-row,\n#manageroles tr.mat-footer-row {\n  height: auto !important;\n  border-bottom: 1px solid #ddd;\n}\n#manageroles tr.mat-row:last-child,\n#manageroles tr.mat-footer-row:last-child {\n  border-bottom: none !important;\n}\n#manageroles th.mat-header-cell,\n#manageroles td.mat-cell,\n#manageroles td.mat-footer-cell {\n  border-bottom-style: none !important;\n}\n#manageroles .example-element-row td {\n  border-bottom-width: 0;\n}\n#manageroles .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#manageroles .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#manageroles .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#manageroles .example-element-description {\n  padding: 16px;\n}\n#manageroles .example-element-description-attribution {\n  opacity: 0.5;\n}\n#manageroles .documentheader h4 {\n  color: #0c4b9a;\n}\n#manageroles .mat-paginator-page-size-label {\n  margin: 0px !important;\n}\n#manageroles .mat-paginator-container {\n  padding: 0px !important;\n}\n#manageroles .viewtextcolor {\n  color: #0c4b9a;\n}\n#manageroles .addbtn {\n  background: #ed1c27;\n  color: #fff;\n}\n#manageroles #searchrow,\n#manageroles #filtershow {\n  background: #fff !important;\n  border: none;\n}\n#manageroles #searchrow .serachrow,\n#manageroles #filtershow .serachrow {\n  background: #fff !important;\n  min-height: 73px !important;\n  padding-right: 15px;\n  padding-top: 10px;\n}\n#manageroles .paginationwithfilter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#manageroles .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n  width: calc(100% - 186px);\n  color: #0c4b9a;\n}\n#manageroles .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions .mat-paginator-range-label {\n  width: calc(100% - 186px);\n}\n#manageroles .masterPageTop .mat-paginator-range-actions button {\n  display: none;\n}\n#manageroles .showtextcolor {\n  color: #262626;\n}\n#manageroles .redTxt {\n  color: #626366;\n  cursor: pointer;\n}\n#manageroles .viewhaderpdf img {\n  width: 40px;\n}\n#manageroles .viewhaderpdf p {\n  color: #262626;\n}\n#manageroles .print, #manageroles .cancelled, #manageroles .requestedback, #manageroles .requestedaccess, #manageroles .assessment, #manageroles .qualitycheck, #manageroles .teaching, #manageroles .newtag {\n  color: #00a551;\n  font-size: 0.9375rem;\n}\n#manageroles .newtag {\n  color: #ed1c27 !important;\n}\n#manageroles .teaching {\n  color: #f4811f !important;\n}\n#manageroles .qualitycheck {\n  color: #0c4b9a !important;\n}\n#manageroles .flexaligntag {\n  display: flex;\n  align-items: center;\n}\n#manageroles .assessment {\n  color: #C330CE;\n}\n#manageroles .requestedaccess {\n  color: #109d98;\n}\n#manageroles .requestedaccess {\n  color: #109d98;\n}\n#manageroles .requestedback {\n  color: #b14428;\n}\n#manageroles .cancelled {\n  color: #ed1c27;\n}\n#manageroles .update {\n  color: #0c4b9a;\n}\n#manageroles .declined {\n  color: #ed1c27;\n}\n#manageroles .new {\n  color: #f4811f;\n}\n#manageroles .approcedtagalign {\n  display: flex;\n  align-items: center;\n}\n#manageroles .approcedtagalign img {\n  padding-left: 15px;\n}\n#manageroles .scrolldata {\n  position: relative;\n  z-index: 1;\n  display: block;\n  overflow-x: auto;\n  background-color: #fff;\n  scroll-behavior: smooth;\n}\n#manageroles .scrolldata::-webkit-scrollbar {\n  width: 6px;\n  height: 5px;\n}\n#manageroles .scrolldata::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n#manageroles .scrolldata::-webkit-scrollbar-thumb {\n  background: #ccc;\n  border-radius: 2px;\n}\n#manageroles .scrolldata::-webkit-scrollbar-thumb:hover {\n  background: #ccc;\n}\n#manageroles .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: #d9d9d9 !important;\n}\n#manageroles .mat-sort-header-arrow {\n  color: #ED1C27;\n}\n#manageroles .nofound {\n  margin-top: 5%;\n}\n#manageroles .mat-paginator-container .mat-paginator-page-size-label {\n  color: #999;\n  font-size: 15px;\n}\n#manageroles .mat-paginator-container .mat-select-value {\n  color: #626366;\n  font-size: 15px;\n}\n#manageroles .mat-paginator-container .mat-paginator-range-label {\n  color: #999;\n  font-size: 15px;\n  margin: 0px 10px !important;\n}\n#manageroles .awaredtable {\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #fff;\n  margin: 10px 0px;\n}\n#manageroles .awaredtable .manageoptions {\n  padding-right: 15px;\n}\n#manageroles .awaredtable .mat-row:hover {\n  background-color: #f5f5f5 !important;\n}\n#manageroles .awaredtable .mat-cell {\n  color: #262626;\n}\n#manageroles .awaredtable .mat-header-cell {\n  color: #626366 !important;\n  background-color: #eaedf2;\n  font-size: 15px;\n}\n#manageroles .statustags {\n  background-color: #0c4b9a;\n  color: #fff;\n  border-radius: 2px;\n  padding: 3px 6px;\n}\n#manageroles .cancelbtn {\n  min-width: 110px;\n  background-color: #fff;\n  color: #333;\n  border: 1px solid #c4c4c4;\n  padding-left: 0px;\n  padding-right: 0px;\n  height: 45px;\n  box-shadow: none;\n}\n#manageroles .submit_btn {\n  background-color: #ED1C27 !important;\n  color: #fff !important;\n  min-width: 110px;\n  height: 45px;\n  box-shadow: none;\n}\n#manageroles .declinecmd {\n  border: 1px solid #ED1C27;\n  border-radius: 3px;\n  padding: 15px 15px 10px 15px;\n  background-color: #fff8f8;\n  height: auto;\n  width: 100%;\n}\n#manageroles .declinecmd .comment {\n  color: #ED1C27 !important;\n}\n#manageroles .declinecmd p {\n  color: #262626;\n}\n.actionmatmenu {\n  background: #666;\n  border-radius: 0px;\n  min-width: 100px;\n  min-height: unset;\n}\n.actionmatmenu .mat-menu-content button.mat-menu-item {\n  height: 28px;\n  color: #fff;\n  line-height: 28px;\n}\n@media (max-width: 768px) {\n  #manageroles .masterPageTop {\n    display: block !important;\n    justify-content: flex-start !important;\n  }\n  #manageroles .masterPageTop .mat-paginator-page-size-label {\n    margin: 0px !important;\n  }\n  #manageroles .masterPageTop .mat-paginator-container {\n    padding: 0px !important;\n    justify-content: flex-start !important;\n  }\n}\n@media (max-width: 767px) {\n  #manageroles .footerpaginator .mat-paginator-container {\n    display: block !important;\n  }\n  #manageroles .footerpaginator .mat-paginator-range-actions {\n    width: auto !important;\n  }\n}\n#manageusers tr.mat-row,\n#manageusers tr.mat-footer-row {\n  height: auto !important;\n  border-bottom: 1px solid #ddd;\n}\n#manageusers tr.mat-row:last-child,\n#manageusers tr.mat-footer-row:last-child {\n  border-bottom: none !important;\n}\n#manageusers th.mat-header-cell,\n#manageusers td.mat-cell,\n#manageusers td.mat-footer-cell {\n  border-bottom-style: none !important;\n}\n#manageusers .example-element-row td {\n  border-bottom-width: 0;\n}\n#manageusers .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#manageusers .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#manageusers .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#manageusers .example-element-description {\n  padding: 16px;\n}\n#manageusers .example-element-description-attribution {\n  opacity: 0.5;\n}\n#manageusers .mat-paginator-page-size-label {\n  margin: 0px !important;\n}\n#manageusers .mat-paginator-container {\n  padding: 0px !important;\n}\n#manageusers .addbtn {\n  background: #ed1c27;\n  color: #fff;\n}\n#manageusers #searchrow,\n#manageusers #filtershow {\n  background: #fff !important;\n  border: none;\n}\n#manageusers #searchrow .serachrow,\n#manageusers #filtershow .serachrow {\n  background: #fff !important;\n  min-height: 73px !important;\n  padding-right: 15px;\n  padding-top: 10px;\n}\n#manageusers .paginationwithfilter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#manageusers .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n  width: calc(100% - 186px);\n  color: #0c4b9a;\n}\n#manageusers .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions .mat-paginator-range-label {\n  width: calc(100% - 186px);\n}\n#manageusers .masterPageTop .mat-paginator-range-actions button {\n  display: none;\n}\n#manageusers .autofectlist .mat-form-field-outline {\n  background-color: #f8f8f8 !important;\n  cursor: no-drop !important;\n}\n#manageusers .autofectlist input[readonly] {\n  cursor: no-drop !important;\n}\n#manageusers .mobautofectlist .mat-form-field-outline {\n  cursor: no-drop !important;\n}\n#manageusers .mobautofectlist input[readonly] {\n  cursor: no-drop !important;\n}\n#manageusers .print, #manageusers #manageroles .newtag, #manageroles #manageusers .newtag, #manageusers #manageroles .teaching, #manageroles #manageusers .teaching, #manageusers #manageroles .qualitycheck, #manageroles #manageusers .qualitycheck, #manageusers #manageroles .assessment, #manageroles #manageusers .assessment, #manageusers #manageroles .requestedaccess, #manageroles #manageusers .requestedaccess, #manageusers #manageroles .requestedback, #manageroles #manageusers .requestedback, #manageusers #manageroles .cancelled, #manageroles #manageusers .cancelled {\n  color: #00a551;\n  font-size: 0.9375rem;\n}\n#manageusers .flexaligntag {\n  display: flex;\n  align-items: center;\n}\n#manageusers .update {\n  color: #0c4b9a;\n}\n#manageusers .declined {\n  color: #ed1c27;\n}\n#manageusers .pending {\n  color: #F4811F;\n}\n#manageusers .scrolldata {\n  position: relative;\n  z-index: 1;\n  display: block;\n  overflow-x: auto;\n  background-color: #fff;\n  scroll-behavior: smooth;\n}\n#manageusers .scrolldata::-webkit-scrollbar {\n  width: 6px;\n  height: 5px;\n}\n#manageusers .scrolldata::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n#manageusers .scrolldata::-webkit-scrollbar-thumb {\n  background: #ccc;\n  border-radius: 2px;\n}\n#manageusers .scrolldata::-webkit-scrollbar-thumb:hover {\n  background: #ccc;\n}\n#manageusers .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: #d9d9d9 !important;\n}\n#manageusers .mat-sort-header-arrow {\n  color: #ED1C27;\n}\n#manageusers .mat-paginator-container .mat-paginator-page-size-label {\n  color: #999;\n  font-size: 15px;\n}\n#manageusers .mat-paginator-container .mat-select-value {\n  color: #626366;\n  font-size: 15px;\n}\n#manageusers .mat-paginator-container .mat-paginator-range-label {\n  color: #999;\n  font-size: 15px;\n  margin: 0px 10px !important;\n}\n#manageusers .awaredtable {\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #fff;\n  margin: 10px 0px;\n}\n#manageusers .awaredtable .manageoptions {\n  padding-right: 15px;\n}\n#manageusers .awaredtable .mat-row:hover {\n  background-color: #f5f5f5 !important;\n}\n#manageusers .awaredtable .mat-cell {\n  color: #262626;\n}\n#manageusers .awaredtable .mat-header-cell {\n  color: #626366 !important;\n  background-color: #eaedf2;\n  font-size: 15px;\n}\n.actionmatmenu {\n  background: #666;\n  border-radius: 0px;\n  min-width: 100px;\n}\n.actionmatmenu .mat-menu-content button.mat-menu-item {\n  height: 28px;\n  color: #fff;\n  line-height: 28px;\n}\n@media (max-width: 768px) {\n  #manageusers .masterPageTop {\n    display: block !important;\n    justify-content: flex-start !important;\n  }\n  #manageusers .masterPageTop .mat-paginator-page-size-label {\n    margin: 0px !important;\n  }\n  #manageusers .masterPageTop .mat-paginator-container {\n    padding: 0px !important;\n    justify-content: flex-start !important;\n  }\n}\n@media (max-width: 767px) {\n  #manageusers .footerpaginator .mat-paginator-container {\n    display: block !important;\n  }\n  #manageusers .footerpaginator .mat-paginator-range-actions {\n    width: auto !important;\n  }\n}\n.onlyviewallocate .cursor_part {\n  cursor: no-drop;\n}\n.onlyviewallocate .cursor_part .innerpermission {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.mat-select-disabled .mat-select-trigger {\n  cursor: no-drop !important;\n}\n.mat-input-element:disabled {\n  color: #262626 !important;\n}\n.cdk-overlay-pane .mat-select-panel-wrap .mat-select-panel.select_with_option {\n  padding: 0;\n  margin-top: 5px;\n  min-width: calc(100% + 18px) !important;\n  overflow: hidden;\n  margin-left: 32px;\n  max-height: 100% !important;\n}\n.popover {\n  position: absolute;\n  padding: 10px;\n  margin-top: 10px;\n  max-width: 30rem;\n  min-width: 150px;\n  background-color: #000;\n  box-shadow: 0 0.2rem 0.4rem 0 rgba(0, 0, 0, 0.15);\n  border: none;\n  border-radius: 2px;\n  z-index: 1060;\n  color: #ffffff;\n  font-size: 14px;\n  left: 0px;\n  top: 10px;\n}\n.popoverforsubcate {\n  position: relative;\n}\n.popover.popover-content {\n  background-color: #333;\n  box-shadow: 0 0.2rem 0.4rem 0 rgba(0, 0, 0, 0.15);\n  border: none;\n  padding: 10px;\n  z-index: 1060;\n  max-width: none;\n  border-radius: 0rem;\n  font-family: "opal_regular";\n  font-size: "12px";\n  border-radius: 2px;\n}\n.popover.popover-content.sm {\n  max-width: 20rem;\n  min-width: 150px;\n  width: auto;\n}\n.popover.popover-content.sm {\n  max-width: 20rem;\n  min-width: 150px;\n}\n.custom-tooltip {\n  white-space: pre-wrap;\n  display: flex;\n  flex-direction: column;\n  line-height: 22px;\n  font-family: "opal_regular", sans-serif;\n  color: #ffffff;\n  background-color: #333;\n}\n.mat-option.mat-option-disabled {\n  color: #848484 !important;\n}\n.mat-select-search-inner-multiple {\n  background-color: #e9edf0 !important;\n  width: 96% !important;\n  margin: 10px;\n}'},gKzc:function(e,a,t){"use strict";t.r(a),a.default="#manageusers tr.mat-row,\n#manageusers tr.mat-footer-row {\n  height: auto !important;\n  border-bottom: 1px solid #ddd;\n}\n#manageusers tr.mat-row:last-child,\n#manageusers tr.mat-footer-row:last-child {\n  border-bottom: none !important;\n}\n#manageusers th.mat-header-cell,\n#manageusers td.mat-cell,\n#manageusers td.mat-footer-cell {\n  border-bottom-style: none !important;\n}\n#manageusers .example-element-row td {\n  border-bottom-width: 0;\n}\n#manageusers .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#manageusers .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#manageusers .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#manageusers .example-element-description {\n  padding: 16px;\n}\n#manageusers .example-element-description-attribution {\n  opacity: 0.5;\n}\n#manageusers .mat-paginator-page-size-label {\n  margin: 0px !important;\n}\n#manageusers .mat-paginator-container {\n  padding: 0px !important;\n}\n#manageusers .addbtn {\n  background: #ed1c27;\n  color: #fff;\n}\n#manageusers #searchrow,\n#manageusers #filtershow {\n  background: #fff !important;\n  border: none;\n}\n#manageusers #searchrow .serachrow,\n#manageusers #filtershow .serachrow {\n  background: #fff !important;\n  min-height: 73px !important;\n  padding-right: 15px;\n  padding-top: 10px;\n}\n#manageusers .paginationwithfilter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#manageusers .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions {\n  width: calc(100% - 186px);\n  color: #0c4b9a;\n}\n#manageusers .footerpaginator .mat-paginator-outer-container .mat-paginator-range-actions .mat-paginator-range-label {\n  width: calc(100% - 186px);\n}\n#manageusers .masterPageTop .mat-paginator-range-actions button {\n  display: none;\n}\n#manageusers .print {\n  color: #00a551;\n  font-size: 0.9375rem;\n}\n#manageusers .flexaligntag {\n  display: flex;\n  align-items: center;\n}\n#manageusers .update {\n  color: #0c4b9a;\n}\n#manageusers .declined {\n  color: #ed1c27;\n}\n#manageusers .pending {\n  color: #F4811F;\n}\n#manageusers .scrolldata {\n  position: relative;\n  z-index: 1;\n  display: block;\n  overflow-x: auto;\n  background-color: #fff;\n  scroll-behavior: smooth;\n}\n#manageusers .scrolldata::-webkit-scrollbar {\n  width: 6px;\n  height: 5px;\n}\n#manageusers .scrolldata::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n#manageusers .scrolldata::-webkit-scrollbar-thumb {\n  background: #ccc;\n  border-radius: 2px;\n}\n#manageusers .scrolldata::-webkit-scrollbar-thumb:hover {\n  background: #ccc;\n}\n#manageusers .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: #d9d9d9 !important;\n}\n#manageusers .mat-sort-header-arrow {\n  color: #ED1C27;\n}\n#manageusers .mat-paginator-container .mat-paginator-page-size-label {\n  color: #999;\n  font-size: 15px;\n}\n#manageusers .mat-paginator-container .mat-select-value {\n  color: #626366;\n  font-size: 15px;\n}\n#manageusers .mat-paginator-container .mat-paginator-range-label {\n  color: #999;\n  font-size: 15px;\n  margin: 0px 10px !important;\n}\n#manageusers .awaredtable {\n  border-radius: 2px;\n  background-clip: padding-box;\n  background-color: #fff;\n  margin: 10px 0px;\n}\n#manageusers .awaredtable .manageoptions {\n  padding-right: 15px;\n}\n#manageusers .awaredtable .mat-row:hover {\n  background-color: #f5f5f5 !important;\n}\n#manageusers .awaredtable .mat-cell {\n  color: #262626;\n}\n#manageusers .awaredtable .mat-header-cell {\n  color: #626366 !important;\n  background-color: #eaedf2;\n  font-size: 15px;\n}\n.actionmatmenu {\n  background: #666;\n  border-radius: 0px;\n  min-width: 100px;\n}\n.actionmatmenu .mat-menu-content button.mat-menu-item {\n  height: 28px;\n  color: #fff;\n  line-height: 28px;\n}\n@media (max-width: 768px) {\n  #manageusers .masterPageTop {\n    display: block !important;\n    justify-content: flex-start !important;\n  }\n  #manageusers .masterPageTop .mat-paginator-page-size-label {\n    margin: 0px !important;\n  }\n  #manageusers .masterPageTop .mat-paginator-container {\n    padding: 0px !important;\n    justify-content: flex-start !important;\n  }\n}\n@media (max-width: 767px) {\n  #manageusers .footerpaginator .mat-paginator-container {\n    display: block !important;\n  }\n  #manageusers .footerpaginator .mat-paginator-range-actions {\n    width: auto !important;\n  }\n}"},krck:function(e,a,t){"use strict";t.r(a),a.default='<div fxLayout="row wrap">\r\n    <div *ngIf="!addrolecreationpage" fxFlex.gt-sm="100" fxFlex="100" id="manageroles">\r\n        <div class="paginationwithfilter masterPageTop ">\r\n            <mat-paginator class="masterPage masterPageTop" #paginator [length]="resultsLength" [pageSize]="10"\r\n                [pageSizeOptions]="[5, 10, 25, 100]" (page)="syncPrimaryPaginator($event);"></mat-paginator>\r\n            <div fxLayout="row wrap" fxLayoutAlign="end">\r\n                <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-start center">\r\n                    <button mat-raised-button type="button" color="secondary" [routerLink]="[\'/newenterpriseadmin/addroles\']"\r\n                    [queryParams]="{type: 1}"  class="addbtn m-r-10 height-45">{{\'manageroles.add\' | translate}}</button>\r\n                    <button mat-raised-button type="button" color="primary" (click)="clickEvent();"\r\n                        class="filter height-45">{{filtername}}<i class="fa fa-filter m-l-6" aria-hidden="true"></i></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout="row wrap">\r\n            <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                <div class="awaredtable">\r\n                    <mat-table #table class="scrolldata" [dataSource]="roledata.data" multiTemplateDataRows matSort matSortDisableClear>\r\n                        \r\n                        <ng-container matColumnDef="stakeholdertype">\r\n                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.stactyp\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                {{coursedata.stakeholdertype}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="projectname_en">\r\n                            <mat-header-cell fxFlex="330px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.proj\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch Type" fxFlex="330px" *matCellDef="let coursedata">\r\n                                {{coursedata.projectname_en}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="rolename_en">\r\n                            <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.role\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                    {{coursedata.rolename_en}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="higherRole">\r\n                            <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.highrol\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                    {{coursedata.higherRole}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="status">\r\n                            <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.stat\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="{{\'batch.branchname\' |\r\n                            translate}}" fxFlex="160px" *matCellDef="let coursedata">\r\n                            <p *ngIf="coursedata.status == 1" class="print flexaligntag">{{\'manageroles.activ\' | translate}}</p>\r\n                            <p *ngIf="coursedata.status == 2"  class="declined flexaligntag">{{\'manageroles.inact\' | translate}}</p>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="addedOn">\r\n                            <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.addon\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                    {{coursedata.addedOn}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="updatedOn">\r\n                            <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.lastadon\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                    {{coursedata.updatedOn}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="action">\r\n                            <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageroles.actio\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                    <button mat-button [matMenuTriggerFor]="menu"><mat-icon>more_horiz</mat-icon></button>\r\n                                    <mat-menu #menu="matMenu" class="actionmatmenu">\r\n                                        <button mat-menu-item (click)="viewroute()">{{\'manageroles.view\' | translate}}</button>\r\n                                        <button mat-menu-item (click)="editData(coursedata)">Edit</button>\r\n                                        <button *ngIf="coursedata.status == \'I\'" mat-menu-item>{{\'manageroles.acti\' | translate}}</button>\r\n                                        <button *ngIf="coursedata.status == \'A\'" mat-menu-item>{{\'manageroles.deact\' | translate}}</button>\r\n                                    </mat-menu>   \r\n                                </mat-cell>\r\n                        </ng-container>  \r\n                        <ng-container matColumnDef="row-first">\r\n                            <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>Search</mat-label>\r\n                                    <mat-select [formControl]="stktypesearch">\r\n                                        <mat-option value="OPAL Admin">{{\'manageroles.opaladm\' | translate}}</mat-option>\r\n                                        <mat-option value="Training Evaluation Centre">{{\'manageroles.traievalcen\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-second">\r\n                            <mat-header-cell fxFlex="330px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageroles.sear\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="projectsearch">\r\n                                        <mat-option value="Road Worthiness Assurance Standard (RAS)">{{\'manageroles.roadworthassu\' | translate}}</mat-option>\r\n                                        <mat-option value="In-Vehicle Monitoring System (IVMS)">{{\'manageroles.invehmon\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-three">\r\n                            <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageroles.sele\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="rolesearch">\r\n                                        <mat-option value="Auditor">{{\'manageroles.audit\' | translate}}</mat-option>\r\n                                        <mat-option value="Assessor">{{\'manageroles.asses\' | translate}}</mat-option>\r\n                                        <mat-option value="Finance">{{\'manageroles.fina\' | translate}}</mat-option>\r\n                                        <mat-option value="Authority">{{\'manageroles.authar\' | translate}}</mat-option>\r\n                                        <mat-option value="Quality Manager">{{\'manageroles.qualmanag\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-four">\r\n                            <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageroles.sele\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="highrolesearch">\r\n                                        <mat-option value="Authority">{{\'manageroles.authar\' | translate}}</mat-option>\r\n                                        <mat-option value="CEO">{{\'manageroles.ceo\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-five">\r\n                            <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageroles.sele\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="statussearch">\r\n                                        <mat-option value="1">{{\'manageroles.activ\' | translate}}</mat-option>\r\n                                        <mat-option value="2">{{\'manageroles.inact\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-six">\r\n                            <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageroles.sear\' | translate}}</mat-label>\r\n                                <input matInput [formControl]="addedonsearch" (click)="addedon.open()"\r\n                                    [matDatepicker]="addedon">\r\n                                <mat-datepicker-toggle matSuffix [for]="addedon"></mat-datepicker-toggle>\r\n                                <mat-datepicker #addedon></mat-datepicker>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-seven">\r\n                            <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageroles.sear\' | translate}}</mat-label>\r\n                                <input matInput [formControl]="updatedonsearch" (click)="updatedon.open()"\r\n                                    [matDatepicker]="updatedon">\r\n                                <mat-datepicker-toggle matSuffix [for]="updatedon"></mat-datepicker-toggle>\r\n                                <mat-datepicker #updatedon></mat-datepicker>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <tr mat-header-row  id="headerrowcells" *matHeaderRowDef="rolesrecordcolumn"></tr>\r\n                        <mat-header-row id="searchrow"\r\n                            *matHeaderRowDef="[\'row-first\',\'row-second\',\'row-three\' ,\'row-four\',\'row-five\',\'row-six\',\'row-seven\']">\r\n                        </mat-header-row>\r\n                        <tr mat-row *matRowDef="let element; columns: rolesrecordcolumn;"\r\n                            class="example-element-row">\r\n                        </tr>\r\n                    </mat-table>\r\n                </div>\r\n                <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                    <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                        <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                            class="masterPage masterbottom " showFirstLastButtons [pageSize]="paginator?.pageSize"\r\n                            (page)="syncPrimaryPaginator($event);" [pageIndex]="paginator?.pageIndex"\r\n                            [length]="paginator?.length" [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                        </mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n   </div>   \r\n</div>\r\n\r\n\r\n<app-addroles *ngIf="addrolecreationpage" (rolegridlistdata)="gridlistdata($event)" (addrolecreation)="addrolecreationdata($event)"></app-addroles>'},qarE:function(e,a,t){"use strict";t.r(a),a.default='<app-responseloader *ngIf="disableSubmitButton"></app-responseloader>\r\n<div  *ngIf="!disableSubmitButton && (this.rolereadaccess || this.userreadaccess)" fxLayout="row wrap">\r\n    <div fxFlex.gt-sm="100" fxFlex="100" id="addroles">\r\n        <div fxFlex.gt-sm="100" fxFlex="100" class="addrolesnew">\r\n            <div *ngIf="refname == 1 && rolereadaccess" class="example-form" id="manageroles">\r\n                <div *ngIf="hidegrid" class="paginationwithfilter masterPageTop ">\r\n                    <mat-paginator class="masterPage masterPageTop" #paginator [length]="resultsLength" [pageSize]="10"\r\n                        [pageSizeOptions]="[5, 10, 25, 100]" (page)="syncPrimaryPaginator($event);"></mat-paginator>\r\n                    <div fxLayout="row wrap" fxLayoutAlign="end">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-start center">\r\n                            <button mat-raised-button type="button" color="secondary" *ngIf="rolecreateaccess" (click)="evenadddata();"\r\n                                [queryParams]="{type: 1}" class="addbtn m-r-10 height-45">{{\'manageroles.add\' |\r\n                                translate}}</button>\r\n                            <button mat-raised-button type="button" color="primary" (click)="clickEvent();"\r\n                                class="filter height-45">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7"\r\n                                    aria-hidden="true"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf="hidegrid" fxLayout="row wrap">\r\n                    <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                        <div class="awaredtable">\r\n                            <mat-table #table class="scrolldata" [dataSource]="Usersrecord" matSortActive="rolemst_pk"\r\n                                matSortDirection="desc" multiTemplateDataRows matSort matSortDisableClear>\r\n                                <ng-container matColumnDef="rm_opalstkholdertypmst_fk">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageroles.stactyp\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <div *ngIf="!tblplaceholder">\r\n                                            <span *ngIf="coursedata.stakeholdertype == 1">{{\'addroles.opaladmi\' | translate}}</span>\r\n                                           \r\n                                            <span *ngIf="coursedata.stakeholdertype == 2 &&  (coursedata.rm_projectmst_fk != 4 && coursedata.rm_projectmst_fk != 5)">{{\'addroles.trainevcen\' | translate}}</span>\r\n                                            <span *ngIf="coursedata.stakeholdertype == 2 && (coursedata.rm_projectmst_fk == 4 || coursedata.rm_projectmst_fk == 5)">{{\'addroles.technicalevcen\' | translate}}</span>\r\n                                        </div>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="pm_projectname_en">\r\n                                    <mat-header-cell fxFlex="330px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageroles.proj\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="330px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span\r\n                                            *ngIf="!tblplaceholder">{{((coursedata.projectname_en)?(coursedata.projectname_en):\'-\')}}\r\n                                        </span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="rm_rolename_en">\r\n                                    <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>Role</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{ifarabic == true ? coursedata.rolename_ar ?\r\n                                            coursedata.rolename_ar : "-" : coursedata.rolename_en ?\r\n                                            coursedata.rolename_en : "-" || "-"}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="higherRole">\r\n                                    <mat-header-cell fxFlex="160px" mat-header-cell\r\n                                        *matHeaderCellDef>{{\'manageroles.highrol\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{ifarabic == true ? coursedata.higherrole_ar ?\r\n                                            coursedata.higherrole_ar : "-" : coursedata.higherrole_en ?\r\n                                            coursedata.higherrole_en : "-" || "-"}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="rm_status">\r\n                                    <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageroles.stat\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="{{\'batch.branchname\' |\r\n                                    translate}}" fxFlex="160px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <div *ngIf="!tblplaceholder">\r\n                                            <p *ngIf="coursedata.status == 1" class="print flexaligntag">\r\n                                                {{\'manageroles.activ\' | translate}}</p>\r\n                                            <p *ngIf="coursedata.status == 2" class="declined flexaligntag">\r\n                                                {{\'manageroles.inact\' | translate}}</p>\r\n                                        </div>\r\n\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="rm_createdon">\r\n                                    <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageroles.addon\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.addedOn}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="rm_updatedon">\r\n                                    <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageroles.lastadon\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.updatedOn || "-"}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="action" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" mat-header-cell\r\n                                        *matHeaderCellDef>{{\'manageroles.actio\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="100px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">\r\n                                            <button mat-icon-button\r\n                                                [matMenuTriggerFor]="menu"><mat-icon>more_horiz</mat-icon></button>\r\n                                            <mat-menu #menu="matMenu" class="actionmatmenu">\r\n                                                <button mat-menu-item *ngIf="rolereadaccess"\r\n                                                    (click)="viewRoleuser(coursedata,coursedata.rolemst_pk)">{{\'manageroles.view\'\r\n                                                    |\r\n                                                    translate}}</button>\r\n                                                <button mat-menu-item *ngIf="roleupdateaccess"\r\n                                                    (click)="editData(coursedata,coursedata.rolemst_pk)">Edit</button>\r\n                                                <button mat-menu-item \r\n                                                    (click)="update(coursedata.rolemst_pk, coursedata.status)"\r\n                                                    *ngIf="coursedata.status == 2 && roledeleteaccess">{{\'manageroles.acti\' |\r\n                                                    translate}}</button>\r\n                                                <button mat-menu-item \r\n                                                    (click)="update(coursedata.rolemst_pk, coursedata.status)"\r\n                                                    *ngIf="coursedata.status == 1 && roledeleteaccess">{{\'manageroles.deact\' |\r\n                                                    translate}}</button>\r\n                                            </mat-menu></span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-first">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageroles.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="stktypesearch">\r\n                                                <mat-option value="1">{{\'addroles.opaladmi\' | translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'addroles.trainevcen\' | translate}}</mat-option>\r\n                                                <mat-option value="3">{{\'addroles.technicalevcen\' | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-second">\r\n                                    <mat-header-cell fxFlex="330px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageroles.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="projectsearch">\r\n                                                <mat-option\r\n                                                    value="4">{{\'manageroles.roadworthassu\'\r\n                                                    | translate}}</mat-option>\r\n                                                <mat-option\r\n                                                    value="5">{{\'manageroles.invehmon\'\r\n                                                    | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-three">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageroles.sear\' | translate}}</mat-label>\r\n                                            <input matInput [formControl]="rolesearch">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-four">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageroles.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="highrolesearch">\r\n                                                <mat-option [value]="hiddata.rolemst_pk"\r\n                                                    *ngFor="let hiddata of higherrolefilter">\r\n                                                    {{ifarabic == true ? hiddata.hgerar : hiddata.hgeren}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-five">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageroles.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="statussearch">\r\n                                                <mat-option value="1">{{\'manageroles.activ\' | translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'manageroles.inact\' | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-six">\r\n                                    <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            \x3c!-- <mat-label>{{\'manageroles.sear\' | translate}}</mat-label> --\x3e\r\n                                            <input [max]="today" matInput [formControl]="addedonsearch"\r\n                                                (click)="addedon.open()" [matDatepicker]="addedon" readonly>\r\n                                            <mat-datepicker-toggle matSuffix [for]="addedon"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #addedon></mat-datepicker>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-seven">\r\n                                    <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            \x3c!-- <mat-label>{{\'manageroles.sear\' | translate}}</mat-label> --\x3e\r\n                                            <input matInput [formControl]="updatedonsearch" (click)="updatedon.open()"\r\n                                                [matDatepicker]="updatedon" readonly [max]="today">\r\n                                            <mat-datepicker-toggle matSuffix [for]="updatedon"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #updatedon></mat-datepicker>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-eight" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <i class="fa fa-refresh m-l-15 cursorview"\r\n                                            (click)="roleclearFilter();rolefiltersts=false;" aria-hidden="true"\r\n                                            matTooltip="{{\'table.refresh\' |translate}}"></i>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <tr mat-header-row id="headerrowcells" *matHeaderRowDef="userrecordcolumn"></tr>\r\n                                <mat-header-row id="searchrow"\r\n                                    *matHeaderRowDef="[\'row-first\',\'row-second\',\'row-three\' ,\'row-four\',\'row-five\',\'row-six\',\'row-seven\',\'row-eight\']">\r\n                                </mat-header-row>\r\n                                <tr mat-row *matRowDef="let element; columns: userrecordcolumn;"\r\n                                    class="example-element-row">\r\n                                </tr>\r\n                                <ng-container matColumnDef="disclaimer">\r\n                                    <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                        <div class="nofound" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                            <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                <img src="assets/images/opalimages/norecord.svg" alt="norecord">\r\n                                                <p class="m-t-10 txt-gry3 fs-16">{{\'common.noreco\' | translate}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container>\r\n                                    <mat-footer-row [class.stickyclass]="(resultsLength > 0) ? \'none\' : \'block\'"\r\n                                        [style.display]="(resultsLength > 0) ? \'none\' : \'block\' "\r\n                                        *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                    </mat-footer-row>\r\n                                </ng-container>\r\n                            </mat-table>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                    class="masterPage masterbottom " showFirstLastButtons\r\n                                    [pageSize]="paginator?.pageSize" (page)="syncPrimaryPaginator($event);"\r\n                                    [pageIndex]="paginator?.pageIndex" [length]="paginator?.length"\r\n                                    [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                                </mat-paginator>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form *ngIf="showrolegrid" [formGroup]="addroleform">\r\n                    <div>\r\n                        <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.stactyp\' | translate}}</mat-label>\r\n                                    <mat-select [errorStateMatcher]="matcher" required formControlName="stkholdertype"\r\n                                        [disabled]="viewRoleUserdis || nonEditPart"\r\n                                        (selectionChange)="selectedStktype(addrolform.stkholdertype.value)">\r\n                                        <mat-option [value]="1">{{\'addroles.opaladmi\' | translate}}</mat-option>\r\n                                        <mat-option [value]="2">{{\'addroles.trainevcen\' | translate}}</mat-option>\r\n                                        <mat-option [value]="3">{{\'addroles.techevcen\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf="addrolform.stkholdertype.errors?.required">Select the Stakeholder\r\n                                        Type from the drop-down</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <input type="hidden" value="" formControlName="rolerelpk">\r\n                            <div *ngIf="showevaltech" fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0"\r\n                                ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.technicalevcen\' | translate}}</mat-label>\r\n                                    <mat-select [errorStateMatcher]="matcher" required formControlName="techeval"\r\n                                        [disabled]="viewRoleUserdis">\r\n                                        <mat-option *ngFor="let rol of role_project" [value]="rol.projectmst_pk">\r\n                                            {{ifarabic == true ? rol.pm_projectname_ar : rol.pm_projectname_en}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf="addrolform.techeval.errors?.required">{{\'addroles.seltechevalcen\'\r\n                                        |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf="showrole" fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.role\' | translate}} </mat-label>\r\n                                    <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                                        [disabled]="viewRoleUserdis" maxlength="100" matInput\r\n                                        app-restrict-input="english" required\r\n                                        (keyup)="checkByRole(addrolform.arrole.value,\'arrole\')"\r\n                                        formControlName="arrole">\r\n                                    <mat-error *ngIf="addrolform.arrole.errors?.required">Enter the Role </mat-error>\r\n                                    <mat-error *ngIf="addrolform.arrole.errors?.alreadyavailable">\r\n                                        The Role already available</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                                ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                                <mat-form-field appearance="outline" class=" arabiclanguage">\r\n                                    <mat-label>{{\'addroles.rolearbic\' | translate}}</mat-label>\r\n                                    <input (keydown.enter)="$event.preventDefault()" app-restrict-input="arabic"\r\n                                        [disabled]="viewRoleUserdis" maxlength="100" [errorStateMatcher]="matcher"\r\n                                        matInput required (keyup)="checkByRole(addrolform.rolearbic.value,\'rolearbic\')"\r\n                                        formControlName="rolearbic">\r\n                                    <mat-error *ngIf="addrolform.rolearbic.errors?.required">Enter the Role\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf="addrolform.rolearbic.errors?.alreadyavailable">\r\n                                        The Role already available\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        \x3c!-- <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                            <div *ngIf="!add_btn" fxFlex.gt-sm="50" fxFlex="100">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.highrols\' | translate}}</mat-label>\r\n                                    <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                                        matInput required formControlName="arrolehighupdate">\r\n                                    <mat-icon matSuffix matTooltip="Lorem Ipsum is dummy text">info_outline</mat-icon>\r\n                                    <mat-error *ngIf="addrolform.arrolehigh.errors?.required">{{\'addroles.selhighrol\' |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div> --\x3e\r\n                        <div *ngIf="showhighrole" fxLayout="row wrap" class="p-t-15"\r\n                            fxLayoutAlign="space-between center">\r\n                            <div fxFlex.gt-sm="50" fxFlex="100">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.highrols\' | translate}}</mat-label>\r\n                                    <mat-select panelClass="select_with_option" multiple [disableOptionCentering]="true" id="actsector"\r\n                                    [errorStateMatcher]="matcher" (closed)="searchModule = \'\';"  formControlName="arrolehigh"\r\n                                   >\r\n                                   <mat-select-trigger>\r\n                                    {{addroleform.controls[\'arrolehigh\'].value ? highrollist :\r\n                                    \'\'}}\r\n                                    <span *ngIf="addroleform.controls[\'arrolehigh\'].value?.length > 1"\r\n                                        class="example-additional-selection">\r\n                                        (+{{addroleform.controls[\'arrolehigh\'].value.length - 1}}\r\n                                        {{addroleform.controls[\'arrolehigh\'].value?.length === 2 ?\r\n                                        \'other\' : \'others\'}})\r\n                                    </span>\r\n                                </mat-select-trigger>\r\n                                    <mat-select-search class="example-additional-selection" panelClass="mat-select-search-inner"\r\n                                      [formControl]="highFilter" [placeholderLabel]="\'Search\'"\r\n                                      [noEntriesFoundLabel]="\'No Result Found\'">\r\n                                    </mat-select-search>\r\n                                    <div class="option-listing">\r\n                                      <mat-option *ngFor="let highrole of filterhighrole | async"\r\n                                      [value]="highrole.rolemst_pk">\r\n                                      {{ifarabic == true ? highrole.rm_rolename_ar : highrole.rm_rolename_en}}\r\n                                  </mat-option>\r\n                                      \r\n                                    </div>\r\n                                  </mat-select>\r\n                                    \x3c!-- <mat-select multiple panelClass="select_with_search"\r\n                                        *ngIf="(highrolelist | multisearchinput : searchhighrole : [\'rm_rolename_en\']) as inst_stateresult"\r\n                                        [disabled]="viewRoleUserdis" [errorStateMatcher]="matcher"\r\n                                        [disableOptionCentering]="true" required formControlName="arrolehigh">\r\n                                        <mat-select-trigger>\r\n                                            {{addroleform.controls[\'arrolehigh\'].value ? highrollist :\r\n                                            \'\'}}\r\n                                            <span *ngIf="addroleform.controls[\'arrolehigh\'].value?.length > 1"\r\n                                                class="example-additional-selection">\r\n                                                (+{{addroleform.controls[\'arrolehigh\'].value.length - 1}}\r\n                                                {{addroleform.controls[\'arrolehigh\'].value?.length === 2 ?\r\n                                                \'other\' : \'others\'}})\r\n                                            </span>\r\n                                        </mat-select-trigger>\r\n                                        <div class="searchinmultiselect">\r\n                                            <mat-icon class="">search</mat-icon>\r\n                                            <input (keydown.enter)="$event.preventDefault()" name="searchhighrole"\r\n                                                appAlphanumsymb matInput class="searchselect" type="Search"\r\n                                                placeholder="{{\'supplierreg.sear\' | translate}} "\r\n                                                (keydown)="$event.stopPropagation();" [(ngModel)]="searchhighrole"\r\n                                                [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                            <mat-icon (click)="searchhighrole = \'\'" class="reseticon cursor-pointer"\r\n                                                matSuffix\r\n                                                *ngIf="searchhighrole !=\'\' && searchhighrole !=null">clear</mat-icon>\r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                            <mat-option\r\n                                                *ngFor="let highrole of highrolelist | multisearchinput : searchhighrole : [\'rm_rolename_en\']"\r\n                                                [value]="highrole.rolemst_pk">\r\n                                                {{ifarabic == true ? highrole.rm_rolename_ar : highrole.rm_rolename_en}}\r\n                                            </mat-option>\r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                            <div *ngIf="inst_stateresult.length == 0">\r\n                                                {{\'addroles.nofoun\' | translate}}</div>\r\n                                        </div>\r\n                                    </mat-select> --\x3e\r\n                                    <mat-icon *ngIf="moduleicon" matSuffix\r\n                                        matTooltip="{{\'addroles.highrolisseleformana\' | translate}}">info_outline</mat-icon>\r\n                                    <mat-error *ngIf="addrolform.arrolehigh.errors?.required">{{\'addroles.selecthehigh\'\r\n                                        | translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div *ngIf="userroleallocation">\r\n                            <div fxLayout="row wrap" class="p-t-15">\r\n                                <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter" *ngIf="!moduleaccess">\r\n                                    <h5 class="m-t-5 m-b-5">{{\'addroles.assignmod\' | translate}}</h5> <mat-icon\r\n                                        matSuffix class="m-0 m-l-5"\r\n                                        matTooltip="{{\'addroles.seletherols\' | translate}}">info_outline</mat-icon>\r\n                                </div>\r\n\r\n                                <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter" *ngIf="moduleaccess">\r\n                                    <h5 class="m-t-5 m-b-5">{{\'addroles.assignmoded\' | translate}}</h5> <mat-icon\r\n                                        matSuffix *ngIf="moduleicon" class="m-0 m-l-5"\r\n                                        matTooltip="{{\'addroles.seletherols\' | translate}}">info_outline</mat-icon>\r\n                                </div>\r\n                            </div>\r\n                            <app-userallocation [onlyview]="2" #addUpdateAccess (userPermData)="userPermData($event)"\r\n                                [currentUserPk]="currentUserPk" *ngIf="!viewRoleUserdis"\r\n                                [stkpk]="stkpk"></app-userallocation>\r\n\r\n                            <app-userallocation [onlyview]="1" #addUpdateAccess (userPermData)="userPermData($event)"\r\n                                [currentUserPk]="currentUserPk" *ngIf="viewRoleUserdis"\r\n                                [stkpk]="stkpk"></app-userallocation>\r\n                            <div fxLayout="row wrap" class="m-t-30" fxLayoutAlign="end">\r\n                                <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-end center">\r\n                                    <button mat-raised-button *ngIf="!viewBackBackbutton" type="button"\r\n                                        color="secondary" class="filterbtn m-r-10 height-45"\r\n                                        (click)="gotobackgrid();scrollTo(\'pagescroll\')">{{\'addroles.canc\' |\r\n                                        translate}}</button>\r\n                                    <button *ngIf="viewBackBackbutton" mat-raised-button type="button" color="secondary"\r\n                                        class="filterbtn m-r-10 height-45" (click)="gotobackgrid();">{{\'addroles.clos\' |\r\n                                        translate}}</button>\r\n                                    <button mat-raised-button *ngIf="add_btn && !viewBackBackbutton"\r\n                                        [class.disabledsubmit]="isFormroleValid" type="button"\r\n                                        (click)="addrolesave();scrollTo(\'addrolesnew\')" color="primary"\r\n                                        class="addbtn height-45">{{\'addroles.subm\' | translate}}</button>\r\n                                    <button mat-raised-button [class.disabledsubmit]="isFormroleValid"\r\n                                        *ngIf="!add_btn &&!viewBackBackbutton" type="button"\r\n                                        (click)="addrolesave();scrollTo(\'addrolesnew\')" color="primary"\r\n                                        class="addbtn height-45">{{\'addroles.updat\' | translate}}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            \x3c!-- users --\x3e\r\n            <div id="manageusers" *ngIf="refname == 2 && userreadaccess" class="example-form">\r\n                <div *ngIf="hideusergrid" class="paginationwithfilter masterPageTop ">\r\n                    <mat-paginator class="masterPage masterPageTop" #paginator [length]="resultsLength" [pageSize]="10"\r\n                        [pageSizeOptions]="[5, 10, 25, 100]" (page)="syncPrimaryPaginator($event);"></mat-paginator>\r\n                    <div fxLayout="row wrap" fxLayoutAlign="end">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-start center">\r\n                            <button mat-raised-button type="button" color="secondary" *ngIf="usercreateaccess" (click)="evenuseradddata();"\r\n                                class="addbtn m-r-10 height-45">{{\'manageusers.add\' | translate}}</button>\r\n                            <button mat-raised-button type="button" color="primary" (click)="clickEvent();"\r\n                                class="filter height-45">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7"\r\n                                    aria-hidden="true"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf="hideusergrid" fxLayout="row wrap">\r\n                    <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                        <div class="awaredtable">\r\n                            <mat-table #table class="scrolldata" [dataSource]="Usersrecord"\r\n                                matSortActive="opalusermst_pk" matSortDirection="desc" multiTemplateDataRows matSort\r\n                                matSortDisableClear>\r\n                                <ng-container matColumnDef="omrm_stkholdertypmst_fk">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.staholtyp\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">\r\n                                            <span *ngIf="coursedata.stakeholdertype == 1">{{\'addroles.opaladmi\' |\r\n                                                translate}}</span>\r\n                                            <span *ngIf="coursedata.stakeholdertype == 2 && (coursedata.omrm_intendforregistration == 1 )">{{\'addroles.trainevcen\' |\r\n                                                translate}}</span>\r\n                                            <span *ngIf="coursedata.stakeholdertype == 2  && (coursedata.omrm_intendforregistration == 2)">{{\'addroles.technicalevcen\' |\r\n                                                translate}}</span>\r\n                                            <span *ngIf="coursedata.stakeholdertype == 2  && (coursedata.omrm_intendforregistration == 3)">{{\'Training And Technical Evaluaiton Centre\' |\r\n                                                translate}}</span>\r\n                                            </span>\r\n                                        \x3c!-- <span *ngIf="coursedata.stakeholdertype == 2 && coursedata.rm_projectmst_fk != null">{{\'addroles.technicalevcen\' | translate}}</span> --\x3e\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="omrm_companyname_en">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>Company Name</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.omrm_companyname_en}} </span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_idnumber">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.civino\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.civilNo}} </span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_firstname">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>Staff Name</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.stafName}} </span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_emailid">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.emaiid\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder"> {{coursedata.emailid}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_mobno">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.mobnum\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span\r\n                                            *ngIf="!tblplaceholder">{{coursedata.mobilno?coursedata.mobilno:\'-\'}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_isfocalpoint">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>Focal Point</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.isfocalpoint}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="rm_rolename_en">\r\n                                    <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.roles\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder"> {{(ifarabic == true ) ?\r\n                                            (coursedata.oum_isfocalpoint ==1?"-":coursedata.roleName_ar)?\r\n                                            (coursedata.oum_isfocalpoint ==1?"-":coursedata.roleName_ar) : "-" :\r\n                                            (coursedata.oum_isfocalpoint ==1?"-":coursedata.roleName_en) ?\r\n                                            (coursedata.oum_isfocalpoint ==1?"-":coursedata.roleName_en) : "-" ||\r\n                                            "-"}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_isthirdpartyagent">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.thirdparagen\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.isthirdPartyAgent}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_status">\r\n                                    <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.stat\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="{{\'batch.branchname\' |translate}}" fxFlex="160px"\r\n                                        *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <div *ngIf="!tblplaceholder">\r\n                                            <p *ngIf="coursedata.status == \'A\'" class="print flexaligntag">\r\n                                                {{\'manageusers.activ\' | translate}}</p>\r\n                                            <p *ngIf="coursedata.status == \'I\'" class="declined flexaligntag">\r\n                                                {{\'manageusers.inactiv\' | translate}}</p>\r\n                                            <p *ngIf="coursedata.status == \'E\'" class="pending flexaligntag">\r\n                                                {{\'manageusers.emaiconfpen\' | translate}}</p>\r\n                                            <p *ngIf="coursedata.status == \'D\'" class="red flexaligntag">\r\n                                                {{\'manageusers.deact\' | translate}}</p>\r\n                                        </div>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_createdon">\r\n                                    <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.addon\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.addedOn}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_updatedon">\r\n                                    <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.lasupdaon\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder"> {{coursedata.lastUpdateOn || "-"}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="action" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" mat-header-cell\r\n                                        *matHeaderCellDef>{{\'manageusers.actio\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="100px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <div *ngIf="!tblplaceholder">\r\n                                            <button mat-icon-button\r\n                                                [matMenuTriggerFor]="menu"><mat-icon class="txt-gry">more_horiz</mat-icon></button>\r\n                                            <mat-menu #menu="matMenu" class="actionmatmenu">\r\n                                                <button mat-menu-item *ngIf="userreadaccess"\r\n                                                    (click)="viewRoleuser(coursedata,coursedata.opalusermst_pk)">{{\'manageusers.view\'\r\n                                                    |\r\n                                                    translate}}</button>\r\n                                                <button mat-menu-item\r\n                                                    *ngIf="(coursedata.stakeholdertype == 1)&&(coursedata.oum_isfocalpoint!=1) && userupdateaccess"\r\n                                                    (click)="edituserData(coursedata)">{{\'manageusers.edit\' |\r\n                                                    translate}}</button>\r\n                                                <button\r\n                                                    *ngIf="((coursedata.status == \'I\')&&(coursedata.oum_isfocalpoint!=1)) && userdeleteaccess"\r\n                                                    (click)="update(coursedata.opalusermst_pk,coursedata.status)"\r\n                                                    mat-menu-item>{{\'manageroles.acti\' | translate}}</button>\r\n                                                <button\r\n                                                    *ngIf="(coursedata.status == \'A\')&&(coursedata.oum_isfocalpoint!=1) && userdeleteaccess"\r\n                                                    (click)="update(coursedata.opalusermst_pk,coursedata.status)"\r\n                                                    mat-menu-item>{{\'manageroles.deact\' | translate}} </button>\r\n                                            </mat-menu>\r\n                                        </div>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-first">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="stakeholdertype">\r\n                                                <mat-option [value]="1">{{\'addroles.opaladmi\' | translate}}</mat-option>\r\n                                                <mat-option [value]="2">{{\'addroles.trainevcen\' |\r\n                                                    translate}}</mat-option>\r\n                                                <mat-option [value]="3">{{\'addroles.techevcen\' | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-second-one">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="companynm" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-second">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="civilNo" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-three">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="stafName" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-four">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="emailid" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-five">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="mobilno" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-six">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="focal_point">\r\n                                                <mat-option value="1">{{\'addroles.yes\' | translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'addroles.no\' | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-seven">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.sear\' | translate}}</mat-label>\r\n                                            <input matInput [formControl]="roleName_en">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell> </ng-container>\r\n                                <ng-container matColumnDef="row-eight">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="isthirdPartyAgent">\r\n                                                <mat-option value="1">{{\'addroles.yes\' | translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'addroles.no\' | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-nine">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="status">\r\n                                                <mat-option value="A">{{\'manageusers.activ\' | translate}}</mat-option>\r\n                                                <mat-option value="I">{{\'manageusers.inactiv\' | translate}}</mat-option>\r\n                                                <mat-option value="E">{{\'manageusers.emaiconfpen\' |\r\n                                                    translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-ten">\r\n                                    <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            \x3c!-- <mat-label>{{\'manageroles.sear\' | translate}}</mat-label> --\x3e\r\n                                            <input matInput [max]="today" [formControl]="addedOn"\r\n                                                (click)="addedon.open()" [matDatepicker]="addedon" readonly>\r\n                                            <mat-datepicker-toggle matSuffix [for]="addedon"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #addedon></mat-datepicker>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-eleven">\r\n                                    <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            \x3c!-- <mat-label>{{\'manageroles.sear\' | translate}}</mat-label> --\x3e\r\n                                            <input matInput [max]="today" [formControl]="lastUpdateOn"\r\n                                                (click)="updatedon.open()" [matDatepicker]="updatedon" readonly>\r\n                                            <mat-datepicker-toggle matSuffix [for]="updatedon"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #updatedon></mat-datepicker>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-twelve" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <i class="fa fa-refresh m-l-15 cursorview"\r\n                                            (click)="userclearFilter();userfiltersts=false;" aria-hidden="true"\r\n                                            matTooltip="{{\'table.refresh\' |translate}}"></i>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <tr mat-header-row id="headerrowcells" *matHeaderRowDef="rolesrecordcolumn"></tr>\r\n                                <mat-header-row id="searchrow"\r\n                                *matHeaderRowDef="[\'row-first\',\'row-second-one\',\'row-second\',\'row-three\',\'row-four\',\'row-five\',\'row-six\',\'row-seven\',\'row-eight\',\'row-nine\',\'row-ten\',\'row-eleven\' ,\'row-twelve\']">\r\n                                </mat-header-row>\r\n                                <tr mat-row *matRowDef="let element; columns: rolesrecordcolumn;"\r\n                                    class="example-element-row">\r\n                                </tr>\r\n                                <ng-container matColumnDef="disclaimer">\r\n                                    <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                        <div class="nofound" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                            <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                <img src="assets/images/opalimages/norecord.svg" alt="norecord">\r\n                                                <p class="m-t-10 txt-gry3 fs-16">{{\'common.noreco\' | translate}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container>\r\n                                    <mat-footer-row [class.stickyclass]="(resultsLength > 0) ? \'none\' : \'block\'"\r\n                                        [style.display]="(resultsLength > 0) ? \'none\' : \'block\' "\r\n                                        *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                    </mat-footer-row>\r\n                                </ng-container>\r\n                            </mat-table>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                    class="masterPage masterbottom " showFirstLastButtons\r\n                                    [pageSize]="paginator?.pageSize" (page)="syncPrimaryPaginator($event);"\r\n                                    [pageIndex]="paginator?.pageIndex" [length]="paginator?.length"\r\n                                    [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                                </mat-paginator>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form *ngIf="usergrid" class="example-form" [formGroup]="adduserroleform">\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <input type="hidden" value="" formControlName="opalusermstpk">\r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addroles.stactyp\' | translate}}</mat-label>\r\n                                <mat-select (selectionChange)="selectedStktypeuser(adduserform.stkholdertypeuser.value)"\r\n                                    [disabled]="viewUserdis || nonEditPart" [errorStateMatcher]="matcher" required\r\n                                    formControlName="stkholdertypeuser">\r\n                                    <mat-option [value]="1">{{\'addroles.opaladmi\' | translate}}</mat-option>\r\n                                    <mat-option [value]="2">{{\'addroles.trainevcen\' | translate}}</mat-option>\r\n                                    <mat-option [value]="3">{{\'addroles.techevcen\' | translate}}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error\r\n                                    *ngIf="adduserform.stkholdertypeuser.errors?.required">{{\'addroles.selethestak\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div *ngIf="showevaltechuser" fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0"\r\n                                ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.technicalevcen\' | translate}}</mat-label>\r\n                                    <mat-select [errorStateMatcher]="matcher" required formControlName="techevaluser"\r\n                                    (selectionChange)="selectCentrelist($event.value)"  [disabled]="viewRoleUserdis">\r\n                                        <mat-option *ngFor="let rol of role_project" [value]="rol.projectmst_pk">\r\n                                            {{ifarabic == true ? rol.pm_projectname_ar : rol.pm_projectname_en}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf="addrolform.techeval.errors?.required">{{\'addroles.seltechevalcen\'\r\n                                        |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                    </div>\r\n                    <div *ngIf="centredatashow && !focalPoint" fxLayout="row wrap" class="p-t-15"\r\n                        fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addroles.centrenam\' | translate}}</mat-label>\r\n                                <mat-select (selectionChange)="selectciviliddata(adduserform.centrename.value)"\r\n                                    [disabled]="viewUserdis"\r\n                                    *ngIf="(centre_array | filter : searchcentrename) as goverresult"\r\n                                    panelClass="select_with_search" [disableOptionCentering]="true"\r\n                                    [errorStateMatcher]="matcher" required formControlName="centrename">\r\n                                    <div class="searchinmultiselect">\r\n                                        <mat-icon class="">search</mat-icon>\r\n                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                            class="searchselect" type="Search"\r\n                                            placeholder="{{\'supplierreg.sear\' | translate}}"\r\n                                            (keydown)="$event.stopPropagation();" [(ngModel)]="searchcentrename"\r\n                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                        <mat-icon (click)="searchcentrename = \'\'" class="reseticon" matSuffix\r\n                                            *ngIf="searchcentrename !=\'\' && searchcentrename !=null">clear</mat-icon>\r\n                                    </div>\r\n                                    <div class="option-listing countryselectwithimage">\r\n                                        <mat-option *ngFor="let centre of centre_array | filter : searchcentrename"\r\n                                            [value]="centre.opalmemberregmst_pk">\r\n                                            {{ifarabic == true ? centre.omrm_tpname_ar : centre.omrm_tpname_en}}\r\n                                        </mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                                <mat-error *ngIf="adduserform.centrename.errors?.required">{{\'addroles.selecentnam\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div *ngIf="centredatashowtech && !focalPoint" fxLayout="row wrap" class="p-t-15"\r\n                        fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addroles.centrenam\' | translate}}</mat-label>\r\n                                <mat-select (selectionChange)="selectciviliddata(adduserform.centrename.value)"\r\n                                    [disabled]="viewUserdis"\r\n                                    *ngIf="(centre_array_tech | filter : searchcentrename) as goverresult"\r\n                                    panelClass="select_with_search" [disableOptionCentering]="true"\r\n                                    [errorStateMatcher]="matcher" required formControlName="centrename">\r\n                                    <div class="searchinmultiselect">\r\n                                        <mat-icon class="">search</mat-icon>\r\n                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                            class="searchselect" type="Search" \r\n                                            placeholder="{{\'supplierreg.sear\' | translate}}"\r\n                                            (keydown)="$event.stopPropagation();" [(ngModel)]="searchcentrename"\r\n                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                        <mat-icon (click)="searchcentrename = \'\'" class="reseticon" matSuffix\r\n                                            *ngIf="searchcentrename !=\'\' && searchcentrename !=null">clear</mat-icon>\r\n                                    </div>\r\n                                    <div class="option-listing countryselectwithimage">\r\n                                        <mat-option *ngFor="let centre of centre_array_tech | filter : searchcentrename"\r\n                                            [value]="centre.opalmemberregmst_pk">\r\n                                            {{ifarabic == true ? centre.omrm_branch_ar : centre.omrm_branch_en}}\r\n                                        </mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                                <mat-error *ngIf="adduserform.centrename.errors?.required">{{\'addroles.selecentnam\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div *ngIf="(centredatashow ||centredatashowtech)  && focalPoint" fxLayout="row wrap" class="p-t-15"\r\n                        fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addroles.centrenam\' | translate}}</mat-label>\r\n                                <input matInput [required]="requiredtag" formControlName="centrename"\r\n                                    [disabled]="viewUserdis">\r\n                                <mat-error *ngIf="adduserform.centrename.errors?.required">{{\'addroles.selecentnam\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \x3c!-- <div *ngIf="centredatashow && !add_btn" fxLayout="row wrap" class="p-t-15"\r\n                        fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label>Centre Name</mat-label> --\x3e\r\n                    \x3c!-- <mat-select    (selectionChange)="selectciviliddata(adduserform.centrename.value)"  *ngIf="(centre_array | filter : searchcentrename) as goverresult" panelClass="select_with_search" [disableOptionCentering]="true"\r\n                            [errorStateMatcher]="matcher" required formControlName="centrename">\r\n                            <div class="searchinmultiselect">\r\n                                <mat-icon class="">search</mat-icon>\r\n                                <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                    class="searchselect" type="Search" placeholder="Search"\r\n                                    (keydown)="$event.stopPropagation();" [(ngModel)]="searchcentrename"\r\n                                    [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                <mat-icon (click)="searchcentrename = \'\'" class="reseticon" matSuffix\r\n                                    *ngIf="searchcentrename !=\'\' && searchcentrename !=null">clear</mat-icon>\r\n                            </div>\r\n                             <div class="option-listing countryselectwithimage">\r\n                                <mat-option *ngFor="let centre of centre_array | filter : searchcentrename"\r\n                                [value]="centre.opalmemberregmst_pk">{{centre.omrm_branch_en}}</mat-option>\r\n                            </div>\r\n                            </mat-select> --\x3e\r\n                    \x3c!-- <input matInput required formControlName="centreupdate"> --\x3e\r\n                    \x3c!-- <mat-error *ngIf="adduserform.centrename.errors?.required">Select centre name</mat-error> --\x3e\r\n                    \x3c!-- </mat-form-field>\r\n                        </div>\r\n                    </div> --\x3e\r\n                    <div *ngIf="opaladmindatashow">\r\n                        <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                            \x3c!-- <div fxFlex.gt-sm="50" *ngIf="centredatashow" fxFlex="100" ngClass.xs="p-l-0"\r\n                                ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                                ngClass.sm="m-0"> --\x3e\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" *ngIf="(centredatashow || centredatashowtech) && !focalPoint"\r\n                                class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addusers.stafnam\' | translate}} </mat-label>\r\n                                    <mat-select panelClass="select_with_search" [errorStateMatcher]="matcher"\r\n                                        [disabled]="viewUserdis" [disableOptionCentering]="true"\r\n                                        *ngIf="(staffslist | filter : searchsfaffname) as goverresult"\r\n                                        (selectionChange)="selectcivilid(adduserform.stafnamecentre.value)" required\r\n                                        formControlName="stafnamecentre">\r\n                                        <div class="searchinmultiselect">\r\n                                            <mat-icon class="">search</mat-icon>\r\n                                            <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                                class="searchselect" type="Search"\r\n                                                placeholder="{{\'supplierreg.sear\' | translate}}"\r\n                                                (keydown)="$event.stopPropagation();" [(ngModel)]="searchsfaffname"\r\n                                                [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                            <mat-icon (click)="searchsfaffname = \'\'" class="reseticon" matSuffix\r\n                                                *ngIf="searchsfaffname !=\'\' && searchsfaffname !=null">clear</mat-icon>\r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                            <mat-option *ngFor="let staff of staffslist | filter : searchsfaffname"\r\n                                                value={{staff.staffinforepo_pk}}>{{staff.sir_name_en}}\r\n                                            </mat-option>\r\n                                            <div *ngIf="goverresult.length == 0">{{\'addroles.nofoun\' | translate}}</div>\r\n                                        </div>\r\n\r\n                                    </mat-select>\r\n                                    <mat-error\r\n                                        *ngIf="adduserform.stafnamecentre.errors?.required">{{\'addroles.entstafnam\' |\r\n                                        translate}}</mat-error>\r\n                                    \x3c!-- <mat-error *ngIf="adduserform.stafnamecentre.errors?.alreadyavailable">\r\n                                            Email already available</mat-error> --\x3e\r\n                                </mat-form-field>\r\n                            </div>\r\n                            \x3c!-- staff name fatching only --\x3e\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" *ngIf="(centredatashow || centredatashowtech) && focalPoint"\r\n                                class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addusers.stafnam\' | translate}} </mat-label>\r\n                                    <input matInput formControlName="stafnamecentre" [disabled]="viewUserdis">\r\n                                    <mat-error\r\n                                        *ngIf="adduserform.stafnamecentre.errors?.required">{{\'addusers.entsatsnam\' |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            \x3c!-- staff name  for input  --\x3e\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" *ngIf="opaladmincentreshow" class="paddingspacing"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addusers.stafnam\' | translate}} </mat-label>\r\n                                    <input matInput [required]="requiredtag" maxlength="100" formControlName="stafName"\r\n                                        [disabled]="viewUserdis || nonEditPart">\r\n                                    <mat-error *ngIf="adduserform.stafName.errors?.required">\r\n                                        {{\'addroles.entstafnam\' | translate}} </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div *ngIf="!focalPoint" fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0"\r\n                                ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                    class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addusers.civino\' | translate}}</mat-label>\r\n                                    <input matInput [required]="requiredtag" [readonly]="updated"\r\n                                        [disabled]="viewUserdis || nonEditPart" [maxLength]="20"\r\n                                        formControlName="civilno"\r\n                                        (change)="checkBycivilIdOrEmail(adduserform.civilno.value,\'civilno\')">\r\n                                    <mat-error *ngIf="adduserform.civilno.errors?.required">{{\'addroles.entcivinum\' |\r\n                                        translate}}</mat-error>\r\n                                    <mat-error\r\n                                        *ngIf="adduserform.civilno.errors?.alreadyavailable">{{\'addroles.civinumalree\' |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            \x3c!-- <div fxFlex.gt-sm="50" *ngIf="centredatashow && !add_btn" fxFlex="100" ngClass.xs="p-l-0"\r\n                                ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addusers.stafnam\' | translate}} </mat-label>\r\n                                    <input matInput required formControlName="stafnameupdate">\r\n\r\n                                </mat-form-field>\r\n                            </div> --\x3e\r\n                        </div>\r\n                        <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'" appearance="outline">\r\n                                    <mat-label>{{\'addusers.emaiid\' | translate}}</mat-label>\r\n                                    <input [readonly]="updated" matInput [required]="requiredtag"\r\n                                        [disabled]="viewUserdis"\r\n                                        pattern="[a-z-A-Z0-9.-_]{1,}@[a-z-A-Z]{2,}[.]{1}[a-z-A-Z-_]{2,}"\r\n                                        formControlName="emailid"\r\n                                        (change)="checkBycivilIdOrEmail(adduserform.emailid.value,\'emailid\')"\r\n                                        app-restrict-input="firstspace">\r\n                                    <mat-error *ngIf="adduserform.emailid.errors?.required">{{\'addusers.entemaiid\' |\r\n                                        translate}}</mat-error>\r\n                                    <mat-error\r\n                                        *ngIf="adduserroleform.get(\'emailid\').hasError(\'pattern\')">{{\'addusers.entevaliemai\'\r\n                                        | translate}}</mat-error>\r\n                                    <mat-error *ngIf="adduserform.emailid.errors?.alreadyavailable">\r\n                                        {{\'addroles.emailidalred\' | translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                                ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                                <mat-form-field class="numberandcode" [ngClass]="(updated == true) ?  (adduserform.mobilenumber.value != \'NULL\') ? \'autofectlist\' :\'mobautofectlist\' : \' \'"\r\n                                    appearance="outline">\r\n                                    <mat-label>{{\'addusers.mobnum\' | translate}}</mat-label>\r\n                                    \x3c!-- <span ngClass.xs="p-r-0" ngClass.sm="p-r-0" class="p-r-5">{{countrycode}}</span> --\x3e\r\n                                    <input matInput [required]="requiredtag" [disabled]="viewUserdis"\r\n                                        formControlName="mobilenumber" [maxLength]="12" numbersOnly>\r\n                                    <mat-error *ngIf="adduserform.mobilenumber.errors?.required">{{\'addroles.entmobnum\'\r\n                                        | translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                            <div fxFlex.gt-sm="50" *ngIf="opaladmincentreshow" fxFlex="100" class="paddingspacing"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addusers.roles\' | translate}}</mat-label>\r\n                                        <mat-select panelClass="select_with_option" [disabled]="viewUserdis" multiple [disableOptionCentering]="true" id="actsector"\r\n                                          [errorStateMatcher]="matcher" (closed)="searchModule = \'\';"  formControlName="arroles"\r\n                                          (selectionChange)="fetchByRole($event,adduserform.stkholdertypeuser.value)">\r\n                                          <mat-select-trigger>\r\n                                            {{adduserroleform.controls[\'arroles\'].value ? rollist :\r\n                                            \'\'}}\r\n                                            <span *ngIf="adduserroleform.controls[\'arroles\'].value?.length > 1"\r\n                                                class="example-additional-selection">\r\n                                                (+{{adduserroleform.controls[\'arroles\'].value.length - 1}}\r\n                                                {{adduserroleform.controls[\'arroles\'].value?.length === 2 ?\r\n                                                \'other\' : \'others\'}})\r\n                                            </span>\r\n                                        </mat-select-trigger>\r\n                                          <mat-select-search class="example-additional-selection" panelClass="mat-select-search-inner"\r\n                                            [formControl]="moduleFilter" [placeholderLabel]="\'Search\'"\r\n                                            [noEntriesFoundLabel]="\'No Result Found\'">\r\n                                          </mat-select-search>\r\n                                          <div class="option-listing">\r\n                                            <mat-option *ngFor="let role of filteredmoduleData | async"\r\n                                            [value]="role.rolemst_pk">\r\n                                            {{ifarabic == true ? role.rm_rolename_ar : role.rm_rolename_en}}\r\n                                        </mat-option>\r\n                                            \x3c!-- <mat-option \r\n                                              *ngFor="let modData of filteredmoduleData  | async" [value]="modData.modulePk">{{modData.moduleName}}\r\n                                            </mat-option> --\x3e\r\n                                          </div>\r\n                                        </mat-select>\r\n                                    \x3c!-- <mat-select panelClass="select_with_search" multiple [errorStateMatcher]="matcher"\r\n                                         [disableOptionCentering]="true"\r\n                                        formControlName="arroles"\r\n                                        (selectionChange)=""\r\n                                        *ngIf="(role_mstlist | filter : searchrole) as goverresult" required>\r\n                                        \r\n                                        <div class="searchinmultiselect">\r\n                                            <mat-icon class="">search</mat-icon>\r\n                                            <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                                class="searchselect" type="Search"\r\n                                                placeholder="{{\'supplierreg.sear\' | translate}}"\r\n                                                (keydown)="$event.stopPropagation();" [(ngModel)]="searchrole"\r\n                                                [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                            <mat-icon (click)="searchrole = \'\'" class="reseticon cursor-pointer"\r\n                                                matSuffix *ngIf="searchrole !=\'\' && searchrole !=null">clear</mat-icon>\r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                           \r\n                                        </div>\r\n                                        <div class="option-listing countryselectwithimage">\r\n                                            <div *ngIf="goverresult.length == 0">\r\n                                                {{\'addroles.nofoun\' | translate}}</div>\r\n                                        </div>\r\n                                    </mat-select> --\x3e\r\n                                    <mat-error *ngIf="adduserform.arroles.errors?.required">{{\'addroles.selerolfromth\' |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n                            \x3c!-- <div fxFlex.gt-sm="50" *ngIf="opaladmincentreshow && !add_btn" fxFlex="100"\r\n                                class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.role\' | translate}}</mat-label>\r\n                                    <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                                        matInput app-restrict-input="english" required="{{requiredtag}}"\r\n                                        formControlName="arrolescentre">\r\n                                    <mat-error *ngIf="adduserform.arrolescentre.errors?.required">{{\'addusers.selrol\' |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n\r\n                            </div> --\x3e\r\n                            <div fxFlex.gt-sm="50" *ngIf="(centredatashow || centredatashowtech)" fxFlex="100" class="paddingspacing">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'" appearance="outline">\r\n                                    <mat-label>{{\'addusers.roles\' | translate}}</mat-label>\r\n                                    <input [readonly]="updated" (keydown.enter)="$event.preventDefault()"\r\n                                        [disabled]="viewUserdis" [errorStateMatcher]="matcher" matInput\r\n                                        app-restrict-input="english" [required]="requiredtag"\r\n                                        formControlName="rolecentre">\r\n                                    <mat-error *ngIf="adduserform.rolecentre.errors?.required">{{\'addusers.selrol\' |\r\n                                        translate}}</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div *ngIf="thirdaprtyshowopal" fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0"\r\n                                ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field appearance="outline">\r\n                                    <mat-label>{{\'addusers.isthidpart\' | translate}} </mat-label>\r\n                                    <input [errorStateMatcher]="matcher" matInput [disabled]="viewUserdis"\r\n                                        appAlphabetonly readonly required>\r\n                                    <span matSuffix>{{\'addroles.no\' | translate}}\r\n                                        <mat-slide-toggle [(ngModel)]="toggledata"\r\n                                            formControlName="slider">{{\'addroles.yes\' | translate}}</mat-slide-toggle>\r\n                                    </span>\r\n                                    <mat-error *ngIf="adduserform.slider.errors?.required">\r\n                                        {{\'addroles.selewheyou\' | translate}} </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \x3c!-- class="onlyviewallocate" --\x3e\r\n                    <div *ngIf="userroleallocation">\r\n                        <div fxLayout="row wrap" class="p-t-15">\r\n                            \x3c!-- <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter" *ngIf="!moduleaccess">\r\n                                {{\'addroles.assignmod\' | translate}} \r\n                            </div> --\x3e\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter">\r\n                                <h5 class="m-t-5 m-b-5">{{\'addroles.assignmoded\' | translate}} </h5>\r\n                            </div>\r\n                        </div>\r\n                        <app-userallocation [onlyview]="1" #addUpdateAccess (userPermData)="userPermData($event)"\r\n                            [currentUserPk]="currentUserPk" *ngIf="!viewUserdis" [stkpk]="stkpk"></app-userallocation>\r\n                        <app-userallocation [onlyview]="1" #addUpdateAccess (userPermData)="userPermData($event)"\r\n                            [currentUserPk]="currentUserPk" *ngIf="viewUserdis" [stkpk]="stkpk"></app-userallocation>\r\n                        \x3c!--permission access table--\x3e\r\n                        \x3c!--permission access table--\x3e\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter"  *ngIf="opaladminshowapproval">\r\n                                <h5 class="m-t-5 m-b-5">{{\'Allocated Access to Certification Approval\' | translate}}</h5>\r\n                          </div>\r\n                        <div fxFlex.gt-sm="50" *ngIf="opaladminshowapproval" fxFlex="100" class="paddingspacing"\r\n                            ngClass.sm="m-0">\r\n                         \r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label *ngIf="!viewUserdis">{{\'Select Certification Type\' | translate}}</mat-label>\r\n                                <mat-select panelClass="select_with_option" multiple [errorStateMatcher]="matcher"\r\n                                     [disableOptionCentering]="true"\r\n                                    formControlName="arproject"  (selectionChange)="showcourse(adduserform.arproject.value)"\r\n                                    *ngIf="(cert_typelist | filter : searchrole) as goverresult" [required]="this.certificationmanditory">\r\n                                    <mat-select-trigger>\r\n                                        {{adduserroleform.controls[\'arproject\'].value ? projist :\r\n                                        \'\'}}\r\n                                        <span *ngIf="adduserroleform.controls[\'arproject\'].value?.length > 1"\r\n                                            class="example-additional-selection">\r\n                                            (+{{adduserroleform.controls[\'arproject\'].value.length - 1}}\r\n                                            {{adduserroleform.controls[\'arproject\'].value?.length === 2 ?\r\n                                            \'other\' : \'others\'}})\r\n                                        </span>\r\n                                    </mat-select-trigger>\r\n                                    <div class="searchinmultiselect">\r\n                                        <mat-icon class="">search</mat-icon>\r\n                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                            class="searchselect" type="Search"\r\n                                            placeholder="{{\'supplierreg.sear\' | translate}}"\r\n                                            (keydown)="$event.stopPropagation();" [(ngModel)]="searchrole"\r\n                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                        <mat-icon (click)="searchrole = \'\'" class="reseticon cursor-pointer"\r\n                                            matSuffix *ngIf="searchrole !=\'\' && searchrole !=null">clear</mat-icon>\r\n                                    </div>\r\n                                    <div class="option-listing countryselectwithimage">\r\n                                        <mat-option *ngFor="let project of cert_typelist | filter : searchrole" [disabled]="viewUserdis"\r\n                                            [value]="project.projectmst_pk">\r\n                                            {{ifarabic == true ? project.pm_certificationname_ar : project.pm_certificationname_en}}\r\n                                        </mat-option>\r\n                                    </div>\r\n                                    <div class="option-listing countryselectwithimage">\r\n                                        <div *ngIf="goverresult.length == 0">\r\n                                            {{\'addroles.nofoun\' | translate}}</div>\r\n                                    </div>\r\n                                </mat-select>\r\n                                <mat-error *ngIf="adduserform.arproject.errors?.required">Select the Certification Type from the drop-down</mat-error>\r\n                            </mat-form-field>\r\n\r\n                        </div>\r\n                    \r\n                        <div *ngIf="showstandardcourse" fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0"\r\n                            ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                            ngClass.sm="m-0">\r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label *ngIf="!viewUserdis">{{\'Select Standard Course\' | translate }}</mat-label>\r\n                                <mat-select panelClass="select_with_option" multiple [errorStateMatcher]="matcher"\r\n                                    [disableOptionCentering]="true" #selectbox\r\n                                    formControlName="arcourse"\r\n                                    *ngIf="(standard_list | filter : searchrole) as goverresult"  [required]="this.coursemanditory">\r\n                                    <mat-select-trigger>\r\n                                        {{adduserroleform.controls[\'arcourse\'].value ? courseist :\r\n                                        \'\'}}\r\n                                        <span *ngIf="adduserroleform.controls[\'arcourse\'].value?.length > 1"\r\n                                            class="example-additional-selection">\r\n                                            (+{{adduserroleform.controls[\'arcourse\'].value.length - 1}}\r\n                                            {{adduserroleform.controls[\'arcourse\'].value?.length === 2 ?\r\n                                            \'other\' : \'others\'}})\r\n                                        </span>\r\n                                    </mat-select-trigger>\r\n                                    <div class="searchinmultiselect">\r\n                                        <mat-icon class="">search</mat-icon>\r\n                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                            class="searchselect" type="Search"\r\n                                            placeholder="{{\'supplierreg.sear\' | translate}}"\r\n                                            (keydown)="$event.stopPropagation();" [(ngModel)]="searchrole"\r\n                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                        <mat-icon (click)="searchrole = \'\'" class="reseticon cursor-pointer"\r\n                                            matSuffix *ngIf="searchrole !=\'\' && searchrole !=null">clear</mat-icon>\r\n                                    </div>\r\n                                    <div class="option-listing countryselectwithimage">\r\n                                        <mat-checkbox *ngIf="goverresult.length != 0" [(ngModel)]="allSelected" class="mat_box m-l-16"\r\n                                        [ngModelOptions]="{standalone: true}" [disabled]="viewUserdis"\r\n                                        (change)="toggleAllSelection()">{{\'Select All\' | translate }}</mat-checkbox>\r\n                                        <mat-option *ngFor="let course of standard_list | filter : searchrole" [disabled]="viewUserdis"\r\n                                            [value]="course.standardcoursemst_pk" (click)="optionClick()">\r\n                                            {{ifarabic == true ? course.scm_coursename_ar : course.scm_coursename_en}}\r\n                                        </mat-option>\r\n                                    </div>\r\n                                    <div class="option-listing countryselectwithimage">\r\n                                        <div *ngIf="goverresult.length == 0">\r\n                                            {{\'addroles.nofoun\' | translate}}</div>\r\n                                    </div>\r\n                                </mat-select>\r\n                                <mat-error *ngIf="adduserform.arcourse.errors?.required">Select the Standard Course from the drop-down</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center"\r\n                            *ngIf="viewUserdis">\r\n                            <div *ngIf="focalPoint" fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                    class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.userna\' | translate}}</mat-label>\r\n                                    <input [readonly]="updated" matInput [disabled]="viewUserdis"\r\n                                        formControlName="username">\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div *ngIf="!focalPoint" fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing"\r\n                                ngClass.sm="m-0">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                    class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.pass\' | translate}}</mat-label>\r\n                                    <input [readonly]="updated" matInput [disabled]="viewUserdis"\r\n                                        formControlName="password">\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div *ngIf="focalPoint"  fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0"\r\n                            ngClass.sm="p-l-0" ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30"\r\n                            ngClass.sm="m-0">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                    class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.pass\' | translate}}</mat-label>\r\n                                    <input [readonly]="updated" matInput [disabled]="viewUserdis"\r\n                                        formControlName="password">\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout="row wrap" class="m-t-30" fxLayoutAlign="end">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-end center">\r\n                                <button mat-raised-button *ngIf="!viewBackBackbutton" type="button" color="secondary"\r\n                                    class="filterbtn m-r-10 height-45" (click)="gotouserbackgrid();">{{\'addroles.canc\' |\r\n                                    translate}}</button>\r\n                                <button mat-raised-button *ngIf="viewBackBackbutton" type="button" color="secondary"\r\n                                    class="filterbtn m-r-10 height-45" (click)="gotouserbackgrid();">Close</button>\r\n                                <button *ngIf="add_btn && !viewBackBackbutton" mat-raised-button\r\n                                    [disabled]="isFormValid" [class.disabledsubmit]="isFormValid" type="button"\r\n                                    (click)="adduserdatasave();scrollTo(\'addrolesnew\')" color="primary"\r\n                                    class="addbtn height-45">{{\'addroles.subm\' |\r\n                                    translate}}</button>\r\n                                <button *ngIf="!add_btn && !viewBackBackbutton" mat-raised-button\r\n                                    [class.disabledsubmit]="isFormValid" [disabled]="isFormValidss" type="button"\r\n                                    (click)="adduserdatasave()" color="primary" class="addbtn height-45">{{\'addroles.updat\' | translate}}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n            \x3c!-- ===== --\x3e\r\n            <div id="manageusers" *ngIf="refname == 3 && userreadaccess" class="example-form">\r\n                <div *ngIf="hidecentregrid" class="paginationwithfilter masterPageTop ">\r\n                    <mat-paginator class="masterPage masterPageTop" #paginator [length]="resultsLength" [pageSize]="10"\r\n                        [pageSizeOptions]="[5, 10, 25, 100]" (page)="syncPrimaryPaginator($event);"></mat-paginator>\r\n                    <div fxLayout="row wrap" fxLayoutAlign="end">\r\n                        <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-start center">\r\n                            <button mat-raised-button type="button" color="secondary" *ngIf="usercreateaccess" (click)="evenusercentredata();"\r\n                                class="addbtn m-r-10 height-45">{{\'manageusers.add\' | translate}}</button>\r\n                            <button mat-raised-button type="button" color="primary" (click)="clickEvent();"\r\n                                class="filter height-45">{{filtername}}<i class="opalicon opal-filter fs-15 m-l-7"\r\n                                    aria-hidden="true"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf="hidecentregrid" fxLayout="row wrap">\r\n                    <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                        <div class="awaredtable">\r\n                            <mat-table #table class="scrolldata" [dataSource]="Usersrecord"\r\n                                matSortActive="opalusermst_pk" matSortDirection="desc" multiTemplateDataRows matSort\r\n                                matSortDisableClear>\r\n                                <ng-container matColumnDef="oum_idnumber">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.civino\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        {{coursedata.civilNo}}\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_firstname">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'addroles.stafnam\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.stafName}} </span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_emailid">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.emaiid\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.emailid}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_mobno">\r\n                                    <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.mobnum\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span\r\n                                            *ngIf="!tblplaceholder">{{coursedata.mobilno?coursedata.mobilno:\'-\'}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="role">\r\n                                    <mat-header-cell fxFlex="160px" mat-header-cell\r\n                                        *matHeaderCellDef>{{\'manageusers.role\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{ifarabic == true ? coursedata.roleName_ar ?\r\n                                            coursedata.roleName_ar : "-" : coursedata.roleName_en ?\r\n                                            coursedata.roleName_en : "-" || "-"}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_status">\r\n                                    <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.stat\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="{{\'batch.branchname\' |translate}}" fxFlex="160px"\r\n                                        *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <div *ngIf="!tblplaceholder">\r\n                                            <p *ngIf="coursedata.status == \'A\'" class="print flexaligntag">\r\n                                                {{\'manageusers.activ\' | translate}}</p>\r\n                                            <p *ngIf="coursedata.status == \'I\'" class="declined flexaligntag">\r\n                                                {{\'manageusers.inactiv\' | translate}}</p>\r\n                                            <p *ngIf="coursedata.status == \'E\'" class="pending flexaligntag">\r\n                                                {{\'manageusers.emaiconfpen\' | translate}}</p>\r\n                                            <p *ngIf="coursedata.status == \'D\'" class="red flexaligntag">\r\n                                                {{\'manageusers.deact\' | translate}}</p>\r\n                                        </div>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_createdon">\r\n                                    <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.addon\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.addedOn}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="oum_updatedon">\r\n                                    <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.lasupdaon\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <span *ngIf="!tblplaceholder">{{coursedata.lastUpdateOn}}</span>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="action" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" mat-header-cell *matHeaderCellDef\r\n                                        mat-sort-header>{{\'manageusers.actio\' | translate}}</mat-header-cell>\r\n                                    <mat-cell data-label="Batch Type" fxFlex="100px" *matCellDef="let coursedata">\r\n                                        <div *ngIf="tblplaceholder" class="w-100">\r\n                                            <div class="tabledataloader"></div>\r\n                                        </div>\r\n                                        <div *ngIf="!tblplaceholder">\r\n                                            <button mat-icon-button\r\n                                                [matMenuTriggerFor]="menu"><mat-icon class="txt-gry">more_horiz</mat-icon></button>\r\n                                            <mat-menu #menu="matMenu" class="actionmatmenu">\r\n                                                <button mat-menu-item\r\n                                                    (click)="viewRoleuser(coursedata,coursedata.opalusermst_pk)">{{\'manageusers.view\'\r\n                                                    |\r\n                                                    translate}}</button>\r\n                                                \x3c!-- <button mat-menu-item\r\n                                                (click)="editcentreData(coursedata)">{{\'manageusers.edit\' |\r\n                                                translate}}</button> --\x3e\r\n                                                \x3c!-- <button *ngIf="coursedata.status == \'I\'"\r\n                                                    (click)="update(coursedata.opalusermst_pk,coursedata.status)"\r\n                                                    mat-menu-item>{{\'manageroles.acti\' | translate}}</button>\r\n                                                <button *ngIf="coursedata.status == \'A\'"\r\n                                                    (click)="update(coursedata.opalusermst_pk,coursedata.status)"\r\n                                                    mat-menu-item>{{\'manageroles.deact\' | translate}} </button> --\x3e\r\n                                            </mat-menu>\r\n                                        </div>\r\n                                    </mat-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-one">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="civilNo" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-two">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="stafName" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-three">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="emailid" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-four">\r\n                                    <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [formControl]="mobilno" matInput>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-five">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input matInput [formControl]="roleName_en">\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-six">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="status">\r\n                                                <mat-option value="A">{{\'manageusers.activ\' | translate}}</mat-option>\r\n                                                <mat-option value="I">{{\'manageusers.inactiv\' | translate}}</mat-option>\r\n                                                <mat-option value="E">{{\'manageusers.emaiconfpen\' |\r\n                                                    translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                \x3c!-- <ng-container matColumnDef="row-seven">\r\n                                    <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                            <mat-select [formControl]="addedOn">\r\n                                                <mat-option value="1">{{\'manageusers.activ\' | translate}}</mat-option>\r\n                                                <mat-option value="2">{{\'manageusers.inactiv\' | translate}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container> --\x3e\r\n                                <ng-container matColumnDef="row-seven">\r\n                                    <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [max]="today" matInput [formControl]="addedOn"\r\n                                                (click)="addedon.open()" [matDatepicker]="addedon" readonly>\r\n                                            <mat-datepicker-toggle matSuffix [for]="addedon"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #addedon></mat-datepicker>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-eight">\r\n                                    <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <mat-form-field class="filter" appearance="outline">\r\n                                            <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                            <input [max]="today" matInput [formControl]="lastUpdateOn"\r\n                                                (click)="addedon.open()" [matDatepicker]="addedon" readonly>\r\n                                            <mat-datepicker-toggle matSuffix [for]="addedon"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #addedon></mat-datepicker>\r\n                                        </mat-form-field>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef="row-nine" stickyEnd>\r\n                                    <mat-header-cell fxFlex="100px" class="serachrow" *matHeaderCellDef\r\n                                        style="text-align:center">\r\n                                        <i class="fa fa-refresh m-l-15 cursorview"\r\n                                            (click)="centreclearFilter();centrefiltersts=false;" aria-hidden="true"\r\n                                            matTooltip="{{\'table.refresh\' |translate}}"></i>\r\n                                    </mat-header-cell>\r\n                                </ng-container>\r\n                                <tr mat-header-row id="headerrowcells" *matHeaderRowDef="centerrecordcolumn"></tr>\r\n                                <mat-header-row id="searchrow"\r\n                                    *matHeaderRowDef="[\'row-one\',\'row-two\',\'row-three\',\'row-four\',\'row-five\',\'row-six\',\'row-seven\',\'row-eight\',\'row-nine\']">\r\n                                </mat-header-row>\r\n                                <tr mat-row *matRowDef="let element; columns: centerrecordcolumn;"\r\n                                    class="example-element-row">\r\n                                </tr>\r\n                                <ng-container matColumnDef="disclaimer">\r\n                                    <td mat-footer-cell *matFooterCellDef colspan="11">\r\n                                        <div class="nofound" fxLayoutAlign="center" fxFlex.gt-sm="100" fxFlex="100">\r\n                                            <div fxFlex="100" fxLayout="column" fxLayoutAlign="center center">\r\n                                                <img src="assets/images/opalimages/norecord.svg" alt="norecord">\r\n                                                <p class="m-t-10 txt-gry3 fs-16">{{\'common.noreco\' | translate}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container>\r\n                                    <mat-footer-row [class.stickyclass]="(resultsLength > 0) ? \'none\' : \'block\'"\r\n                                        [style.display]="(resultsLength > 0) ? \'none\' : \'block\' "\r\n                                        *matFooterRowDef="[\'disclaimer\']" style="justify-content: center">\r\n                                    </mat-footer-row>\r\n                                </ng-container>\r\n                            </mat-table>\r\n                        </div>\r\n                        <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                                <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                                    class="masterPage masterbottom " showFirstLastButtons\r\n                                    [pageSize]="paginator?.pageSize" (page)="syncPrimaryPaginator($event);"\r\n                                    [pageIndex]="paginator?.pageIndex" [length]="paginator?.length"\r\n                                    [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                                </mat-paginator>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form id="manageusers" *ngIf="centregrid" class="example-form" [formGroup]="centreform">\r\n\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" ngClass.sm="m-0">\r\n                            <input type="hidden" value="" formControlName="opalusermstpk">\r\n                            <mat-form-field class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addusers.stafnam\' | translate}} </mat-label>\r\n                                <mat-select panelClass="select_with_search" [errorStateMatcher]="matcher"\r\n                                    [disabled]="viewCenterUserdis" [disableOptionCentering]="true"\r\n                                    *ngIf="(staffslistcentre | filter : searchsfaffnamecentre) as goverresult"\r\n                                    (selectionChange)="selectcivilidcentre(cntreform.staffsnamecentre.value);" required\r\n                                    formControlName="staffsnamecentre">\r\n                                    <div class="searchinmultiselect">\r\n                                        <mat-icon class="">search</mat-icon>\r\n                                        <input (keydown.enter)="$event.preventDefault()" appAlphanumsymb matInput\r\n                                            class="searchselect" type="Search"\r\n                                            placeholder="{{\'supplierreg.sear\' | translate}}"\r\n                                            (keydown)="$event.stopPropagation();" [(ngModel)]="searchsfaffnamecentre"\r\n                                            [ngModelOptions]="{standalone: true}" autocomplete="off">\r\n                                        <mat-icon (click)="searchsfaffnamecentre = \'\'" class="reseticon" matSuffix\r\n                                            *ngIf="searchsfaffnamecentre !=\'\' && searchsfaffnamecentre !=null">clear</mat-icon>\r\n                                    </div>\r\n                                    <div class="option-listing countryselectwithimage">\r\n                                        <mat-option\r\n                                            *ngFor="let staflist of staffslistcentre | filter : searchsfaffnamecentre"\r\n                                            value={{staflist.staffinforepo_pk}}> {{staflist.sir_name_en}}</mat-option>\r\n                                        <div *ngIf="goverresult.length == 0">{{\'addroles.nofoun\' | translate}}</div>\r\n                                    </div>\r\n\r\n                                </mat-select>\r\n                                <mat-error *ngIf="cntreform.staffsnamecentre.errors?.required">{{\'addroles.entstafnam\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                            ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                            <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addusers.civino\' | translate}}</mat-label>\r\n                                <input [readonly]="updated" matInput formControlName="civilnocentre"\r\n                                    [disabled]="viewCenterUserdis">\r\n                                <mat-error *ngIf="cntreform.civilnocentre.errors?.required">{{\'addroles.entcivinum\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addusers.emaiid\' | translate}}</mat-label>\r\n                                <input [readonly]="updated" matInput [disabled]="viewCenterUserdis"\r\n                                    pattern="[a-zA-Z0-9]{1,}@[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,}"\r\n                                    formControlName="emailidcentre">\r\n                                <mat-error *ngIf="cntreform.emailidcentre.errors?.required">{{\'addroles.entemaiid\' |\r\n                                    translate}}</mat-error>\r\n                                <mat-error\r\n                                    *ngIf="centreform.get(\'emailidcentre\').hasError(\'pattern\')">{{\'addusers.entevaliemai\'\r\n                                    | translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0" ngClass.md="p-l-30"\r\n                            ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                            <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'" class="numberandcode"\r\n                                appearance="outline">\r\n                                <mat-label>{{\'addusers.mobnum\' | translate}}</mat-label>\r\n                                <span ngClass.xs="p-r-0" ngClass.sm="p-r-0" class="p-r-5">{{countrycode}}</span>\r\n                                <input  matInput formControlName="mobilenumbercentre"\r\n                                    [disabled]="viewCenterUserdis" [maxLength]="12" numbersOnly>\r\n                                <mat-error\r\n                                    *ngIf="cntreform.mobilenumbercentre.errors?.required">{{\'addroles.entthemobnum\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                        <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                            <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                class="example-full-width" appearance="outline">\r\n                                <mat-label>{{\'addusers.roles\' | translate}}</mat-label>\r\n                                <input [readonly]="updated" (keydown.enter)="$event.preventDefault()"\r\n                                    [disabled]="viewCenterUserdis" [errorStateMatcher]="matcher" matInput\r\n                                    app-restrict-input="english" formControlName="rolescentre">\r\n                                <mat-error *ngIf="cntreform.rolescentre.errors?.required">{{\'addusers.selrol\' |\r\n                                    translate}}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    \x3c!-- class="onlyviewallocate" --\x3e\r\n                    <div>\r\n                        <div fxLayout="row wrap" class="p-t-15">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter">\r\n                                <h5 class="m-t-5 m-b-5">{{\'addroles.assignmod\' | translate}} </h5>\r\n                            </div> \r\n                        </div>\r\n                        \x3c!--permission access table--\x3e\r\n                        <app-userallocation [onlyview]="1" #addUpdateAccess\r\n                            (userviewBackBackbuttonPermData)="userPermData($event)" [currentUserPk]="currentUserPk"\r\n                            *ngIf="!viewCenterUserdis" [stkpk]="stkpk"></app-userallocation>\r\n                        <app-userallocation [onlyview]="1" #addUpdateAccess\r\n                            (userviewBackBackbuttonPermData)="userPermData($event)" [currentUserPk]="currentUserPk"\r\n                            *ngIf="viewCenterUserdis" [stkpk]="stkpk"></app-userallocation>\r\n                        \x3c!-- <app-userallocation  #addUpdateAccess (userPermData)="userPermData($event)"\r\n                            [currentUserPk]="currentUserPk" *ngIf="viewUserdis" [stkpk]="stkpk"></app-userallocation> --\x3e\r\n                        \x3c!--permission access table--\x3e\r\n                        <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center"\r\n                            *ngIf="viewCenterUserdis">\r\n                            \x3c!-- <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                    class="example-full-width" appearance="outline">\r\n                                    <mat-label>User Name</mat-label>\r\n                                    <input [readonly]="updated" matInput [disabled]="viewCenterUserdis"\r\n                                        formControlName="Username">\r\n                                </mat-form-field>\r\n                            </div> --\x3e\r\n                            <div fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                                ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                                <mat-form-field [ngClass]="updated == true ? \'autofectlist\' : \' \'"\r\n                                    class="example-full-width" appearance="outline">\r\n                                    <mat-label>{{\'addroles.pass\' | translate}}</mat-label>\r\n                                    <input [readonly]="updated" matInput [disabled]="viewCenterUserdis"\r\n                                        formControlName="password">\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout="row wrap" class="m-t-30" fxLayoutAlign="end">\r\n                            <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-end center">\r\n                                <button *ngIf="!viewBackBackbutton" mat-raised-button type="button" color="secondary"\r\n                                    class="filterbtn m-r-10 height-45" (click)="gotocentrebackgrid();">{{\'addroles.canc\'\r\n                                    | translate}}</button>\r\n                                <button *ngIf="viewBackBackbutton" mat-raised-button type="button" color="secondary"\r\n                                    class="filterbtn m-r-10 height-45" (click)="gotocentrebackgrid();">{{\'addroles.clos\'\r\n                                    | translate}}</button>\r\n                                <button *ngIf="add_btn && !viewBackBackbutton"\r\n                                    (click)="addcentredatasave();scrollTo(\'addrolesnew\')" mat-raised-button\r\n                                    [disabled]="!centreform.valid" [class.disabledsubmit]="!centreform.valid"\r\n                                    type="button" color="primary" class="addbtn height-45">{{\'addroles.subm\' |\r\n                                    translate}}</button>\r\n                                <button *ngIf="!add_btn && !viewBackBackbutton" (click)="addcentredatasave();"\r\n                                    mat-raised-button [disabled]="!centreform.valid"\r\n                                    [class.disabledsubmit]="!centreform.valid" type="button" color="primary"\r\n                                    class="addbtn height-45">{{\'addroles.updat\' | translate}}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n            \x3c!-- ===== --\x3e\r\n        </div>\r\n    </div>\r\n</div>'},rQ2U:function(e,a,t){"use strict";t.r(a),a.default='<div fxLayout="row wrap">\r\n    <div fxFlex.gt-sm="100" fxFlex="100" id="addusers">\r\n        <div fxFlex.gt-sm="100" fxFlex="100" class="addusersnew">\r\n                <form class="example-form" [formGroup]="adduserroleform" (ngSubmit)="adduserdatasave()">\r\n            <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                <div fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                    <mat-form-field class="example-full-width" appearance="outline">\r\n                        <mat-label>{{\'addroles.stactyp\' | translate}}</mat-label>\r\n                        <mat-select (selectionChange)="selectedStktype(addrolform.stkholdertype.value)" [errorStateMatcher]="matcher" required\r\n                            formControlName="stkholdertype" >\r\n                            <mat-option [value]="1">{{\'addroles.opaladmi\' | translate}}</mat-option>\r\n                            <mat-option [value]="2">{{\'addroles.trainevcen\' | translate}}</mat-option>\r\n                            <mat-option [value]="3">{{\'addroles.techevcen\' | translate}}</mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf="addrolform.stkholdertype.errors?.required">{{\'addroles.selstatyp\' | translate}}</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div *ngIf="centredatashow" fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                <div fxFlex.gt-sm="100" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                    <mat-form-field class="example-full-width" appearance="outline">\r\n                        <mat-label>Centre Name</mat-label>\r\n                        <mat-select [errorStateMatcher]="matcher" required\r\n                            formControlName="centrename" >\r\n                            <mat-option [value]="1">{{\'addroles.unitnatindus\' | translate}}</mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf="addrolform.centrename.errors?.required">{{\'addroles.selecentname\' | translate}}</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div *ngIf="opaladmindatashow">\r\n                <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                    <div  fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                        <mat-form-field class="example-full-width" appearance="outline">\r\n                            <mat-label>{{\'addusers.civino\' | translate}}</mat-label>\r\n                            <input matInput required formControlName="civilno">\r\n                            <mat-error *ngIf="addrolform.civilno.errors?.required">{{\'addusers.entcivino\' | translate}}</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div  fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                    ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                    <mat-form-field class="example-full-width" appearance="outline">\r\n                        <mat-label>{{\'addusers.stafnam\' | translate}} </mat-label>\r\n                        <input matInput required formControlName="stafname">\r\n                        <mat-error *ngIf="addrolform.stafname.errors?.required">{{\'addusers.entsatsnam\' | translate}}</mat-error>\r\n                    </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                    <div  fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                        <mat-form-field class="example-full-width" appearance="outline">\r\n                            <mat-label>{{\'addusers.emaiid\' | translate}}</mat-label>\r\n                            <input matInput required formControlName="emailid">\r\n                            <mat-error *ngIf="addrolform.emailid.errors?.required">{{\'addusers.entemaiid\' | translate}}</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div  fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                    ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                    <mat-form-field class="example-full-width" appearance="outline">\r\n                        <mat-label>{{\'addusers.mobnum\' | translate}}</mat-label>\r\n                        <input matInput required formControlName="mobilenumber" [maxLength]="12" numbersOnly>\r\n                        <mat-error *ngIf="addrolform.mobilenumber.errors?.required">{{\'addusers.selrol\' | translate}}</mat-error>\r\n                    </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div fxLayout="row wrap" class="p-t-15" fxLayoutAlign="space-between center">\r\n                    <div  fxFlex.gt-sm="50" fxFlex="100" class="paddingspacing" ngClass.sm="m-0">\r\n                        <mat-form-field class="example-full-width" appearance="outline">\r\n                            <mat-label>{{\'addroles.role\' | translate}}</mat-label>\r\n                            <mat-select [errorStateMatcher]="matcher" required\r\n                                formControlName="arrole">\r\n                                <mat-option [value]="1">{{\'addroles.audi\' | translate}}</mat-option>\r\n                                <mat-option [value]="2">{{\'addroles.ceo\' | translate}}</mat-option>\r\n                                <mat-option [value]="3">{{\'addroles.asses\' | translate}}</mat-option>\r\n                                <mat-option [value]="4">{{\'addroles.fina\' | translate}}</mat-option>\r\n                                <mat-option [value]="5">{{\'addroles.authr\' | translate}}</mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf="addrolform.arrole.errors?.required">{{\'addusers.selrol\' | translate}}</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div *ngIf="thirdaprtyshowopal"  fxFlex.gt-sm="50" fxFlex="100" ngClass.xs="p-l-0" ngClass.sm="p-l-0"\r\n                    ngClass.md="p-l-30" ngClass.lg="p-l-30" ngClass.xl="p-l-30" ngClass.sm="m-0">\r\n                    <mat-form-field appearance="outline">\r\n                        <mat-label>{{\'addusers.isthidpart\' | translate}} </mat-label>\r\n                        <input (keydown.enter)="$event.preventDefault()" [errorStateMatcher]="matcher"\r\n                            matInput appAlphabetonly readonly required>\r\n                        <span matSuffix>{{\'addroles.no\' | translate}} <mat-slide-toggle required\r\n                                formControlName="slider">{{\'addroles.yes\' | translate}}</mat-slide-toggle></span>\r\n                        \x3c!-- <mat-error *ngIf="addrolform.thirdpartyagent.errors?.required">\r\n                            {{\'addusers.choosthurpart\' | translate}} </mat-error> --\x3e\r\n                    </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          \r\n            <div fxLayout="row wrap" class="p-t-15">\r\n                <div fxFlex.gt-sm="100" fxFlex="100" class="aligncenter">\r\n                    {{\'addroles.assignmod\' | translate}} <span class="m-l-5 infoicon" matTooltip="Lorem Ipsum is the dummy text"><mat-icon>info_outline</mat-icon></span>\r\n                </div>\r\n            </div>\r\n\r\n            \x3c!--permission access table--\x3e\r\n            <div fxLayout="row wrap" class="p-t-15">\r\n                <div fxFlex.gt-sm="100" fxFlex="100" class="permissiontable">\r\n                    <table mat-table\r\n                    [dataSource]="dataSource" multiTemplateDataRows\r\n                    class="mat-elevation-z8">\r\n                        <ng-container matColumnDef="name">\r\n                            <th mat-header-cell *matHeaderCellDef> \r\n                                {{\'addroles.modulnam\' | translate}} \r\n                            </th>\r\n                            <td mat-cell *matCellDef="let element"> \r\n                                    <label class="checkcontainer">\r\n                                        <input type="checkbox">\r\n                                        <span class="checkmark"></span>\r\n                                    </label> {{element.name}} \r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="create">\r\n                            <th mat-header-cell *matHeaderCellDef> \r\n                                {{\'addroles.cret\' | translate}} \r\n                            </th>\r\n                            <td mat-cell *matCellDef="let element"> \r\n                                <label class="checkcontainer">\r\n                                    <input type="checkbox">\r\n                                    <span class="checkmark"></span>\r\n                                </label> {{element.create}} \r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="update">\r\n                            <th mat-header-cell *matHeaderCellDef> \r\n                                {{\'addroles.updat\' | translate}} \r\n                            </th>\r\n                            <td mat-cell *matCellDef="let element"> \r\n                                <label class="checkcontainer">\r\n                                    <input type="checkbox">\r\n                                    <span class="checkmark"></span>\r\n                                </label>\r\n                                {{element.update}} \r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="delete">\r\n                            <th mat-header-cell *matHeaderCellDef> \r\n                                {{\'addroles.dele\' | translate}} \r\n                            </th>\r\n                            <td mat-cell *matCellDef="let element"> \r\n                                <label class="checkcontainer">\r\n                                    <input type="checkbox">\r\n                                    <span class="checkmark"></span>\r\n                                </label>\r\n                                {{element.delete}} \r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="approve">\r\n                            <th mat-header-cell *matHeaderCellDef> \r\n                                {{\'addroles.appro\' | translate}}\r\n                            </th>\r\n                            <td mat-cell *matCellDef="let element"> \r\n                                <label class="checkcontainer">\r\n                                    <input type="checkbox">\r\n                                    <span class="checkmark"></span>\r\n                                </label>\r\n                                {{element.approve}} \r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="download">\r\n                            <th mat-header-cell *matHeaderCellDef> \r\n                                {{\'addroles.downl\' | translate}} \r\n                            </th>\r\n                            <td mat-cell *matCellDef="let element"> \r\n                                <label class="checkcontainer">\r\n                                    <input type="checkbox" disabled>\r\n                                    <span class="checkmark"></span>\r\n                                </label>\r\n                                {{element.download}} \r\n                                <span \r\n                                class="example-element-row expandicon"\r\n                                [class.example-expanded-row]="expandedElement === element"\r\n                                (click)="expandedElement = expandedElement === element ? null : element"><mat-icon>{{expandedElement === element? \'remove\' : \'add\'}}</mat-icon></span>\r\n                            </td>\r\n                        </ng-container>\r\n                        \x3c!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns --\x3e\r\n                        <ng-container matColumnDef="expandedDetail">\r\n                            <td class="nopaddingtd" mat-cell *matCellDef="let element" [attr.colspan]="columnsToDisplay.length">\r\n                            <div class="example-element-detail"\r\n                                    [@detailExpand]="element == expandedElement ? \'expanded\' : \'collapsed\'">\r\n                                    <table #innerTables class="subtable" mat-table [dataSource]="element.submodule">\r\n                                            <ng-container matColumnDef="sname">\r\n                                                    <th mat-header-cell *matHeaderCellDef></th>\r\n                                                    <td mat-cell *matCellDef="let element"> <span class="p-l-30">{{element.sname}} </span></td>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="screate">\r\n                                                    <th mat-header-cell *matHeaderCellDef></th>\r\n                                                    <td mat-cell *matCellDef="let element"> \r\n                                                        <label class="checkcontainer">\r\n                                                            <input type="checkbox">\r\n                                                            <span class="checkmark"></span>\r\n                                                        </label> \r\n                                                        {{element.screate}} \r\n                                                    </td>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="supdate">\r\n                                                    <th mat-header-cell *matHeaderCellDef></th>\r\n                                                    <td mat-cell *matCellDef="let element"> \r\n                                                        <label class="checkcontainer">\r\n                                                            <input type="checkbox">\r\n                                                            <span class="checkmark"></span>\r\n                                                        </label>\r\n                                                        {{element.supdate}} \r\n                                                    </td>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="sdelete">\r\n                                                    <th mat-header-cell *matHeaderCellDef></th>\r\n                                                    <td mat-cell *matCellDef="let element"> \r\n                                                        <label class="checkcontainer">\r\n                                                            <input type="checkbox">\r\n                                                            <span class="checkmark"></span>\r\n                                                        </label>\r\n                                                        {{element.sdelete}} \r\n                                                    </td>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="sapprove">\r\n                                                    <th mat-header-cell *matHeaderCellDef></th>\r\n                                                    <td mat-cell *matCellDef="let element">\r\n                                                        <label class="checkcontainer">\r\n                                                            <input type="checkbox">\r\n                                                            <span class="checkmark"></span>\r\n                                                        </label>\r\n                                                        {{element.sapprove}}\r\n                                                     </td>\r\n                                                </ng-container>\r\n                                                <ng-container matColumnDef="sdownload">\r\n                                                    <th mat-header-cell *matHeaderCellDef></th>\r\n                                                    <td mat-cell *matCellDef="let element"> \r\n                                                        <label class="checkcontainer">\r\n                                                            <input type="checkbox">\r\n                                                            <span class="checkmark"></span>\r\n                                                        </label>\r\n                                                        {{element.sdownload}} \r\n                                                    </td>\r\n                                                </ng-container>\r\n                                        <tr mat-header-row *matHeaderRowDef="innerDisplayedColumns"></tr>\r\n                                        <tr mat-row *matRowDef="let row; columns: innerDisplayedColumns;"></tr>\r\n                                    </table>\r\n                            </div>\r\n                            </td>\r\n                        </ng-container>\r\n                        \r\n                        <tr mat-header-row *matHeaderRowDef="columnsToDisplay"></tr>\r\n                        <tr mat-row *matRowDef="let element; columns: columnsToDisplay;">\r\n                        </tr>\r\n                        <tr mat-row *matRowDef="let row; columns: [\'expandedDetail\']" class="example-detail-row"></tr>\r\n                    </table>\r\n                </div>\r\n            </div>            \r\n            \x3c!--permission access table--\x3e\r\n            <div fxLayout="row wrap" class="m-t-30" fxLayoutAlign="end">\r\n                <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-end center">\r\n                    <button mat-raised-button type="button" color="secondary"\r\n                        class="filterbtn m-r-10 height-45" (click)="gotoback();">{{\'addroles.canc\' | translate}}</button>\r\n                    <button mat-raised-button   type="submit" color="primary"\r\n                        class="addbtn height-45">{{\'addroles.subm\' | translate}}</button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n            \r\n    </div>\r\n</div>\r\n</div>'},ssP3:function(e,a,t){"use strict";t.r(a),a.default='#addusers .disabledsubmit {\n  background: #ececec !important;\n  border: 1px solid #ececec !important;\n  color: #999 !important;\n}\n#addusers .addusersnew {\n  padding: 0 30px;\n  margin-bottom: 50px;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #d9d9d9;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border-radius: 3px 0 0 3px;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border-radius: 0 3px 3px 0;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: #6ba5ec;\n  background-color: #f8f8f8;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #0c4b9a;\n  background-color: #f8f8f8;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline.mat-focused.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  color: #0c4b9a;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  background-color: #f8f8f8;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #dc4c64;\n  background-color: #f8f8f8;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\n  transform: translateY(-0.9rem) scale(0.75);\n  color: #848484;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label .mat-form-field-required-marker {\n  color: #ED1C27;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap {\n  width: 0px !important;\n}\n#addusers .addusersnew .mat-form-field-appearance-outline .mat-form-field-suffix .mat-icon {\n  color: #888;\n}\n#addusers .addusersnew .aligncenter {\n  display: flex;\n  align-items: center;\n}\n#addusers .addusersnew .aligncenter .mat-icon {\n  width: 16px;\n  height: 16px;\n  color: #666;\n  cursor: pointer;\n  font-size: 20px;\n  margin-top: 5px;\n}\n#addusers .addusersnew .permissiontable {\n  width: 100%;\n  /* Hide the browser\'s default checkbox */\n  /* Create a custom checkbox */\n  /* On mouse-over, add a grey background color */\n  /* When the checkbox is checked, add a blue background */\n  /* When the checkbox is disabled, add a blue background */\n  /* Create the checkmark/indicator (hidden when not checked) */\n  /* Show the checkmark when checked */\n  /* Style the checkmark/indicator */\n}\n#addusers .addusersnew .permissiontable table {\n  width: 100%;\n  box-shadow: none;\n}\n#addusers .addusersnew .permissiontable tr.example-detail-row {\n  height: 0;\n}\n#addusers .addusersnew .permissiontable tr.example-element-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n#addusers .addusersnew .permissiontable tr.example-element-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n#addusers .addusersnew .permissiontable .example-element-row td {\n  border-bottom-width: 0;\n}\n#addusers .addusersnew .permissiontable .example-element-detail {\n  overflow: hidden;\n  display: flex;\n}\n#addusers .addusersnew .permissiontable .example-element-diagram {\n  min-width: 80px;\n  border: 2px solid black;\n  padding: 8px;\n  font-weight: lighter;\n  margin: 8px 0;\n  height: 104px;\n}\n#addusers .addusersnew .permissiontable .example-element-symbol {\n  font-weight: bold;\n  font-size: 40px;\n  line-height: normal;\n}\n#addusers .addusersnew .permissiontable .example-element-description {\n  padding: 16px;\n}\n#addusers .addusersnew .permissiontable .example-element-description-attribution {\n  opacity: 0.5;\n}\n#addusers .addusersnew .permissiontable table th {\n  background: #eaedf2;\n  font-size: 14px;\n  color: #333;\n  font-weight: 600;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#addusers .addusersnew .permissiontable table th:first-child {\n  text-align: left;\n  min-width: 250px;\n}\n#addusers .addusersnew .permissiontable table td {\n  position: relative;\n  text-align: center;\n  min-width: 75px;\n  max-width: 75px;\n}\n#addusers .addusersnew .permissiontable table td:first-child {\n  text-align: left;\n  min-width: 250px;\n  color: #0c4b9a;\n}\n#addusers .addusersnew .permissiontable table td .expandicon {\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n}\n#addusers .addusersnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n#addusers .addusersnew .permissiontable table td .subtable tr th, #addusers .addusersnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n#addusers .addusersnew .permissiontable table td .subtable tr td {\n  position: relative;\n  text-align: center;\n  min-width: 72px;\n  max-width: 72px;\n}\n#addusers .addusersnew .permissiontable table td .subtable tr td:first-child {\n  max-width: 240px;\n  min-width: 240px;\n  text-align: left;\n  color: #333333;\n}\n#addusers .addusersnew .permissiontable .checkcontainer {\n  display: inline-block;\n  position: relative;\n  margin-bottom: 12px;\n  padding-left: 25px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n#addusers .addusersnew .permissiontable .checkcontainer input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n#addusers .addusersnew .permissiontable .checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 16px;\n  width: 16px;\n  background-color: #fff;\n  border: 1px solid #bbb;\n}\n#addusers .addusersnew .permissiontable .checkcontainer:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n#addusers .addusersnew .permissiontable .checkcontainer input:checked ~ .checkmark {\n  background-color: #0c4b9a;\n}\n#addusers .addusersnew .permissiontable .checkcontainer input:disabled ~ .checkmark {\n  background-color: #ddd;\n  cursor: no-drop;\n}\n#addusers .addusersnew .permissiontable .checkmark:after {\n  content: "";\n  position: absolute;\n  display: none;\n}\n#addusers .addusersnew .permissiontable .checkcontainer input:checked ~ .checkmark:after {\n  display: block;\n}\n#addusers .addusersnew .permissiontable .checkcontainer .checkmark:after {\n  left: 4px;\n  top: 1px;\n  width: 4px;\n  height: 7px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n#addusers .addusersnew .permissiontable .nopaddingtd {\n  padding: 0px !important;\n}\n#addusers .addusersnew .addbtn, #addusers .addusersnew .filterbtn {\n  min-width: 100px;\n}\n#addusers .addusersnew .addbtn {\n  background: #ed1c27;\n  color: #fff;\n}\n@media (max-width: 768px) {\n  #addusers .addusersnew .paddingspacing {\n    padding-right: 0px !important;\n    padding-left: 0px !important;\n  }\n  #addusers .addusersnew .permissiontable {\n    overflow: auto;\n  }\n}\n#addusers .addusersnew .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #00a551;\n}\n#addusers .addusersnew .mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: #00a55062;\n}\n[dir=rtl] #addusers .addusersnew .permissiontable table th:first-child, .rtl #addusers .addusersnew .permissiontable table th:first-child {\n  text-align: right;\n}\n[dir=rtl] #addusers .addusersnew .permissiontable table td:first-child, .rtl #addusers .addusersnew .permissiontable table td:first-child {\n  text-align: right;\n}\n[dir=rtl] #addusers .addusersnew .permissiontable table td .expandicon, .rtl #addusers .addusersnew .permissiontable table td .expandicon {\n  position: absolute;\n  left: 20px;\n  right: auto;\n  top: 50%;\n  transform: translateY(-50%);\n}\n[dir=rtl] #addusers .addusersnew .permissiontable table td .expandicon .mat-icon, .rtl #addusers .addusersnew .permissiontable table td .expandicon .mat-icon {\n  width: 18px;\n  height: 18px;\n  color: #666;\n  cursor: pointer;\n}\n[dir=rtl] #addusers .addusersnew .permissiontable table td .subtable tr th, [dir=rtl] #addusers .addusersnew .permissiontable table td .subtable thead, .rtl #addusers .addusersnew .permissiontable table td .subtable tr th, .rtl #addusers .addusersnew .permissiontable table td .subtable thead {\n  display: none !important;\n}\n[dir=rtl] #addusers .addusersnew .permissiontable table td .subtable tr td:first-child, .rtl #addusers .addusersnew .permissiontable table td .subtable tr td:first-child {\n  text-align: right;\n}\n[dir=rtl] #addusers .addusersnew .permissiontable .checkcontainer, .rtl #addusers .addusersnew .permissiontable .checkcontainer {\n  padding-right: 25px;\n  padding-left: 0px;\n}'},zaBI:function(e,a,t){"use strict";t.r(a),a.default='<div fxLayout="row wrap" fxLayoutAlign="center">\r\n    <div *ngIf="!addrolecreationpage" fxFlex.gt-sm="100" fxFlex="100" id="manageusers">\r\n        <div class="paginationwithfilter masterPageTop ">\r\n            <mat-paginator class="masterPage masterPageTop" #paginator [length]="resultsLength" [pageSize]="10"\r\n                [pageSizeOptions]="[5, 10, 25, 100]" (page)="syncPrimaryPaginator($event);"></mat-paginator>\r\n            <div fxLayout="row wrap" fxLayoutAlign="end">\r\n                <div fxFlex.gt-sm="100" fxFlex="100" fxLayoutAlign="flex-start center">\r\n                    <button mat-raised-button type="button" color="secondary" (click)="routeToadduser();"\r\n                        class="addbtn m-r-10 height-45">{{\'manageusers.add\' | translate}}</button>\r\n                    <button mat-raised-button type="button" color="primary" (click)="clickEvent();"\r\n                        class="filter height-45">{{filtername}}<i class="fa fa-filter m-l-6"\r\n                            aria-hidden="true"></i></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout="row wrap">\r\n            <div fxFlex.gt-sm="100" fxFlex="100" class="tabforclientelenew">\r\n                <div class="awaredtable">\r\n                    <mat-table #table class="scrolldata" [dataSource]="Usersrecord" matSortActive="opalusermst_pk"  matSortDirection="desc" multiTemplateDataRows matSort\r\n                        matSortDisableClear>\r\n                        <ng-container matColumnDef="oshm_stakeholdertype">\r\n                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.staholtyp\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                {{coursedata.stakeholdertype}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="oum_idnumber">\r\n                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.civino\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                {{coursedata.civilNo}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="stafname">\r\n                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.stafnam\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                {{coursedata.stafName}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="emailid">\r\n                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.emaiid\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                {{coursedata.emailid}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="mobilenumber">\r\n                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.mobnum\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                {{coursedata.mobilno}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="role">\r\n                            <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.role\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                    {{coursedata.roleName_en}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="thirdpartyagent">\r\n                            <mat-header-cell fxFlex="230px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.thirdparagen\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="Batch No" fxFlex="230px" *matCellDef="let coursedata">\r\n                                {{coursedata.isthirdPartyAgent}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="status">\r\n                            <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.stat\' | translate}}</mat-header-cell>\r\n                            <mat-cell data-label="{{\'batch.branchname\' |translate}}" fxFlex="160px" *matCellDef="let coursedata">\r\n                            <p *ngIf="coursedata.status == \'A\'" class="print flexaligntag">{{\'manageusers.activ\' | translate}}</p>\r\n                            <p *ngIf="coursedata.status == \'I\'"  class="declined flexaligntag">{{\'manageusers.inactiv\' | translate}}</p>\r\n                            <p *ngIf="coursedata.status == \'E\'"  class="pending flexaligntag">{{\'manageusers.emaiconfpen\' | translate}}</p>\r\n                            <p *ngIf="coursedata.status == \'D\'"  class="pending flexaligntag">{{\'manageusers.deact\' | translate}}</p>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="added_on">\r\n                            <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.addon\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                    {{coursedata.addedOn}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="lastupdated">\r\n                            <mat-header-cell fxFlex="180px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.lasupdaon\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="180px" *matCellDef="let coursedata">\r\n                                    {{coursedata.lastUpdateOn}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="action">\r\n                            <mat-header-cell fxFlex="160px" mat-header-cell *matHeaderCellDef\r\n                                mat-sort-header>{{\'manageusers.actio\' | translate}}</mat-header-cell>\r\n                                <mat-cell data-label="Batch Type" fxFlex="160px" *matCellDef="let coursedata">\r\n                                    <button mat-button [matMenuTriggerFor]="menu"><mat-icon>more_horiz</mat-icon></button>\r\n                                    <mat-menu #menu="matMenu" class="actionmatmenu">\r\n                                        <button mat-menu-item (click)="viewroute()">{{\'manageusers.view\' | translate}}</button>\r\n                                        <button mat-menu-item>{{\'manageusers.edit\' | translate}}</button>\r\n                                        <button *ngIf="coursedata.status == \'I\'" mat-menu-item>{{\'manageusers.activ\' | translate}}</button>\r\n                                        <button *ngIf="coursedata.status == \'A\'" mat-menu-item>{{\'manageusers.deact\' | translate}}    </button>\r\n                                    </mat-menu>   \r\n                                </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-first">\r\n                            <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="stakeholdertype">\r\n                                        <mat-option value="OPAL Admin">{{\'manageusers.opaladmin\' | translate}}</mat-option>\r\n                                        <mat-option value="Training Evaluation Centre">{{\'manageusers.traievacen\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-second">\r\n                            <mat-header-cell fxFlex="220px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                <input [formControl]="civilNo" matInput>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-three">\r\n                            <mat-header-cell fxFlex="235px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                <input [formControl]="stafName" matInput>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-four">\r\n                            <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                <input [formControl]="emailid" matInput>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-five">\r\n                            <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                <input [formControl]="mobilno" matInput>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-six">\r\n                            <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="roleName_en">\r\n                                        <mat-option value="Auditor">{{\'manageusers.audi\' | translate}}</mat-option>\r\n                                        <mat-option value="Assessor">{{\'manageusers.tuttrai\' | translate}}</mat-option>\r\n                                        <mat-option value="Finance">{{\'manageusers.assrs\' | translate}}</mat-option>\r\n                                        <mat-option value="Authority">{{\'manageusers.authar\' | translate}}</mat-option>\r\n                                        <mat-option value="Quality Manager">{{\'manageusers.qualman\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-seven">\r\n                            <mat-header-cell fxFlex="230px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                <input [formControl]="isthirdPartyAgent" matInput>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-eight">\r\n                            <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="status">\r\n                                        <mat-option value="A">{{\'manageusers.activ\' | translate}}</mat-option>\r\n                                        <mat-option value="I">{{\'manageusers.inactiv\' | translate}}</mat-option>\r\n                                        <mat-option value="E">{{\'manageusers.emaiconfpen\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-nine">\r\n                            <mat-header-cell fxFlex="160px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                    <mat-label>{{\'manageusers.sele\' | translate}}</mat-label>\r\n                                    <mat-select [formControl]="status">\r\n                                        <mat-option value="1">{{\'manageusers.activ\' | translate}}</mat-option>\r\n                                        <mat-option value="2">{{\'manageusers.inactiv\' | translate}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef="row-ten">\r\n                            <mat-header-cell fxFlex="180px" class="serachrow" *matHeaderCellDef\r\n                                style="text-align:center">\r\n                                <mat-form-field class="filter" appearance="outline">\r\n                                <mat-label>{{\'manageusers.searc\' | translate}}</mat-label>\r\n                                <input matInput [formControl]="addedOn" (click)="addedon.open()"\r\n                                    [matDatepicker]="addedon">\r\n                                <mat-datepicker-toggle matSuffix [for]="addedon"></mat-datepicker-toggle>\r\n                                <mat-datepicker #addedon></mat-datepicker>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                        </ng-container>\r\n                       \r\n                        <tr mat-header-row  id="headerrowcells" *matHeaderRowDef="rolesrecordcolumn"></tr>\r\n                        <mat-header-row id="searchrow"\r\n                            *matHeaderRowDef="[\'row-first\',\'row-second\',\'row-three\',\'row-four\',\'row-five\',\'row-six\',\'row-seven\',\'row-eight\',\'row-nine\',\'row-ten\']">\r\n                        </mat-header-row>\r\n                        <tr mat-row *matRowDef="let element; columns: rolesrecordcolumn;"\r\n                            class="example-element-row">\r\n                        </tr>\r\n                    </mat-table>\r\n                </div>\r\n                <div fxLayout="row" fxLayoutAlign="end" class="m-b-15 m-t-30">\r\n                    <div fxFlex.gt-sm="100" fxFlex="100" class="footerpaginator">\r\n                        <mat-paginator class="p-r-10" ngClass.xs="block" ngClass.sm="block"\r\n                            class="masterPage masterbottom " showFirstLastButtons [pageSize]="paginator?.pageSize"\r\n                            (page)="syncPrimaryPaginator($event);" [pageIndex]="paginator?.pageIndex"\r\n                            [length]="paginator?.length" [pageSizeOptions]="paginator?.pageSizeOptions">\r\n                        </mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<app-addusers *ngIf="addrolecreationpage" (rolegridlistdata)="gridlistdata($event)" (addrolecreation)="addrolecreationdata($event)"></app-addusers>'}}]);